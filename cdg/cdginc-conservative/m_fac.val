/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : m_fac.val                                                      |
| SOURCE  : "msg\fac.mdf"                                                  |
| LastModified : "2002-01-14"                                              |
| IdAndVersion : "6147.608.00.205"                                         |
| SrcFileTime  : "Mon Jan 14 11:02:22 2008"                                |
| Generated by CCDGEN_2.5.5A on Thu Sep 25 09:52:55 2014                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : NONE
 * COMPATIBILITY_DEFINES  : NO (require PREFIX)
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 */


#ifndef M_FAC_VAL
#define M_FAC_VAL


#define CDG_ENTER__M_FAC_VAL

#define CDG_ENTER__FILENAME _M_FAC_VAL
#define CDG_ENTER__M_FAC_VAL__FILE_TYPE CDGINC
#define CDG_ENTER__M_FAC_VAL__LAST_MODIFIED _2002_01_14
#define CDG_ENTER__M_FAC_VAL__ID_AND_VERSION _6147_608_00_205

#define CDG_ENTER__M_FAC_VAL__SRC_FILE_TIME _Mon_Jan_14_11_02_22_2008

#include "CDG_ENTER.h"

#undef CDG_ENTER__M_FAC_VAL

#undef CDG_ENTER__FILENAME


/*
 * Value constants for VAL_op_code
 */
#define OPC_REGISTER_SS                (0xa)      /* Register supplementary service */
#define OPC_ERASE_SS                   (0xb)      /* Erase supplementary service    */
#define OPC_ACTIVATE_SS                (0xc)      /* Activate supplementary service */
#define OPC_DEACTIVATE_SS              (0xd)      /* Deactivate supplementary service */
#define OPC_INTERROGATE_SS             (0xe)      /* Interrogate supplementary service */
#define OPC_NOTIFY_SS                  (0x10)     /* Notify supplementary service   */
#define OPC_REGISTER_PASSWORD          (0x11)     /* Register password              */
#define OPC_GET_PASSWORD               (0x12)     /* Get password                   */
#define OPC_PROC_UNSTRUCT_SS_DATA      (0x13)     /* Process unstructured supplementary service Data */
#define OPC_FWD_CHECK_SS_IND           (0x26)     /* Forward check supplementary service indication */
#define OPC_PROC_UNSTRUCT_SS_REQ       (0x3b)     /* Process unstructured supplementary service request */
#define OPC_UNSTRUCT_SS_REQ            (0x3c)     /* Unstructured supplementary service request */
#define OPC_UNSTRUCT_SS_NOTIFY         (0x3d)     /* Unstructured supplementary service notify */
#define OPC_ERASE_CC_ENTRY             (0x4d)     /* Erase CC entry                 */
#define OPC_CALL_DEFLECTION            (0x75)     /* Call deflection                */
#define OPC_USER_USER_SERVICE          (0x76)     /* User to user service           */
#define OPC_ACC_REGISTER_CC_ENTRY      (0x77)     /* Access register CC entry       */
#define OPC_FWD_CUG_INFO               (0x78)     /* Forward closed user group information */
#define OPC_SPLIT_MPTY                 (0x79)     /* Split multiparty               */
#define OPC_RETRIEVE_MPTY              (0x7a)     /* Retrieve multiparty            */
#define OPC_HOLD_MPTY                  (0x7b)     /* Hold multiparty                */
#define OPC_BUILD_MPTY                 (0x7c)     /* Build multiparty               */
#define OPC_FWD_CHARGE_ADVICE          (0x7d)     /* Forward charge advice          */
#define OPC_EXPLICIT_CT                (0x7e)     /* Explicit call transfer         */

/*
 * Value constants for VAL_err_code
 */
#define ERR_UNKNOWN_SUBSCRIBER         (0x1)      /* Register supplementary service */
#define ERR_ILLEGAL_SUBSCRIBER         (0x9)      /* Erase supplementary service    */
#define ERR_BEARER_SVC_NOT_PROV        (0xa)      /* Bearer service not provisioned */
#define ERR_TELE_SVC_NOT_PROV          (0xb)      /* Teleservice not provisioned    */
#define ERR_ILLEGAL_EQUIPMENT          (0xc)      /* Illegal Equipment              */
#define ERR_CALL_BARRED                (0xd)      /* Call barred                    */
#define ERR_ILLEGAL_SS_OPERATION       (0x10)     /* Illegal supplementary service operation */
#define ERR_SS_ERR_STATUS              (0x11)     /* Supplementary service error status */
#define ERR_SS_NOT_AVAIL               (0x12)     /* Supplementary service not available */
#define ERR_SS_SUBS_VIOLATION          (0x13)     /* Supplementary service subscript vialation */
#define ERR_SS_INCOMP                  (0x14)     /* Supplementary service incompatible */
#define ERR_FAC_NOT_SUPPORTED          (0x15)     /* Facility not supported         */
#define ERR_ABSENT_SUBS                (0x1b)     /* Absent subscriber              */
#define ERR_SHORT_TERM_DENIAL          (0x1d)     /* Short term denial              */
#define ERR_LONG_TERM_DENIAL           (0x1e)     /* Long term denial               */
#define ERR_SYSTEM_FAIL                (0x22)     /* System failure                 */
#define ERR_DATA_MISSING               (0x23)     /* Data Missing                   */
#define ERR_UNEXPECT_DATA              (0x24)     /* Unexpected data value          */
#define ERR_PWD_REG_FAIL               (0x25)     /* Password registration failure  */
#define ERR_NEG_PWD_CHECK              (0x26)     /* Negative password check        */
#define ERR_NUM_PWD_VIOLATION          (0x2b)     /* Number of password attempts violation */
#define ERR_UNKNOWN_ALPHA              (0x47)     /* Unknown alphabet               */
#define ERR_USSD_BUSY                  (0x48)     /* Unstructured supplementary service data busy */
#define ERR_REJ_BY_USER                (0x79)     /* Rejected by user               */
#define ERR_REJ_BY_NETWORK             (0x7a)     /* Rejected by network            */
#define ERR_DEFL_TO_SRVD_SUBSC         (0x7b)     /* Deflection to served subscriber */
#define ERR_SPEC_SERVICE_CODE          (0x7c)     /* Special service code           */
#define ERR_INV_DEFL_TO_NUMBER         (0x7d)     /* Invalid deflected to number    */
#define ERR_MAX_NUM_MPTY_EXCEED        (0x7e)     /* Maximum number of multiparty participants exceeded */
#define ERR_RESOURCE_NOT_AVAIL         (0x7f)     /* Resource not available         */

/*
 * Value constants for VAL_gen_problem
 */
#define GEN_PROB_UNRECOG_CMP           (0x0)      /* Unrecognized component         */
#define GEN_PROB_MISTYPED_CMP          (0x1)      /* Mistype component              */
#define GEN_PROB_BAD_STRUCT_CMP        (0x2)      /* Badly structured component     */

/*
 * Value constants for VAL_inv_problem
 */
#define INV_PROB_DUPL_INV_ID           (0x0)      /* Duplicate invoke ID            */
#define INV_PROB_UNRECOG_OP            (0x1)      /* Unrecognized operation         */
#define INV_PROB_MISTYPED_PAR          (0x2)      /* Mistyped parameter             */
#define INV_PROB_RESOURCE_LIM          (0x3)      /* Resource limitation            */
#define INV_PROB_INIT_RELEASE          (0x4)      /* Initiating release             */
#define INV_PROB_UNRECOG_LNK_ID        (0x5)      /* Unrecognized linked ID         */
#define INV_PROB_LNK_RES_UNEXP         (0x6)      /* Linked response unexpected     */
#define INV_PROB_UNEXP_LNK_OP          (0x7)      /* Unexpected linked operation    */

/*
 * Value constants for VAL_res_problem
 */
#define RES_PROB_UNRECOG_INV_ID        (0x0)      /* Unrecognized invoke ID         */
#define RES_PROB_RET_RES_UNEXP         (0x1)      /* Return result unexpected       */
#define RES_PROB_MISTYPED_PAR          (0x2)      /* Mistyped parameter             */

/*
 * Value constants for VAL_err_problem
 */
#define ERR_PROB_UNRECOG_INV_ID        (0x0)      /* Unrecognized invoke ID         */
#define ERR_PROB_RET_ERR_UNEXP         (0x1)      /* Return result unexpected       */
#define ERR_PROB_UNRECOG_ERR           (0x2)      /* Unrecognized error             */
#define ERR_PROB_UNEXP_ERR             (0x3)      /* Unexpected error               */
#define ERR_PROB_MISTYPED_PAR          (0x4)      /* Mistyped parameter             */

/*
 * Value constants for VAL_ssCode
 */
#define SS_CD_ALL_SS                   (0x0)      /* all SS                         */
#define SS_CD_ALL_LISS                 (0x10)     /* all line identification SS     */
#define SS_CD_CLIP                     (0x11)     /* calling line identification presentation */
#define SS_CD_CLIR                     (0x12)     /* calling line identification restriction */
#define SS_CD_COLP                     (0x13)     /* connected line identification presentation */
#define SS_CD_COLR                     (0x14)     /* connected line identification restriction */
#define SS_CD_MCI                      (0x15)     /* malicious call identification  */
#define SS_CD_ALL_NISS                 (0x18)     /* all name identification SS     */
#define SS_CD_CNAP                     (0x19)     /* calling name presentation      */
#define SS_CD_ALL_FWSS                 (0x20)     /* all forwarding SS              */
#define SS_CD_CFU                      (0x21)     /* call forwarding unconditional  */
#define SS_CD_CD                       (0x24)     /* call deflection                */
#define SS_CD_ALL_CFWSS                (0x28)     /* all conditional forwarding SS  */
#define SS_CD_CFB                      (0x29)     /* call forwarding on mobile subscriber busy */
#define SS_CD_CFNRY                    (0x2a)     /* call forwarding on no reply    */
#define SS_CD_CFNRC                    (0x2b)     /* call forwarding on mobile subscriber not reachable */
#define SS_CD_ALL_COSS                 (0x30)     /* all call offering SS           */
#define SS_CD_CT                       (0x31)     /* explicit call transfer         */
#define SS_CD_MAH                      (0x32)     /* mobile access hunting          */
#define SS_CD_ALL_CCSS                 (0x40)     /* all Call completion SS         */
#define SS_CD_CW                       (0x41)     /* call waiting                   */
#define SS_CD_HLD                      (0x42)     /* call hold                      */
#define SS_CD_CCBS                     (0x43)     /* completion of call to busy subscribers, originating side */
#define SS_CD_CCBS_B                   (0x44)     /* completion of call to busy subscribers, destination side */
#define SS_CD_MC                       (0x45)     /* multi call                     */
#define SS_CD_ALL_MPSS                 (0x50)     /* all multiparty SS              */
#define SS_CD_MLPTY                    (0x51)     /* multiparty                     */
#define SS_CD_ALL_CISS                 (0x60)     /* all community of interest SS   */
#define SS_CD_CUG                      (0x61)     /* closed user group              */
#define SS_CD_ALL_CHSS                 (0x70)     /* all charging SS                */
#define SS_CD_AOCI                     (0x71)     /* advice of charge information   */
#define SS_CD_AOCC                     (0x72)     /* advice of charge charging      */
#define SS_CD_ALL_AITSS                (0x80)     /* all additional information transfer SS */
#define SS_CD_UUS1                     (0x81)     /* UUS1 user-to-user signalling   */
#define SS_CD_UUS2                     (0x82)     /* UUS2 user-to-user signalling   */
#define SS_CD_UUS3                     (0x83)     /* UUS3 user-to-user signalling   */
#define SS_CD_ALL_CBSS                 (0x90)     /* all barring SS                 */
#define SS_CD_BOC                      (0x91)     /* barring of outgoing calls      */
#define SS_CD_BAOC                     (0x92)     /* barring of all outgoing calls  */
#define SS_CD_BOIC                     (0x93)     /* barring of outgoing international calls */
#define SS_CD_BOICXH                   (0x94)     /* barring of outgoing international calls except those directed to the home PLMN */
#define SS_CD_BIC                      (0x99)     /* barring of incoming calls      */
#define SS_CD_BAIC                     (0x9a)     /* barring of all incoming calls  */
#define SS_CD_BICRM                    (0x9b)     /* barring of incoming calls when roaming outside home PLMN Country */
#define SS_CD_ALL_CPSS                 (0xa0)     /* all call priority SS           */
#define SS_CD_EMLPP                    (0xa1)     /* enhanced Multilevel Precedence Pre-emption service */
#define SS_CD_ALL_PEC                  (0xb0)     /* all LCS privacy exception classes */
#define SS_CD_UNIVERSAL                (0xb1)     /* allow location by any LCS client */
#define SS_CD_CALLREL                  (0xb2)     /* allow location by any LCS client to which a call is established from the target MS */
#define SS_CD_CALLUNREL                (0xb3)     /* allow location by designated external value added LCS clients */
#define SS_CD_PLMN_OP                  (0xb4)     /* allow location by designated PLMN operator LCS clients */
#define SS_CD_ALL_MOLR                 (0xc0)     /* all Mobile Originating Location Request Classes */
#define SS_CD_BSL                      (0xc1)     /* allow an MS to request its own location (BasicSelfLocation) */
#define SS_CD_ASL                      (0xc2)     /* allow an MS to perform self location without interaction with the PLMN */
#define SS_CD_3RDPTY                   (0xc3)     /* allow an MS to request transfer of its location to another LCS client */
#define SS_CD_ALL_PSSS                 (0xf0)     /* all PLMN specific              */
#define SS_CD_PLMN1                    (0xf1)     /* PLMN specific SS 1             */
#define SS_CD_PLMN2                    (0xf2)     /* PLMN specific SS 2             */
#define SS_CD_PLMN3                    (0xf3)     /* PLMN specific SS 3             */
#define SS_CD_PLMN4                    (0xf4)     /* PLMN specific SS 4             */
#define SS_CD_PLMN5                    (0xf5)     /* PLMN specific SS 5             */
#define SS_CD_PLMN6                    (0xf6)     /* PLMN specific SS 6             */
#define SS_CD_PLMN7                    (0xf7)     /* PLMN specific SS 7             */
#define SS_CD_PLMN8                    (0xf8)     /* PLMN specific SS 8             */
#define SS_CD_PLMN9                    (0xf9)     /* PLMN specific SS 9             */
#define SS_CD_PLMNA                    (0xfa)     /* PLMN specific SS A             */
#define SS_CD_PLMNB                    (0xfb)     /* PLMN specific SS B             */
#define SS_CD_PLMNC                    (0xfc)     /* PLMN specific SS C             */
#define SS_CD_PLMND                    (0xfd)     /* PLMN specific SS D             */
#define SS_CD_PLMNE                    (0xfe)     /* PLMN specific SS E             */
#define SS_CD_PLMNF                    (0xff)     /* PLMN specific SS F             */

/*
 * Value constants for VAL_bearerService
 */
#define BS_CD_ALL_BS                   (0x0)      /* all bearer services            */
#define BS_CD_ALL_DATA_CDA             (0x10)     /* all data CDA services          */
#define BS_CD_CDA_300                  (0x11)     /* data CDA  300 bps              */
#define BS_CD_CDA_1200                 (0x12)     /* data CDA 1200 bps              */
#define BS_CD_CDA_1200_75              (0x13)     /* data CDA 1200/75 bps           */
#define BS_CD_CDA_2400                 (0x14)     /* data CDA 2400 bps              */
#define BS_CD_CDA_4800                 (0x15)     /* data CDA 4800 bps              */
#define BS_CD_CDA_9600                 (0x16)     /* data CDA 9600 bps              */
#define BS_CD_ALL_DATA_CDS             (0x18)     /* all data CDS services          */
#define BS_CD_CDS_1200                 (0x1a)     /* data CDS 1200 bps              */
#define BS_CD_CDS_2400                 (0x1c)     /* data CDS 2400 bps              */
#define BS_CD_CDS_4800                 (0x1d)     /* data CDS 4800 bps              */
#define BS_CD_CDS_9600                 (0x1e)     /* data CDS 9600 bps              */
#define BS_CD_ALL_DATA_PAD             (0x20)     /* all data PAD services          */
#define BS_CD_PAD_300                  (0x21)     /* data PAD  300 bps              */
#define BS_CD_PAD_1200                 (0x22)     /* data PAD 1200 bps              */
#define BS_CD_PAD_1200_75              (0x23)     /* data PAD 1200/75 bps           */
#define BS_CD_PAD_2400                 (0x24)     /* data PAD 2400 bps              */
#define BS_CD_PAD_4800                 (0x25)     /* data PAD 4800 bps              */
#define BS_CD_PAD_9600                 (0x26)     /* data PAD 9600 bps              */
#define BS_CD_ALL_DATA_PDS             (0x28)     /* all data PDS services          */
#define BS_CD_PDS_2400                 (0x2c)     /* data PDS 2400 bps              */
#define BS_CD_PDS_4800                 (0x2d)     /* data PDS 4800 bps              */
#define BS_CD_PDS_9600                 (0x2e)     /* data PDS 9600 bps              */
#define BS_CD_SPCH_ALT_CDA             (0x30)     /* all data CDA alter. speech     */
#define BS_CD_SPCH_ALT_CDS             (0x38)     /* all data CDS alter. speech     */
#define BS_CD_SPCH_FLD_CDA             (0x40)     /* all data speech followed CDA   */
#define BS_CD_SPCH_FLD_CDS             (0x48)     /* all data speech followed CDA   */
#define BS_CD_ALL_DC_ASYN              (0x50)     /* all data circuit asynchronous  */
#define BS_CD_ALL_ASYN                 (0x60)     /* all asynchronous services      */
#define BS_CD_ALL_DC_SYN               (0x58)     /* all data circuit synchronous   */
#define BS_CD_ALL_SYN                  (0x68)     /* all synchronous services       */
#define BS_CD_ALL_PSSS                 (0xd0)     /* all PLMN specific BS           */
#define BS_CD_PLMN1                    (0xd1)     /* PLMN specific 1                */
#define BS_CD_PLMN2                    (0xd2)     /* PLMN specific 2                */
#define BS_CD_PLMN3                    (0xd3)     /* PLMN specific 3                */
#define BS_CD_PLMN4                    (0xd4)     /* PLMN specific 4                */
#define BS_CD_PLMN5                    (0xd5)     /* PLMN specific 5                */
#define BS_CD_PLMN6                    (0xd6)     /* PLMN specific 6                */
#define BS_CD_PLMN7                    (0xd7)     /* PLMN specific 7                */
#define BS_CD_PLMN8                    (0xd8)     /* PLMN specific 8                */
#define BS_CD_PLMN9                    (0xd9)     /* PLMN specific 9                */
#define BS_CD_PLMNA                    (0xda)     /* PLMN specific A                */
#define BS_CD_PLMNB                    (0xdb)     /* PLMN specific B                */
#define BS_CD_PLMNC                    (0xdc)     /* PLMN specific C                */
#define BS_CD_PLMND                    (0xdd)     /* PLMN specific D                */
#define BS_CD_PLMNE                    (0xde)     /* PLMN specific E                */
#define BS_CD_PLMNF                    (0xdf)     /* PLMN specific F                */

/*
 * Value constants for VAL_teleservice
 */
#define TS_CD_ALL_TS                   (0x0)      /* all teleservices               */
#define TS_CD_ALL_SPCH                 (0x10)     /* All speech transmission services */
#define TS_CD_TLPHNY                   (0x11)     /* telephony                      */
#define TS_CD_EMRGNCY                  (0x12)     /* emergency calls                */
#define TS_CD_ALL_SMS                  (0x20)     /* all SMS services               */
#define TS_CD_SMS_MT                   (0x21)     /* SMS MT PP                      */
#define TS_CD_SMS_MO                   (0x22)     /* SMS MO PP                      */
#define TS_CD_ALL_FAX                  (0x60)     /* all FAX transmission services  */
#define TS_CD_FAX3_ALT_SPCH            (0x61)     /* FAX group 3 alter. speech      */
#define TS_CD_FAX3_AUTO                (0x62)     /* FAX group 3 automatic          */
#define TS_CD_FAX4                     (0x63)     /* FAX group 4                    */
#define TS_CD_ALL_DATA                 (0x70)     /* all FAX and SMS services       */
#define TS_CD_ALL_XCPT_SMS             (0x80)     /* all FAX and speech services    */
#define TS_CD_ALL_PSSS                 (0xd0)     /* all PLMN specific TS           */
#define TS_CD_PLMN1                    (0xd1)     /* PLMN specific TS 1             */
#define TS_CD_PLMN2                    (0xd2)     /* PLMN specific TS 2             */
#define TS_CD_PLMN3                    (0xd3)     /* PLMN specific TS 3             */
#define TS_CD_PLMN4                    (0xd4)     /* PLMN specific TS 4             */
#define TS_CD_PLMN5                    (0xd5)     /* PLMN specific TS 5             */
#define TS_CD_PLMN6                    (0xd6)     /* PLMN specific TS 6             */
#define TS_CD_PLMN7                    (0xd7)     /* PLMN specific TS 7             */
#define TS_CD_PLMN8                    (0xd8)     /* PLMN specific TS 8             */
#define TS_CD_PLMN9                    (0xd9)     /* PLMN specific TS 9             */
#define TS_CD_PLMNA                    (0xda)     /* PLMN specific TS A             */
#define TS_CD_PLMNB                    (0xdb)     /* PLMN specific TS B             */
#define TS_CD_PLMNC                    (0xdc)     /* PLMN specific TS C             */
#define TS_CD_PLMND                    (0xdd)     /* PLMN specific TS D             */
#define TS_CD_PLMNE                    (0xde)     /* PLMN specific TS E             */
#define TS_CD_PLMNF                    (0xdf)     /* PLMN specific TS F             */

/*
 * Value constants for VAL_noa
 */
#define VAL_NOA___DEF                  (0x0)      /* Reserved                       */
#define NOA_UNKNOWN                    (0x0)      /* unknown                        */
#define NOA_INTER_NUM                  (0x1)      /* international number           */
#define NOA_NATIO_NUM                  (0x2)      /* national significant number    */
#define NOA_NETW_NUM                   (0x3)      /* network specific number        */
#define NOA_SUBSC_NUM                  (0x4)      /* subscriber number              */
#define NOA_ABBRV_NUM                  (0x6)      /* abbreviated number             */

/*
 * Value constants for VAL_npi
 */
#define VAL_NPI___DEF                  (0x0)      /* reserved                       */
#define NPI_UNKNOWN                    (0x0)      /* unknown                        */
#define NPI_ISDN                       (0x1)      /* ISDN/Telephony Numbering Plan (Rec CCITT E.164) */
#define NPI_X121                       (0x3)      /* data numbering plan (CCITT Rec X.121) */
#define NPI_F69                        (0x4)      /* telex numbering plan (CCITT Rec F.69) */
#define NPI_LAND_MOBILE                (0x6)      /* land mobile numbering plan (CCITT Rec E.212) */
#define NPI_NATIONAL                   (0x8)      /* land mobile numbering plan (CCITT Rec E.212) */
#define NPI_PRIVATE                    (0x9)      /* Private numbering plan         */

/*
 * Value constants for VAL_tos
 */
#define VAL_TOS___DEF                  (0x0)      /* Reserved                       */
#define TOS_X213                       (0x0)      /* NSAP (X.213/ISO 8348 AD2)      */
#define TOS_USER                       (0x2)      /* User Specified                 */

/*
 * Value constants for VAL_oei
 */
#define OEI_EVEN                       (0x0)      /* even number of address signals */
#define OEI_ODD                        (0x1)      /* odd number of address signals  */

/*
 * Value constants for VAL_ssStatus
 */
#define SSS_A                          (0x1)      /* Active                         */
#define SSS_R                          (0x2)      /* Registered                     */
#define SSS_RA                         (0x3)      /* Registered,Active              */
#define SSS_P                          (0x4)      /* Provisioned                    */
#define SSS_PA                         (0x5)      /* Provisioned,Active             */
#define SSS_PR                         (0x6)      /* Provisioned,Registered         */
#define SSS_PRA                        (0x7)      /* Provisioned,Registered,Active  */
#define SSS_Q                          (0x8)      /* Quiescent                      */
#define SSS_QA                         (0x9)      /* Quiescent,Active               */
#define SSS_QR                         (0xa)      /* Quiescent,Registered           */
#define SSS_QRA                        (0xb)      /* Quiescent,Registered,Active    */
#define SSS_QP                         (0xc)      /* Quiescent,Provisioned          */
#define SSS_QPA                        (0xd)      /* Quiescent,Provisioned,Active   */
#define SSS_QPR                        (0xe)      /* Quiescent,Provisioned,Registered */
#define SSS_QPRA                       (0xf)      /* Quiescent,Provisioned,Registered,Active */

/*
 * Value constants for VAL_notify_fwd_pty
 */
#define NTYF_V1_NO_NTFY                (0x0)      /* Version 1 No Notify            */
#define NTYF_V1_NTFY1                  (0x1)      /* Version 1 Notify               */
#define NTYF_V1_NTFY2                  (0x2)      /* Version 1 Notify               */
#define NTYF_V2_NO_NTFY                (0x0)      /* Version 2 No Notify            */
#define NTYF_V2_NTFY                   (0x2)      /* Version 2 Notify               */

/*
 * Value constants for VAL_notify_clg_pty
 */
#define NTYC_V1_NO_NTFY                (0x0)      /* Version 1 No Notify            */
#define NTYC_V1_NTFY1                  (0x1)      /* Version 1 Notify               */
#define NTYC_V1_NTFY2                  (0x2)      /* Version 1 Notify               */
#define NTYC_V2_NO_NTFY                (0x0)      /* Version 2 No Notify            */
#define NTYC_V2_NTFY                   (0x2)      /* Version 2 Notify               */

/*
 * Value constants for VAL_fwd_reason
 */
#define FWDR_V2_MS_NOT_REACH           (0x0)      /* MS not reachable               */
#define FWDR_V2_MS_BUSY                (0x1)      /* MS is busy                     */
#define FWDR_V2_NO_REPLY               (0x2)      /* No reply                       */
#define FWDR_V2_UNCONDITIONAL          (0x3)      /* Unconditional                  */

/*
 * Value constants for VAL_intraCugOptions
 */
#define ICUG_NO_RESTRICTIONS           (0x0)      /* no CUG restrictions            */
#define ICUG_INCOM_CALL_BARRED         (0x1)      /* CUG incoming call barred       */
#define ICUG_OUTGO_CALL_BARRED         (0x2)      /* CUG outgoing call barred       */

/*
 * Value constants for VAL_interCugRestrictions
 */
#define ICUGR_FAC_ONLY                 (0x0)      /* CUG only facilities            */
#define ICUGR_OUTGO_ACCESS             (0x1)      /* CUG with outgoing access       */
#define ICUGR_INCOM_ACCESS             (0x2)      /* CUG with incoming access       */
#define ICUGR_BOTH_ACCESS              (0x3)      /* CUG with both (in/out) access  */

/*
 * Value constants for VAL_cliRestrictionOption
 */
#define CLIR_OPT_PERMANENT             (0x0)      /* CLI Restriction permanent      */
#define CLIR_OPT_TEMPORARY             (0x1)      /* CLI Restriction temporary default */
#define CLIR_OPT_ALLOWED               (0x2)      /* CLI Allowed temporary default  */

/*
 * Value constants for VAL_overrideCategory
 */
#define OVR_CAT_ENABLED                (0x0)      /* Override enabled               */
#define OVR_CAT_DISABLED               (0x1)      /* Override disabled              */

/*
 * Value constants for VAL_clgSubscriber
 */
#define CLG_A_NO_INFO                  (0x0)      /* No information content         */
#define CLG_A_OUTG_CALL_FWD_C          (0x1)      /* Outgoing call has been forwarded to C */

/*
 * Value constants for VAL_fwgSubscriber
 */
#define FWG_B_NO_INFO                  (0x0)      /* No information content         */
#define FWG_B_INC_CALL_FWD_C           (0x1)      /* Incoming call has been forwarded to C */

/*
 * Value constants for VAL_fwdSubscriber
 */
#define FWD_C_NO_INFO                  (0x0)      /* No information content         */
#define FWD_C_INC_CALL_FWD             (0x1)      /* Incoming call is a forwarded call */

/*
 * Value constants for VAL_callBarringCause
 */
#define BARC_SERV_ACTIVE               (0x0)      /* Barring service active         */
#define BARC_OPERATOR_BARR             (0x1)      /* Operator barring               */

/*
 * Value constants for VAL_networkResource
 */
#define NET_RCE_PLMN                   (0x0)      /* Network resource PLMN          */
#define NET_RCE_HLR                    (0x1)      /* Network resource HLR           */
#define NET_RCE_VLR                    (0x2)      /* Network resource VLR           */
#define NET_RCE_PVLR                   (0x3)      /* Network resource PVLR          */
#define NET_RCE_CTRL_MSC               (0x4)      /* Network resource controlling MSC */
#define NET_RCE_VMSC                   (0x5)      /* Network resource VMSC          */
#define NET_RCE_EIR                    (0x6)      /* Network resource EIR           */
#define NET_RCE_RSS                    (0x7)      /* Network resource RSS           */

/*
 * Value constants for VAL_pwRegistrationFailureCause
 */
#define PWR_FAIL_UNDETERM              (0x0)      /* Undetermined                   */
#define PWR_FAIL_INVALID_FORM          (0x1)      /* Invalid format                 */
#define PWR_FAIL_NEW_PW_MISS           (0x2)      /* New passwords mismatch         */

/*
 * Value constants for VAL_callOnHoldIndicator
 */
#define CHLD_CALL_RETRIEVED            (0x0)      /* Call retrieved                 */
#define CHLD_CALL_ON_HOLD              (0x1)      /* Call on hold                   */

/*
 * Value constants for VAL_ectCallState
 */
#define ECT_CS_ALERTING                (0x0)      /* Alerting                       */
#define ECT_CS_ACTIVE                  (0x1)      /* Active                         */

/*
 * Value constants for VAL_guidanceInfo
 */
#define GUI_ENTER_PW                   (0x0)      /* Enter password                 */
#define GUI_ENTER_NEW_PW               (0x1)      /* Enter new pasword              */
#define GUI_ENTER_NEW_PW_AGAIN         (0x2)      /* Enter new password again       */
#define GUI_BAD_PW_RETRY               (0x3)      /* Bad password - try again       */
#define GUI_BAD_PW_FORM                (0x4)      /* Bad password format - try again */

/*
 * Value constants for VAL_uusService
 */
#define UUS_1                          (0x1)      /* User user service 1            */
#define UUS_2                          (0x2)      /* User user service 2            */
#define UUS_3                          (0x3)      /* User user service 3            */

/*
 * Value constants for VAL_uusRequired
 */
#define UUS_NOT_REQUIRED               (0x0)      /* User user service not required */

/*
 * Value constants for VAL_unknwnSubscrDiag
 */
#define USD_IMSI_UNKNOWN               (0x0)      /* IMSI unknown                   */
#define USD_GPRS_SUBSCR_UNKNOWN        (0x1)      /* GPRS subscription unknown      */

/*
 * Value constants for VAL_absentSubscriberReason
 */
#define ASR_IMSI_DETACH                (0x0)      /* IMSI detach                    */
#define ASR_RESTRICTED_AREA            (0x1)      /* Restricted area                */
#define ASR_NO_PAGE_RESPONSE           (0x2)      /* No page response               */

/*
 * user defined constants
 */
#define MAX_PARTY_NUM                  (0x26)     
#define MAX_SUBADDR_NUM                (0x14)     
#define MAX_CUGS_NUM                   (0xa)      
#define MAX_CUGF_NUM                   (0xd)      
#define MAX_FF_NUM                     (0xd)      
#define MAX_BS_NUM                     (0xd)      
#define MAX_CBF_NUM                    (0xd)      
#define MAX_PWD_NUM                    (0x4)      
#define MAX_CCBSF_NUM                  (0x5)      
#define MAX_EXT_NUM                    (0xa)      
#define MAX_USSD_DATA                  (0xc8)     
#define MAX_USSD_DATAB                 (0x640)    
#define MAX_USSD_STRING                (0xa0)     
#define MAX_USSD_STRINGB               (0x500)    
#define MAX_EVAL_LEN                   (0x4)      
#define MAX_NAME_STRING                (0xa0)     
#define MAX_NAME_STRINGB               (0x500)    
#define MAX_MSISDN_LEN                 (0x14)     

#include "CDG_LEAVE.h"


#endif
