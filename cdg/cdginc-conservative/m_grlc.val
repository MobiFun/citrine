/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : m_grlc.val                                                     |
| SOURCE  : "msg\grlc.mdf"                                                 |
| LastModified : "2004-02-18"                                              |
| IdAndVersion : "8010.603.99.004"                                         |
| SrcFileTime  : "Wed Nov 28 10:18:54 2007"                                |
| Generated by CCDGEN_2.5.5A on Thu Sep 25 09:52:55 2014                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : NONE
 * COMPATIBILITY_DEFINES  : NO (require PREFIX)
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 * CCDNAME: GRLC
 */


#ifndef M_GRLC_VAL
#define M_GRLC_VAL


#define CDG_ENTER__M_GRLC_VAL

#define CDG_ENTER__FILENAME _M_GRLC_VAL
#define CDG_ENTER__M_GRLC_VAL__FILE_TYPE CDGINC
#define CDG_ENTER__M_GRLC_VAL__LAST_MODIFIED _2004_02_18
#define CDG_ENTER__M_GRLC_VAL__ID_AND_VERSION _8010_603_99_004

#define CDG_ENTER__M_GRLC_VAL__SRC_FILE_TIME _Wed_Nov_28_10_18_54_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__M_GRLC_VAL

#undef CDG_ENTER__FILENAME

#include "m_rr_com.val"   /* Access values independent from the corresponding h-file. */


/*
 * Value constants for VAL_final_alloc
 */
#define GRLC_NO                        (0x0)      /* not present                    */
#define GRLC_YES                       (0x1)      /* present                        */

/*
 * Value constants for VAL_msg_type
 */
#define D_GRLC_UL_ACK_c                (0x9)      /* Packet Uplink Ack/Nack         */
#define U_GRLC_CTRL_ACK_c              (0x1)      /* Packet Control Acknowledgement */
#define U_GRLC_DL_ACK_c                (0x2)      /* Packet Downlink Ack/Nack       */
#define U_GRLC_UL_DUMMY_c              (0x3)      /* Packet Uplink Dummy Control Block */
#define U_GRLC_RESOURCE_REQ_c          (0x5)      /* Packet Resource Request        */
// VAL-FF: REL99 AND FF_EGPRS  
// #define U_GRLC_ADD_MS_RADIO_CAP_c      (0xb)   /* Additional MS Radio Access Capabilities */
// VAL-FF: REL99 AND FF_EGPRS  
// #define U_GRLC_E_DL_ACK_c              (0x8)   /* EGPRS Packet Downlink Ack/Nack */
#define U_GRLC_PACKET_PSI_STATUS_c     (0x7)      /* Packet PSI status message.     */
#define U_GRLC_PACKET_SI_STATUS_c      (0xd)      /* Packet SI status message.      */
#define U_GRLC_PACKET_CELL_CHANGE_NOTIFICATION_c (0xc)/* Packet Cell Change Notification. */

/*
 * Value constants for VAL_page_mode
 */
#define NORMAL_PAGING                  (0x0)      /* Normal Paging                  */
#define EXT_PAGING                     (0x1)      /* Extended Paging                */
#define REORG_PAGING                   (0x2)      /* Paging Reorganisation          */
#define SAME_PAGING                    (0x3)      /* Same as before                 */

/*
 * Value constants for VAL_access_type
 */
#define TWO_PHASE                      (0x0)      /* Two Phase Access Request       */
#define PAGE                           (0x1)      /* Page Response                  */
#define CELL_UPDATE                    (0x2)      /* Cell Update                    */
#define MM_PROC                        (0x3)      /* Mobility Management procedure  */

/*
 * Value constants for VAL_chan_coding_cmd
 */
#define VAL_CHAN_CODING_CMD___0        (0x0)      /* CS-1                           */
#define VAL_CHAN_CODING_CMD___1        (0x1)      /* CS-2                           */
#define VAL_CHAN_CODING_CMD___2        (0x2)      /* CS-3                           */
#define VAL_CHAN_CODING_CMD___3        (0x3)      /* CS-4                           */

/*
 * Value constants for VAL_rlc_mode
 */
#define VAL_RLC_MODE___0               (0x0)      /* RLC acknowledged mode          */
#define VAL_RLC_MODE___1               (0x1)      /* RLC unacknowledged mode        */

/*
 * Value constants for VAL_pctrl_ack
 */
#define VAL_PCTRL_ACK___0              (0x0)      /* in case the message is sent in access burst format, the same meaning as for the value '11' except that the mobile station is requesting new TBF. Otherwise the bit value '00' is reserved and shall not be sent. If received it shall be intepreted as bit value '01'. */
#define VAL_PCTRL_ACK___1              (0x1)      /* the MS received an RLC/MAC control block addressed to itself and with RBSN = 1, and did not receive an RLC/MAC control block with the same RTI value and RBSN = 0. */
#define VAL_PCTRL_ACK___2              (0x2)      /* the MS received an RLC/MAC control block addressed to itself and with RBSN = 0, and did not receive an RLC/MAC control block with the same RTI value and RBSN = 1. This value is sent irrespective of the value of the FS bit. */
#define VAL_PCTRL_ACK___3              (0x3)      /* the MS received two RLC/MAC blocks with the same RTI value, one with RBSN = 0 and the other with RBSN = 1. */

/*
 * Value constants for VAL_alpha
 */
#define VAL_ALPHA___0                  (0x0)      /* Alpha = 0.0                    */
#define VAL_ALPHA___1                  (0x1)      /* Alpha = 0.1                    */
#define VAL_ALPHA___2                  (0x2)      /* Alpha = 0.2                    */
#define VAL_ALPHA___3                  (0x3)      /* Alpha = 0.3                    */
#define VAL_ALPHA___4                  (0x4)      /* Alpha = 0.4                    */
#define VAL_ALPHA___5                  (0x5)      /* Alpha = 0.5                    */
#define VAL_ALPHA___6                  (0x6)      /* Alpha = 0.6                    */
#define VAL_ALPHA___7                  (0x7)      /* Alpha = 0.7                    */
#define VAL_ALPHA___8                  (0x8)      /* Alpha = 0.8                    */
#define VAL_ALPHA___9                  (0x9)      /* Alpha = 0.9                    */
#define VAL_ALPHA___A                  (0xa)      /* Alpha = 1.0                    */

/*
 * Value constants for VAL_radio_prio
 */
#define VAL_RADIO_PRIO___0             (0x0)      /* Radio Priority 1 (Highest priority) */
#define VAL_RADIO_PRIO___1             (0x1)      /* Radio Priority 2               */
#define VAL_RADIO_PRIO___2             (0x2)      /* Radio Priority 3               */
#define VAL_RADIO_PRIO___3             (0x3)      /* Radio Priority 4 (Lower priority) */

/*
 * Value constants for VAL_llc_pdu_type
 */
#define VAL_LLC_PDU_TYPE___0           (0x0)      /* LLC PDU is SACK or ACK         */
#define VAL_LLC_PDU_TYPE___1           (0x1)      /* LLC PDU is not SACK or ACK     */

/*
 * Value constants for VAL_bl_o_bl_per
 */
#define BLOCKS                         (0x0)      /* ALLOCATION_BITMAP is to be interpreted as blocks */
#define BLOCK_PERIODS                  (0x1)      /* ALLOCATION_BITMAP is to be interpreted as block periods */

/*
 * Value constants for VAL_rbb
 */
#define INVALID                        (0x0)      /* Negative Ack of the RLC data block with BSN=(SSN-bit_nr)mod128 */
#define RECEIVED                       (0x1)      /* Positive Ack of the RLC data block with BSN=(SSN-bit_nr)mod128 */

/*
 * Value constants for VAL_f_ack_ind
 */
#define VAL_F_ACK_IND___0              (0x0)      /* retransmission are requested and the TBF is incomplete */
#define VAL_F_ACK_IND___1              (0x1)      /* no retransmissions are requested and this message indicates acknowledgement of all RLC data in the TBF */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_add_ms_rac
// 
// #define ADD_MS_RAC_INFO_AVAIL_0        (0x0)   /* indicates that MS will not send more information about its radio access capabilities than included in this message */
// #define ADD_MS_RAC_INFO_AVAIL_1        (0x1)   /* indicates that MS will send more information about its radio access capabilities in the next control message */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_retrans_of_prr
// 
// #define RETRANS_OF_PRR_0               (0x0)   /* indicates that this message is an initial Packet Resource Request */
// #define RETRANS_OF_PRR_1               (0x1)   /* indicates that this message is a retransmitted Packet Resource Request: in this case the corresponding PRR message shall not be interpreted as a request for resource reassignment. */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_tbf_est
// 
// #define TBF_EST_NOT_ALLOWED_0          (0x0)   /* the mobile station is not allowed to request the establishment of new TBF */
// #define TBF_EST_ALLOWED_1              (0x1)   /* the mobile station is allowed to request the establishment of new TBF */

// VALTAB-FF: REL99 AND FF_EGPRS 
// 
// Value constants for VAL_egprs_chan_coding_cmd
// 
// #define MCS1                           (0x0)   /* MCS-1                          */
// #define MCS2                           (0x1)   /* MCS-2                          */
// #define MCS3                           (0x2)   /* MCS-3                          */
// #define MCS4                           (0x3)   /* MCS-4                          */
// #define MCS5                           (0x4)   /* MCS-5                          */
// #define MCS6                           (0x5)   /* MCS-6                          */
// #define MCS7                           (0x6)   /* MCS-7                          */
// #define MCS8                           (0x7)   /* MCS-8                          */
// #define MCS9                           (0x8)   /* MCS-9                          */
// #define MCS5_7                         (0x9)   /* MCS-5-7                        */
// #define MCS6_9                         (0xa)   /* MCS-6-9                        */

// VALTAB-FF: REL99 AND FF_EGPRS 
// 
// Value constants for VAL_Choice_flag
// 
// #define GRLC_CHOICE_00                 (0x0)   
// #define GRLC_CHOICE_01                 (0x1)   
// #define GRLC_CHOICE_10                 (0x2)   
// #define GRLC_CHOICE_11                 (0x3)   

// VALTAB-FF: REL99 AND FF_EGPRS 
// 
// Value constants for VAL_cbmp_color_code
// 
// #define CRBB_CW_0                      (0x0)   /* First code word in CRBB represents run length of zeros */
// #define CRBB_CW_1                      (0x1)   /* First code word in CRBB represents run length of ones */

/*
 * user defined constants
 */
#define MAX_NUM_BEP_TN                 (0x8)      
#define MAX_SIZE_URBB_DL               (0x90)     
#define MAX_SIZE_CRBB                  (0x7f)     
#define MAX_SIZE_URBB_UL               (0x80)     

#include "CDG_LEAVE.h"


#endif
