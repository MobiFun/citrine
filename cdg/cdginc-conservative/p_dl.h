/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : p_dl.h                                                         |
| SOURCE  : "sap\dl.pdf"                                                   |
| LastModified : "2004-04-28"                                              |
| IdAndVersion : "8010.100.02.010"                                         |
| SrcFileTime  : "Thu Nov 29 09:40:06 2007"                                |
| Generated by CCDGEN_2.5.5A on Thu Sep 25 09:52:55 2014                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : DL
 * COMPATIBILITY_DEFINES  : NO
 * ALWAYS_ENUM_IN_VAL_FILE: YES
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 */


#ifndef P_DL_H
#define P_DL_H


#define CDG_ENTER__P_DL_H

#define CDG_ENTER__FILENAME _P_DL_H
#define CDG_ENTER__P_DL_H__FILE_TYPE CDGINC
#define CDG_ENTER__P_DL_H__LAST_MODIFIED _2004_04_28
#define CDG_ENTER__P_DL_H__ID_AND_VERSION _8010_100_02_010

#define CDG_ENTER__P_DL_H__SRC_FILE_TIME _Thu_Nov_29_09_40_06_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__P_DL_H

#undef CDG_ENTER__FILENAME


#include "p_dl.val"

/* #include "p_8010_152_ps_include.h" */

/* #include "p_8010_153_cause_include.h" */

/* #include "p_8010_147_l1_include.h" */

#include "p_mphc.h" 


/*
 * typedef between var and valtab enums
 */
#ifndef __T_DL_indication__
#define __T_DL_indication__
typedef T_DL_VAL_indication T_DL_indication;
#endif

#ifndef __T_DL_mode__
#define __T_DL_mode__
typedef T_DL_VAL_mode T_DL_mode;
#endif

// VAR-FF: !TI_DUAL_MODE  
#ifndef __T_DL_sapi__
#define __T_DL_sapi__
typedef T_DL_VAL_sapi T_DL_sapi;
#endif

#ifndef __T_DL_cnf__
#define __T_DL_cnf__
typedef T_DL_VAL_cnf T_DL_cnf;
#endif

// VAR-FF: !TI_DUAL_MODE  
#ifndef __T_DL_cs__
#define __T_DL_cs__
typedef T_DL_VAL_cs T_DL_cs;
#endif


/*
 * End of substructure section, begin of primitive definition section
 */

#ifndef __T_DL_ESTABLISH_REQ__
#define __T_DL_ESTABLISH_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1413
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
  T_sdu                     sdu;                      /*<  4: ? > Container for a message                            */
} T_DL_ESTABLISH_REQ;
#endif

#ifndef __T_DL_ESTABLISH_CNF__
#define __T_DL_ESTABLISH_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1414
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
  U8                        indication;               /*<  2:  1> T_DL_indication,  Indication for unserved data requests */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_DL_ESTABLISH_CNF;
#endif

#ifndef __T_DL_ESTABLISH_IND__
#define __T_DL_ESTABLISH_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1415
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
  U8                        indication;               /*<  2:  1> T_DL_indication,  Indication for unserved data requests */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_DL_ESTABLISH_IND;
#endif

#ifndef __T_DL_RELEASE_REQ__
#define __T_DL_RELEASE_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1416
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
  U8                        mode;                     /*<  2:  1> T_DL_mode,  release mode                           */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_DL_RELEASE_REQ;
#endif

#ifndef __T_DL_RELEASE_CNF__
#define __T_DL_RELEASE_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1417
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
  U8                        indication;               /*<  2:  1> T_DL_indication,  Indication for unserved data requests */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_DL_RELEASE_CNF;
#endif

#ifndef __T_DL_RELEASE_IND__
#define __T_DL_RELEASE_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1418
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
// ELEM-FF: TI_DUAL_MODE 
//   T_CAUSE_ps_cause          ps_cause;                 /*<  0:  0> Cause element containing result of operation (type defined in "p_8010_153_cause_include.h") */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        cs;                       /*<  2:  1> T_DL_cs,  error cause                              */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_DL_RELEASE_IND;
#endif

#ifndef __T_DL_DATA_REQ__
#define __T_DL_DATA_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1419
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
  U8                        cnf;                      /*<  2:  1> T_DL_cnf,  Confimation demand                      */
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        _align0;                  /*<  3:  1> alignment                                          */
  T_sdu                     sdu;                      /*<  4: ? > Container for a message                            */
} T_DL_DATA_REQ;
#endif

#ifndef __T_DL_DATA_CNF__
#define __T_DL_DATA_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1420
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
  U8                        cnf;                      /*<  2:  1> T_DL_cnf,  Confimation demand                      */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_DL_DATA_CNF;
#endif

#ifndef __T_DL_DATA_IND__
#define __T_DL_DATA_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1421
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
// ELEM-FF: TI_DUAL_MODE 
//   U32                       fn;                       /*<  0:  0> T_FN,  Frame number                                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
  U32                       fn;                       /*<  4:  4> Frame number                                       */
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  T_sdu                     sdu;                      /*<  8: ? > Container for a message                            */
} T_DL_DATA_IND;
#endif

#ifndef __T_DL_UNITDATA_REQ__
#define __T_DL_UNITDATA_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1422
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  T_sdu                     sdu;                      /*<  0: ? > Container for a message                            */
} T_DL_UNITDATA_REQ;
#endif

#ifndef __T_DL_UNITDATA_IND__
#define __T_DL_UNITDATA_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1423
 */
typedef struct
{
  U8                        error_flag;               /*<  0:  1> error cause                                        */
  U8                        pwr_lev;                  /*<  1:  1> Ordered mobile power level                         */
  U8                        ta;                       /*<  2:  1> Timing advance                                     */
// ELEM-FF: TI_DUAL_MODE 
//   U32                       fn;                       /*<  0:  0> T_FN,  Frame number                                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        _align0;                  /*<  3:  1> alignment                                          */
  U32                       fn;                       /*<  4:  4> Frame number                                       */
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  T_sdu                     sdu;                      /*<  8: ? > Container for a message                            */
} T_DL_UNITDATA_IND;
#endif

#ifndef __T_DL_SHORT_UNITDATA_REQ__
#define __T_DL_SHORT_UNITDATA_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1424
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_sdu                     sdu;                      /*<  4: ? > Container for a message                            */
} T_DL_SHORT_UNITDATA_REQ;
#endif

#ifndef __T_DL_SHORT_UNITDATA_IND__
#define __T_DL_SHORT_UNITDATA_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1425
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
  U8                        error_flag;               /*<  1:  1> error cause                                        */
  U8                        pwr_lev;                  /*<  2:  1> Ordered mobile power level                         */
  U8                        ta;                       /*<  3:  1> Timing advance                                     */
// ELEM-FF: TI_DUAL_MODE 
//   U32                       fn;                       /*<  0:  0> T_FN,  Frame number                                */
// ELEM-FF: !TI_DUAL_MODE 
  U32                       fn;                       /*<  4:  4> Frame number                                       */
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  T_sdu                     sdu;                      /*<  8: ? > Container for a message                            */
} T_DL_SHORT_UNITDATA_IND;
#endif

#ifndef __T_DL_SUSPEND_REQ__
#define __T_DL_SUSPEND_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1426
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_DL_SUSPEND_REQ;
#endif

#ifndef __T_DL_RESUME_REQ__
#define __T_DL_RESUME_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1427
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
  T_sdu                     sdu;                      /*<  4: ? > Container for a message                            */
} T_DL_RESUME_REQ;
#endif

#ifndef __T_DL_RECONNECT_REQ__
#define __T_DL_RECONNECT_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1428
 */
typedef struct
{
// ELEM-FF: TI_DUAL_MODE 
//   U8                        ch_type;                  /*<  0:  0> T_L2_CHANNEL,  Layer 2 channel-type                */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        ch_type;                  /*<  0:  1> Layer 2 channel-type                               */
// ELEM-FF: TI_DUAL_MODE 
//   U8                        sapi;                     /*<  0:  0> T_PS_sapi,  Service Access Point Identifier        */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        sapi;                     /*<  1:  1> T_DL_sapi,  service access point identifier        */
// ELEM-FF: TI_DUAL_MODE 
//   T_sdu                     sdu;                      /*<  0:  0> Container for a message                            */
// ELEM-FF: !TI_DUAL_MODE 
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
  T_sdu                     sdu;                      /*<  4: ? > Container for a message                            */
} T_DL_RECONNECT_REQ;
#endif

#ifndef __T_DL_TRACE_REQ__
#define __T_DL_TRACE_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1429
 */
typedef struct
{
  U8                        dummy;                    /*<  0:  1> no parameters                                      */
} T_DL_TRACE_REQ;
#endif

#ifndef __T_DL_SIGNAL_ESTABLISH_IND__
#define __T_DL_SIGNAL_ESTABLISH_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1430
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_ESTABLISH_IND;
#endif

#ifndef __T_DL_SIGNAL_ESTABLISH_CNF__
#define __T_DL_SIGNAL_ESTABLISH_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1431
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_ESTABLISH_CNF;
#endif

#ifndef __T_DL_SIGNAL_DATA_IND__
#define __T_DL_SIGNAL_DATA_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1432
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_DATA_IND;
#endif

#ifndef __T_DL_SIGNAL_DATA_CNF__
#define __T_DL_SIGNAL_DATA_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1433
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_DATA_CNF;
#endif

#ifndef __T_DL_SIGNAL_UNITDATA_IND__
#define __T_DL_SIGNAL_UNITDATA_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1434
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_UNITDATA_IND;
#endif

#ifndef __T_DL_SIGNAL_SHORT_UNITDATA_IND__
#define __T_DL_SIGNAL_SHORT_UNITDATA_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1435
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_SHORT_UNITDATA_IND;
#endif

#ifndef __T_DL_SIGNAL_RELEASE_IND__
#define __T_DL_SIGNAL_RELEASE_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1436
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_RELEASE_IND;
#endif

#ifndef __T_DL_SIGNAL_RELEASE_CNF__
#define __T_DL_SIGNAL_RELEASE_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1437
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_RELEASE_CNF;
#endif

#ifndef __T_DL_SIGNAL_ERROR_IND__
#define __T_DL_SIGNAL_ERROR_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1438
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_ERROR_IND;
#endif

#ifndef __T_DL_SIGNAL_FREE_POINTER__
#define __T_DL_SIGNAL_FREE_POINTER__
/*
 * 
 * CCDGEN:WriteStruct_Count==1439
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_FREE_POINTER;
#endif

#ifndef __T_DL_SIGNAL_CONCATENATE__
#define __T_DL_SIGNAL_CONCATENATE__
/*
 * 
 * CCDGEN:WriteStruct_Count==1440
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_CONCATENATE;
#endif

#ifndef __T_DL_SIGNAL_L2TRACE__
#define __T_DL_SIGNAL_L2TRACE__
/*
 * 
 * CCDGEN:WriteStruct_Count==1441
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_L2TRACE;
#endif

#ifndef __T_DL_SIGNAL_L3TRACE__
#define __T_DL_SIGNAL_L3TRACE__
/*
 * 
 * CCDGEN:WriteStruct_Count==1442
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_L3TRACE;
#endif

#ifndef __T_DL_SIGNAL_EM_IND__
#define __T_DL_SIGNAL_EM_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1443
 */
typedef struct
{
  U8                        dummy;                    /*<  0:  1> no parameters                                      */
} T_DL_SIGNAL_EM_IND;
#endif

#ifndef __T_DL_SIGNAL_EM_WRITE__
#define __T_DL_SIGNAL_EM_WRITE__
/*
 * 
 * CCDGEN:WriteStruct_Count==1444
 */
typedef struct
{
  U32                       signal_data;              /*<  0:  4> Pointer to signal data                             */
} T_DL_SIGNAL_EM_WRITE;
#endif

#ifndef __T_DL_SIGNAL_EM_READ__
#define __T_DL_SIGNAL_EM_READ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1445
 */
typedef struct
{
  U8                        dummy;                    /*<  0:  1> no parameters                                      */
} T_DL_SIGNAL_EM_READ;
#endif


#include "CDG_LEAVE.h"


#endif
