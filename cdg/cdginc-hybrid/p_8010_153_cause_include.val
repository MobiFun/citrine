/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : p_8010_153_cause_include.val                                   |
| SOURCE  : "sap\8010_153_cause_include.pdf"                               |
| LastModified : "2004-11-30"                                              |
| IdAndVersion : "8010.153.04.032"                                         |
| SrcFileTime  : "Thu Nov 29 09:29:16 2007"                                |
| Generated by CCDGEN_2.5.5A on Fri Oct 14 21:41:52 2016                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : CAUSE
 * COMPATIBILITY_DEFINES  : NO
 * ALWAYS_ENUM_IN_VAL_FILE: YES
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 */


#ifndef P_8010_153_CAUSE_INCLUDE_VAL
#define P_8010_153_CAUSE_INCLUDE_VAL


#define CDG_ENTER__P_8010_153_CAUSE_INCLUDE_VAL

#define CDG_ENTER__FILENAME _P_8010_153_CAUSE_INCLUDE_VAL
#define CDG_ENTER__P_8010_153_CAUSE_INCLUDE_VAL__FILE_TYPE CDGINC
#define CDG_ENTER__P_8010_153_CAUSE_INCLUDE_VAL__LAST_MODIFIED _2004_11_30
#define CDG_ENTER__P_8010_153_CAUSE_INCLUDE_VAL__ID_AND_VERSION _8010_153_04_032

#define CDG_ENTER__P_8010_153_CAUSE_INCLUDE_VAL__SRC_FILE_TIME _Thu_Nov_29_09_29_16_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__P_8010_153_CAUSE_INCLUDE_VAL

#undef CDG_ENTER__FILENAME


/*
 * Enum to value table VAL_cc_cause
 * CCDGEN:WriteEnum_Count==138
 */
#ifndef __T_CAUSE_VAL_cc_cause__
#define __T_CAUSE_VAL_cc_cause__
typedef enum
{
  CAUSE_CC_FACILITY_REJECT       = 0x1d,          /* facility rejected (originated by MS) */
  CAUSE_CC_BEARER_NOT_IMPLEM     = 0x41,          /* bearer service not implemented (originated by MS) */
  CAUSE_CC_INVALID_TI            = 0x51,          /* invalid transaction identifier value (originated by MS) */
  CAUSE_CC_INCOMPAT_DEST         = 0x58,          /* incompatible destination (originated by MS) */
  CAUSE_CC_INVALID_MAND_INFO     = 0x60,          /* invalid mandatory information (originated by MS) */
  CAUSE_CC_MESSAGE_INCOMPAT      = 0x65,          /* message not compatible with protocol state (originated by MS) */
  CAUSE_CC_TIMER                 = 0x66,          /* recovery on timer expiry (originated by MS) */
  CAUSE_CC_MODIFY_SUCCESS        = 0x1,           /* in-call modification successfully performed, MODIFY COMPLETE message received */
  CAUSE_CC_HOLD_SUCCESS          = 0x2,           /* hold successfully performed, HOLD ACKNOWLEDGE message received */
  CAUSE_CC_RETRIEVE_SUCCESS      = 0x3,           /* retrieve successfully performed, RETRIEVE ACKNOWLEDGE message received */
  CAUSE_CC_DTMF_START_SUCCESS    = 0x4,           /* start of DTMF successfully performed, START DTMF ACKNOWLEDGE message received */
  CAUSE_CC_NO_NET_CAUSE          = 0x5,           /* network initiated without cause */
  CAUSE_CC_SUCCESS               = 0x6,           /* operation successfully performed (e.g. a call establishment); this cause is used only if no more specific cause applies */
  CAUSE_CC_DTMF_NOT_ALLOWED      = 0x7,           /* DTMF is currently not allowed (no speech TCH) */
  CAUSE_CC_DTMF_BUFFER_FULL      = 0x8,           /* DTMF storage buffer overflow   */
  CAUSE_CC_DTMF_ABORTED          = 0x9,           /* DTMF was aborted (e.g. due to state change) */
  CAUSE_CC_MAX_NO_CALLS_REACHED  = 0x10,          /* maximum number of calls was reached */
  CAUSE_CC_MAX_NO_RECALLS_REACHED = 0x11,         /* maximum number of recalls (CCBS) was reached */
  CAUSE_CC_CHANNEL_SYNC          = 0x12,          /* channel mode or type information (changed) */
  CAUSE_CC_REEST_STARTED         = 0x13,          /* call re-establishment started  */
  CAUSE_CC_REEST_FINISHED        = 0x14,          /* call re-establishment is finished */
  CAUSE_CC_DTMF_STOP_SUCCESS     = 0x15,          /* stop of DTMF successfully performed, STOP DTMF ACKNOWLEDGE message received */
  CAUSE_CC_NO_ERROR              = 0xff           /* Equal to NOT_PRESENT_8BIT      */
}T_CAUSE_VAL_cc_cause;
#endif

/*
 * Enum to value table VAL_nwcc_cause
 * CCDGEN:WriteEnum_Count==139
 */
#ifndef __T_CAUSE_VAL_nwcc_cause__
#define __T_CAUSE_VAL_nwcc_cause__
typedef enum
{
  CAUSE_NWCC_UNASSIGN            = 0x1,           /* unassigned (unallocated) number */
  CAUSE_NWCC_NO_ROUTE            = 0x3,           /* no route to destination        */
  CAUSE_NWCC_CHAN_UNACCEPT       = 0x6,           /* channel unacceptable           */
  CAUSE_NWCC_BARRED              = 0x8,           /* operator determined barring    */
  CAUSE_NWCC_CALL_CLEAR          = 0x10,          /* normal call clearing           */
  CAUSE_NWCC_USER_BUSY           = 0x11,          /* user busy                      */
  CAUSE_NWCC_NO_RESPONSE         = 0x12,          /* no user responding             */
  CAUSE_NWCC_ALERT_NO_ANSWER     = 0x13,          /* user alerting, no answer       */
  CAUSE_NWCC_CALL_REJECT         = 0x15,          /* call rejected                  */
  CAUSE_NWCC_NUM_CHANGED         = 0x16,          /* number changed                 */
  CAUSE_NWCC_PREEMPTION          = 0x19,          /* pre-emption                    */
  CAUSE_NWCC_USER_CLEAR          = 0x1a,          /* non selected user clearing     */
  CAUSE_NWCC_DEST_ORDER          = 0x1b,          /* destination out of order       */
  CAUSE_NWCC_NUM_FORMAT          = 0x1c,          /* invalid number format (incomplete number) */
  CAUSE_NWCC_FACILITY_REJECT     = 0x1d,          /* facility rejected              */
  CAUSE_NWCC_STATUS_ENQUIRY      = 0x1e,          /* response to status enquiry     */
  CAUSE_NWCC_UNSPECIFIED         = 0x1f,          /* normal, unspecified            */
  CAUSE_NWCC_NO_CHAN_AVAIL       = 0x22,          /* no circuit / channel available */
  CAUSE_NWCC_NETWORK_ORDER       = 0x26,          /* network out of order           */
  CAUSE_NWCC_TEMP_FAIL           = 0x29,          /* temporary failure              */
  CAUSE_NWCC_SWITCH_CONGEST      = 0x2a,          /* switching equipment congestion */
  CAUSE_NWCC_INFO_DISCARD        = 0x2b,          /* access information discarded   */
  CAUSE_NWCC_REQ_CHAN_UNAVAIL    = 0x2c,          /* requested circuit / channel not available */
  CAUSE_NWCC_RESOURCE_UNAVAIL    = 0x2f,          /* resources unavailable, unspecified */
  CAUSE_NWCC_QOS_UNAVAIL         = 0x31,          /* quality of service unavailable */
  CAUSE_NWCC_FACILITY_UNSUBSCRIB = 0x32,          /* requested facility not subscribed */
  CAUSE_NWCC_BARRED_IN_CUG       = 0x37,          /* incoming calls barred within the CUG */
  CAUSE_NWCC_BEARER_CAP_AUTHORIZ = 0x39,          /* bearer capability not authorized */
  CAUSE_NWCC_BEARER_CAP_UNAVAIL  = 0x3a,          /* bearer capability not presently available */
  CAUSE_NWCC_SERVICE_UNAVAIL     = 0x3f,          /* service or option not available, unspecified */
  CAUSE_NWCC_BEARER_NOT_IMPLEM   = 0x41,          /* bearer service not implemented */
  CAUSE_NWCC_ACM_MAX             = 0x44,          /* ACM equal or greater than ACMmax */
  CAUSE_NWCC_FACILITY_NOT_IMPLEM = 0x45,          /* requested facility not implemented */
  CAUSE_NWCC_RESTICT_BEARER_CAP  = 0x46,          /* only restricted digital information bearer capability is available */
  CAUSE_NWCC_SERVICE_NOT_IMPLEM  = 0x4f,          /* service or option not implemented, unspecified */
  CAUSE_NWCC_INVALID_TI          = 0x51,          /* invalid transaction identifier value */
  CAUSE_NWCC_USER_NOT_IN_CUG     = 0x57,          /* user not member of CUG         */
  CAUSE_NWCC_INCOMPAT_DEST       = 0x58,          /* incompatible destination       */
  CAUSE_NWCC_INVALID_TRANS_NET   = 0x5b,          /* invalid transit network selection */
  CAUSE_NWCC_INCORRECT_MESSAGE   = 0x5f,          /* semantically incorrect message */
  CAUSE_NWCC_INVALID_MAND_INFO   = 0x60,          /* invalid mandatory information  */
  CAUSE_NWCC_MESSAGE_TYPE_NOT_IMPLEM = 0x61,      /* message type non-existent or not implemented */
  CAUSE_NWCC_MESSAGE_TYPE_INCOMPAT = 0x62,        /* message type not compatible with protocol state */
  CAUSE_NWCC_INFO_ELEM_NOT_IMPLEM = 0x63,         /* information element non-existent or not implemented */
  CAUSE_NWCC_COND_INFO_ELEM      = 0x64,          /* conditional information element error */
  CAUSE_NWCC_MESSAGE_INCOMPAT    = 0x65,          /* message not compatible with protocol state */
  CAUSE_NWCC_TIMER               = 0x66,          /* recovery on timer expiry       */
  CAUSE_NWCC_PROTOCOL            = 0x6f,          /* protocol error, unspecified    */
  CAUSE_NWCC_INTERWORKING        = 0x7f,          /* interworking, unspecified      */
  CAUSE_NWCC_NO_NET_CAUSE        = 0xff           /* Network initiated without cause */
}T_CAUSE_VAL_nwcc_cause;
#endif

/*
 * Enum to value table VAL_dl_cause
 * CCDGEN:WriteEnum_Count==140
 */
#ifndef __T_CAUSE_VAL_dl_cause__
#define __T_CAUSE_VAL_dl_cause__
typedef enum
{
  CAUSE_DL_INFO_FIELD_MISMATCH   = 0x0,           /* Different information fields   */
  CAUSE_DL_NO_ERROR              = 0xff           /* Equal to NOT_PRESENT_8BIT      */
}T_CAUSE_VAL_dl_cause;
#endif

/*
 * Enum to value table VAL_l2r_cause
 * CCDGEN:WriteEnum_Count==141
 */
#ifndef __T_CAUSE_VAL_l2r_cause__
#define __T_CAUSE_VAL_l2r_cause__
typedef enum
{
  CAUSE_L2R_ERR_INTERNAL         = 0x1            /* L2R internal error             */
}T_CAUSE_VAL_l2r_cause;
#endif

/*
 * Enum to value table VAL_llc_cause
 * CCDGEN:WriteEnum_Count==142
 */
#ifndef __T_CAUSE_VAL_llc_cause__
#define __T_CAUSE_VAL_llc_cause__
typedef enum
{
  CAUSE_LLC_NORMAL_REL           = 0x0,           /* Normal release                 */
  CAUSE_LLC_INVALID_XID          = 0x1,           /* Invalid XID response           */
  CAUSE_LLC_DM_RECEIVED          = 0x2,           /* DM received                    */
  CAUSE_LLC_NO_PEER_RES          = 0x3,           /* No peer response               */
  CAUSE_LLC_INVALID_UA           = 0x4,           /* Invalid UA response            */
  CAUSE_LLC_SABM_INVALID_XID     = 0x5,           /* Invalid XID response during connection establishment */
  CAUSE_LLC_SABM_NO_PEER_RES     = 0x6,           /* No peer response during connection establishment */
  CAUSE_LLC_XID_INVALID_XID      = 0x7,           /* Invalid XID response during parameter negotiation */
  CAUSE_LLC_XID_NO_PEER_RES      = 0x8,           /* No peer response during parameter negotiation */
  CAUSE_LLC_DISC_NO_PEER_RES     = 0x9,           /* No peer response during release of connection */
  CAUSE_LLC_MULT_ASS_TLLI        = 0xa,           /* Possible multiple assignment of a TLLI value */
  CAUSE_LLC_DM1_RECEIVED         = 0xb,           /* Unsolicited DM response with F bit 1 in state ABM */
  CAUSE_LLC_DM1_RECEIVED_REEST   = 0xc,           /* Unsolicited DM response with F bit 1 in state Timer Recovery; re-establishment procedure initiated */
  CAUSE_LLC_ACK_NO_PEER_RES_REEST = 0xd,          /* No peer response during waiting for acknowledgement; re-establishment procedure initiated */
  CAUSE_LLC_PEER_BUSY_REEST      = 0xe,           /* Peer receiver busy condition; re-establishment procedure initiated */
  CAUSE_LLC_FRMR_COND            = 0xf,           /* Frame rejection condition; frame discarded */
  CAUSE_LLC_FRMR_COND_REEST      = 0x10,          /* Frame rejection condition; re-establishment procedure initiated */
  CAUSE_LLC_FRMR_RECEIVED        = 0x11,          /* FRMR response received; frame discarded */
  CAUSE_LLC_L3_REEST             = 0x12,          /* Layer 3 initiated re-establishment procedure */
  CAUSE_LLC_PEER_REEST           = 0x13,          /* Peer initiated re-establishment procedure */
  CAUSE_LLC_DM0_RECEIVED_REEST   = 0x14           /* Unsolicited DM response with F bit 0; re-establishment procedure initiated */
}T_CAUSE_VAL_llc_cause;
#endif

/*
 * Enum to value table VAL_mm_cause
 * CCDGEN:WriteEnum_Count==143
 */
#ifndef __T_CAUSE_VAL_mm_cause__
#define __T_CAUSE_VAL_mm_cause__
typedef enum
{
  CAUSE_MM_SUCCESS               = 0x0,           /* No error, successful operation (MM) */
  CAUSE_MM_NO_REGISTRATION       = 0x80,          /* MS is not registered           */
  CAUSE_MM_TIMER_RECOVERY        = 0x81,          /* Time-out in MM during establishment */
  CAUSE_MM_NO_REESTABLISH        = 0x82,          /* Cell does not support call reestablish */
  CAUSE_MM_INT_PREEM             = 0x83,          /* Preemptive release, e.g. MO/MT clash in MM */
  CAUSE_MM_PLMN_NOT_IDLE_MODE    = 0x84,          /* Reject (not in idle mode)      */
  CAUSE_MM_AUTHENTICATION_REJECTED = 0x88,        /* Authentication failure         */
  CAUSE_MM_SIM_REMOVED           = 0x89,          /* SIM card removed               */
  CAUSE_MM_POWER_OFF             = 0x8a,          /* UE Power Off                   */
  CAUSE_MM_NO_SERVICE            = 0x8b,          /* No service                     */
  CAUSE_MM_LIMITED_SERVICE       = 0x8c,          /* Only limited service available */
  CAUSE_MM_PROTOCOL_ERROR        = 0x90,          /* Protocol error, unspecified    */
  CAUSE_MM_DEDICATED_MODE        = 0x91,          /* PS service suspended while in dedicated mode */
  CAUSE_MM_TRY_TO_UPDATE         = 0x92,          /* MM is attempting to update registration */
  CAUSE_MM_SOFT_OFF              = 0x93,          /* Disabled RF RX/TX mode         */
  CAUSE_MM_DETACH_WITH_REATTACH  = 0xa0,          /* Detach with reattach required  */
  CAUSE_MM_NO_ERROR              = 0xff           /* NO ERROR CAUSE                 */
}T_CAUSE_VAL_mm_cause;
#endif

/*
 * Enum to value table VAL_nwmm_cause
 * CCDGEN:WriteEnum_Count==144
 */
#ifndef __T_CAUSE_VAL_nwmm_cause__
#define __T_CAUSE_VAL_nwmm_cause__
typedef enum
{
  CAUSE_NWMM_IMSI_UNKNOWN_IN_HLR = 0x2,           /* IMSI unknown in HLR            */
  CAUSE_NWMM_ILLEGAL_MS          = 0x3,           /* Illegal MS                     */
  CAUSE_NWMM_IMSI_UNKNOWN_IN_VLR = 0x4,           /* IMSI unknown in VLR            */
  CAUSE_NWMM_IMEI_NOT_ACCEPTED   = 0x5,           /* IMEI not accepted              */
  CAUSE_NWMM_ILLEGAL_ME          = 0x6,           /* Illegal ME                     */
  CAUSE_NWMM_GPRS_NOT_ALLOWED    = 0x7,           /* GPRS services not allowed      */
  CAUSE_NWMM_GSM_GPRS_NOT_ALLOWED = 0x8,          /* GPRS services and non-GPRS services not allowed */
  CAUSE_NWMM_NO_MS_ID            = 0x9,           /* MS identity cannot be derived by the network */
  CAUSE_NWMM_IMPLICIT_DETACHED   = 0xa,           /* Implicitly detached            */
  CAUSE_NWMM_PLMN_NOT_ALLOWED    = 0xb,           /* PLMN not allowed               */
  CAUSE_NWMM_LA_NOT_ALLOWED      = 0xc,           /* Location Area not allowed      */
  CAUSE_NWMM_ROAMING_NOT_ALLOWED = 0xd,           /* Roaming not allowed in this location area */
  CAUSE_NWMM_GPRS_NOT_ALLOWED_IN_PLMN = 0xe,      /* GPRS service not allowed in this PLMN */
  CAUSE_NWMM_NO_SUITABLE_CELL_IN_LA = 0xf,        /* Find another allowed location area in the same PLMN */
  CAUSE_NWMM_MSC_TEMP_NOT_REACHABLE = 0x10,       /* MSC temporarily not reachable  */
  CAUSE_NWMM_NETWORK_FAILURE     = 0x11,          /* Network failure                */
  CAUSE_NWMM_MAC_FAILURE         = 0x14,          /* MAC failure                    */
  CAUSE_NWMM_SYNCH_FAILURE       = 0x15,          /* Synch failure                  */
  CAUSE_NWMM_CONGESTION          = 0x16,          /* Congestion                     */
  CAUSE_NWMM_GSM_AUTH_UNACCEPTABLE = 0x17,        /* No AUTN IE present when MS supports the UMTS authentication algorithm */
  CAUSE_NWMM_SERVICE_NOT_SUPPORTED = 0x20,        /* MS requests a service/facility which is not sup-ported by the PLMN. */
  CAUSE_NWMM_SERVICE_NOT_SUBSCRIBED = 0x21,       /* Requested service option not subscribed */
  CAUSE_NWMM_SERVICE_OUT_OF_ORDER = 0x22,         /* Service option temporary out of order in the MSC */
  CAUSE_NWMM_CALL_NOT_IDENTIFIED = 0x26,          /* Call is not identified         */
  CAUSE_NWMM_NO_PDP_CONTEXT_ACTIVATED = 0x28,     /* No PDP context activated       */
  CAUSE_NWMM_SEMANTIC_INCORRECT_MSG = 0x5f,       /* Semantically incorrect message */
  CAUSE_NWMM_INVALID_M_INFO      = 0x60,          /* Invalid mandatory information  */
  CAUSE_NWMM_MSG_TYPE_NOT_IMPLEMENTED = 0x61,     /* Message type non-existent or not implemented */
  CAUSE_NWMM_MSG_TYPE_INCOMPATIBLE_WITH_STATE = 0x62, /* Message type not compatible with the protocol state */
  CAUSE_NWMM_IE_NOT_IMPLEMENTED  = 0x63,          /* Information element non-existent or not implemented */
  CAUSE_NWMM_CONDITIONAL_IE_ERROR = 0x64,         /* Conditional IE error           */
  CAUSE_NWMM_MSG_INCOMPATIBLE_WITH_STATE = 0x65,  /* Message not compatible with the protocol state */
  CAUSE_NWMM_PROTOCOL_ERROR_UNSPECIFIED = 0x6f    /* Unspecified protocol error     */
}T_CAUSE_VAL_nwmm_cause;
#endif

/*
 * Enum to value table VAL_ppp_cause
 * CCDGEN:WriteEnum_Count==145
 */
#ifndef __T_CAUSE_VAL_ppp_cause__
#define __T_CAUSE_VAL_ppp_cause__
typedef enum
{
  CAUSE_PPP_TERM_OK_MMI          = 0x1,           /* successful terminated (MMI initiated) */
  CAUSE_PPP_TERM_OK_PEER         = 0x2,           /* successful terminated (PPP peer initiated) */
  CAUSE_PPP_TERM_NO_RESPONSE     = 0x3,           /* no response from the PPP peer  */
  CAUSE_PPP_TERM_LOOP_BACK       = 0x4,           /* looped-back link detected      */
  CAUSE_PPP_TERM_LCP_NOT_CONVERGE = 0x5,          /* LCP configuration is not converging */
  CAUSE_PPP_TERM_IPCP_NOT_CONVERGE = 0x6,         /* IPCP configuration is not converging */
  CAUSE_PPP_TERM_IPCP_NOT_STARTED = 0x7,          /* PPP peer did not start IPCP configuration */
  CAUSE_PPP_TERM_NO_CHANNEL      = 0x8,           /* can not open communication channels */
  CAUSE_PPP_TERM_PROT_REJ_UNEXPECTED = 0x9,       /* unexpected Protocol Rejection from PPP peer */
  CAUSE_PPP_TERM_USE_AUTHED_FAILED = 0xa,         /* user authentication failed     */
  CAUSE_PPP_TERM_PROT_ERROR_UNSPEC = 0xb          /* unspecified protocol error     */
}T_CAUSE_VAL_ppp_cause;
#endif

/*
 * Enum to value table VAL_rcm_cause
 * CCDGEN:WriteEnum_Count==146
 */
#ifndef __T_CAUSE_VAL_rcm_cause__
#define __T_CAUSE_VAL_rcm_cause__
typedef enum
{
  CAUSE_RCM_OK                   = 0x0,           /* Operation or configuration completed successfully. */
  CAUSE_RCM_ABORT_NW_NOT_FOUND   = 0x10,          /* Indicates that the selected network was not found. */
  CAUSE_RCM_ABORT_NO_NW_FOUND    = 0x11,          /* Indicates that no network was found. */
  CAUSE_RCM_ABORT_NO_NW_SEARCHING = 0x12,         /* Indicates that RCM has no candidates for cell reselection and cell reselection measurements are started on all neighbour cells. */
  CAUSE_RCM_ERROR_NO_CELL_SELECTED = 0x20,        /* RCM has failed to reactivate as requested and is no longer camped on a cell. */
  CAUSE_RCM_ERROR_PREVIOUS_CELL_SELECTED = 0x21,  /* RCM failed to reactivate as requested but the previously selected cell remains valid. */
  CAUSE_RCM_MEAS_SETUP_INCOMPLETE_CONFIG = 0x30,  /* A received measurement configuration is incomplete. */
  CAUSE_RCM_MEAS_SETUP_INVALID_CONFIG = 0x31,     /* A received measurement configuration is invalid. */
  CAUSE_RCM_MEAS_SETUP_UNSUPPORTED_MEAS = 0x32,   /* A received measurement type is not supported. */
  CAUSE_RCM_IRAT_CR_TARGET_BARRED = 0x1000,       /* Inter RAT cell reselection target cell is barred. */
  CAUSE_RCM_IRAT_CR_TARGET_RESERVED = 0x1001,     /* Inter RAT cell reselection target cell is reserved for operator use, and UE does not fulfil access requirements. */
  CAUSE_RCM_IRAT_CR_TARGET_NOT_FOUND = 0x1002,    /* Inter RAT cell reselection target cell was not found. */
  CAUSE_RCM_IRAT_CR_FAILURE_UNSPECIFIED = 0x1003  /* Inter RAT cell reselection failed without specification of failure cause. */
}T_CAUSE_VAL_rcm_cause;
#endif

/*
 * Enum to value table VAL_rr_cause
 * CCDGEN:WriteEnum_Count==147
 */
#ifndef __T_CAUSE_VAL_rr_cause__
#define __T_CAUSE_VAL_rr_cause__
typedef enum
{
  CAUSE_RR_OK                    = 0x0,           /* Operation or configuration completed successfully. */
  CAUSE_RR_NW_SCAN_REJECTED_CONNECTION_STATE = 0x20, /* A network scan could not be carried out due to the current connection state of RR. */
  CAUSE_RR_SYNC_RESOURCE_ASSIGNED = 0x30,         /* Traffic channel resource assigned */
  CAUSE_RR_SYNC_CHANNEL_MODE_MODIFIED = 0x31,     /* Channel mode modified          */
  CAUSE_RR_SYNC_DRX_CYCLE_LENGTH_UPDATED = 0x32,  /* The DRX cycle length has been modified */
  CAUSE_RR_RADIO_LINK_FAILURE    = 0x40,          /* Radio link failure occurred    */
  CAUSE_RR_DATA_LINK_FAILURE     = 0x41,          /* Data link failure occurred     */
  CAUSE_RR_RANDOM_ACCESS_FAILURE = 0x42,          /* Random access failed           */
  CAUSE_RR_DL_ESTABLISHMENT_FAILURE = 0x43,       /* DL establishment failure       */
  CAUSE_RR_ESTABLISH_REJECT      = 0x44,          /* Rejecting establishment due to wrong state in RR */
  CAUSE_RR_RELEASE_ABNORMAL_UNSPECIFIED = 0x50,   /* Abnormal release, unspecified  */
  CAUSE_RR_RELEASE_INTERNAL_UNSPECIFIED = 0x51,   /* Internal release, unspecified  */
  CAUSE_RR_ACCESS_BARRED         = 0x60,          /* Access barred because of access class control */
  CAUSE_RR_T3122_RUNNING         = 0x61,          /* T3122 running, emergency calls only until expiry */
  CAUSE_RR_ACCESS_DELAYED        = 0x62,          /* Access delayed because of immediate assignment reject and followed by timeout */
  CAUSE_RR_IRAT_CR_FAILURE_UNSPECIFIED = 0x1000,  /* Indicates that reselection to the specified target cell was not successful. */
  CAUSE_RR_IRAT_HO_MESSAGE_FAILURE = 0x1010,      /* Indicates that a check of a handover message to GSM failed. */
  CAUSE_RR_IRAT_HO_FAILURE_UNSPECIFIED = 0x1020,  /* Inter RAT handover failed without specification of failure cause. */
  CAUSE_RR_IRAT_HO_ARFCN_NOT_SUPPORTED = 0x1021,  /* Inter RAT handover failed because the frequency of the target cell was not supported. */
  CAUSE_RR_IRAT_CC_FAILURE_UNSPECIFIED = 0x1030   /* Inter RAT cell change from UMTS to GSM failed without a specific cause. */
}T_CAUSE_VAL_rr_cause;
#endif

/*
 * Enum to value table VAL_nwrr_cause
 * CCDGEN:WriteEnum_Count==148
 */
#ifndef __T_CAUSE_VAL_nwrr_cause__
#define __T_CAUSE_VAL_nwrr_cause__
typedef enum
{
  CAUSE_NWRR_RELEASE_NORMAL_EVENT = 0x0,          /* RR connection released normally */
  CAUSE_NWRR_RELEASE_UNSPECIFIED = 0x1,           /* RR connection released for unspecified reason */
  CAUSE_NWRR_RELEASE_CH_UNACCEPTABLE = 0x2,       /* RR connection released due to unacceptable channel */
  CAUSE_NWRR_RELEASE_TIMER_EXPIRED = 0x3,         /* RR connection released due to timer expirery */
  CAUSE_NWRR_RELEASE_NO_RADIO_ACTIVITY = 0x4,     /* RR connection released due to no activity on the radio path */
  CAUSE_NWRR_RELEASE_PREEMPTIVE  = 0x5,           /* RR connection released pre-emptively */
  CAUSE_NWRR_UTRAN_CONF_UNKNOWN  = 0x6,           /* UTRAN configuration unknown    */
  CAUSE_NWRR_HANDOVER_IMPOSSIBLE = 0x8,           /* Handover impossible, timing advance out of range */
  CAUSE_NWRR_CH_MODE_UNACCEPTABLE = 0x9,          /* Channel mode unacceptable      */
  CAUSE_NWRR_FREQ_NOT_IMPLEMENTED = 0xa,          /* Frequency not implemented      */
  CAUSE_NWRR_LOWER_LAYER_FAILURE = 0xc,           /* Lower layer failure            */
  CAUSE_NWRR_CALL_ALREADY_CLEARED = 0x41,         /* Call already cleared           */
  CAUSE_NWRR_INCORRECT_MESSAGE   = 0x5f,          /* Semantically incorrect message */
  CAUSE_NWRR_INVALID_MANDATORY_INFO = 0x60,       /* Invalid mandatory information  */
  CAUSE_NWRR_MESS_NOT_IMPLEMENTED = 0x61,         /* Message type non-existent or not implemented */
  CAUSE_NWRR_MESS_NOT_COMPATIBLE = 0x62,          /* Message type not compatible with protocol state */
  CAUSE_NWRR_CONDITIONAL_IE_ERROR = 0x64,         /* Conditional IE error           */
  CAUSE_NWRR_NO_CELL_ALLOCATION  = 0x65,          /* No cell allocation available   */
  CAUSE_NWRR_PROTOCOL_ERROR_UNSPECIFIED = 0x6f    /* Protocol error unspecified     */
}T_CAUSE_VAL_nwrr_cause;
#endif

/*
 * Enum to value table VAL_rlp_cause
 * CCDGEN:WriteEnum_Count==149
 */
#ifndef __T_CAUSE_VAL_rlp_cause__
#define __T_CAUSE_VAL_rlp_cause__
typedef enum
{
  CAUSE_ERR_BASE                 = 0x0,           /* RLP base error number          */
  CAUSE_ERR_PF_RETRANS           = 0x0,           /* Max Retransmissions of Poll reached */
  CAUSE_ERR_XID_RETRANS          = 0x1,           /* Max Retransmissions of XID reached */
  CAUSE_ERR_SABM_RETRANS         = 0x2,           /* Max Retransmissions of SABM reached */
  CAUSE_ERR_DISC_RETRANS         = 0x3,           /* Max Retransmissions of DISC reached */
  CAUSE_ERR_REMAP_RETRANS        = 0x4,           /* Max Retransmissions of REMAP reached */
  CAUSE_ERR_SDU_TO_SMALL         = 0x10,          /* Received SDU is to small       */
  CAUSE_ERR_INTERNAL             = 0x20           /* Internal error                 */
}T_CAUSE_VAL_rlp_cause;
#endif

/*
 * Enum to value table VAL_rrc_cause
 * CCDGEN:WriteEnum_Count==150
 */
#ifndef __T_CAUSE_VAL_rrc_cause__
#define __T_CAUSE_VAL_rrc_cause__
typedef enum
{
  CAUSE_RRC_OK                   = 0x0,           /* Operation or configuration completed successfully. */
  CAUSE_RRC_ABORT_UNSPECIFIED    = 0x1,           /* Abort for unspecified reason   */
  CAUSE_RRC_PHY_CAPABILITY_CHECK_FAILURE = 0x10,  /* Indicates that a check of PHY capabilities against requirements for a requested cell selection has failed causing RRC to refuse to start cell selection. */
  CAUSE_RRC_NW_SCAN_REJECTED_CONNECTION_STATE = 0x20, /* A network scan could not be carried out due to the current connection state of RRC. */
  CAUSE_RRC_SYNC_RESOURCE_ASSIGNED = 0x30,        /* Traffic channel resource assigned */
  CAUSE_RRC_SYNC_CHANNEL_MODE_MODIFIED = 0x31,    /* Channel mode modified          */
  CAUSE_RRC_SYNC_DRX_CYCLE_LENGTH_UPDATED = 0x32, /* The DRX cycle length has been modified */
  CAUSE_RRC_START_UPDATE_IDLE_MODE_ENTERED = 0x40, /* Update of START values on entering idle mode */
  CAUSE_RRC_START_UPDATE_THRESHOLD_REACHED = 0x41, /* Update of START values because threshold has been reached. */
  CAUSE_RRC_START_UPDATE_CONNECTION_ESTABLISHED = 0x42, /* Update of START values on connection establishment. */
  CAUSE_RRC_IRAT_HO_MESSAGE_FAILURE = 0x1000,     /* Indicates that a check of a handover message to UTRAN failed. */
  CAUSE_RRC_IRAT_HO_FAILURE_UNSPECIFIED = 0x1020, /* Inter RAT handover failed without specification of failure cause. */
  CAUSE_RRC_IRAT_CC_FAILURE_UNSPECIFIED = 0x1030  /* Inter RAT cell change from GSM to UMTS failed without a specific cause. */
}T_CAUSE_VAL_rrc_cause;
#endif

/*
 * Enum to value table VAL_nwrrc_cause
 * CCDGEN:WriteEnum_Count==151
 */
#ifndef __T_CAUSE_VAL_nwrrc_cause__
#define __T_CAUSE_VAL_nwrrc_cause__
typedef enum
{
  CAUSE_NWRRC_PAGING_MT_CONVERSATION = 0x0,       /* Mobile terminated conversational call */
  CAUSE_NWRRC_PAGING_MT_STREAM   = 0x1,           /* Mobile terminated streaming call */
  CAUSE_NWRRC_PAGING_MT_INTERACTIVE = 0x2,        /* Mobile terminated interactive call */
  CAUSE_NWRRC_PAGING_MT_BACKGROUND = 0x3,         /* Mobile terminated background call */
  CAUSE_NWRRC_PAGING_MT_HIGH_PRIO_SIGNAL = 0x4,   /* Mobile terminated high priority signalling */
  CAUSE_NWRRC_PAGING_MT_LOW_PRIO_SIGNAL = 0x5,    /* Mobile terminated low priority signalling */
  CAUSE_NWRRC_PAGING_MT_UNKNOWN  = 0x6,           /* Mobile terminated call - unknown cause */
  CAUSE_NWRRC_RELEASE_NORMAL_EVENT = 0x10,        /* RRC connection released normally */
  CAUSE_NWRRC_RELEASE_UNSPECIFIED = 0x11,         /* RRC connection released for unspecified reason */
  CAUSE_NWRRC_RELEASE_PREEMPTIVE = 0x12,          /* RRC connection released pre-emptively */
  CAUSE_NWRRC_RELEASE_CONGESTION = 0x13,          /* RRC connection released due to congestion */
  CAUSE_NWRRC_RELEASE_REESTABLISH_REJECT = 0x14,  /* RRC connection released due to rejection of connection reestablishment */
  CAUSE_NWRRC_RELEASE_DIR_SIGNAL_REESTAB = 0x15,  /* RRC connection released due to directed signalling reestablishment */
  CAUSE_NWRRC_RELEASE_USER_INACTIVITY = 0x16      /* RRC connection released due to user inactivity */
}T_CAUSE_VAL_nwrrc_cause;
#endif

/*
 * Enum to value table VAL_sim_cause
 * CCDGEN:WriteEnum_Count==152
 */
#ifndef __T_CAUSE_VAL_sim_cause__
#define __T_CAUSE_VAL_sim_cause__
typedef enum
{
  CAUSE_SIM_NO_ERROR             = 0xff,          /* No error (Status Code 9000, 91XX, 9FXX, 920X; USIM 63CX) */
  CAUSE_SIM_NO_SELECT            = 0x1,           /* No EF selected (SC 9400; USIM 6986) */
  CAUSE_SIM_UNKN_FILE_ID         = 0x2,           /* file id not found (SC 9404; USIM 6A82) */
  CAUSE_SIM_EF_INVALID           = 0x3,           /* EF invalidated (SC 9810; USIM 6283, 6984) */
  CAUSE_SIM_ADDR_WRONG           = 0x4,           /* Address of data invalid (SC 9402; USIM 6A83) */
  CAUSE_SIM_CMD_INCONSIST        = 0x5,           /* Command inconsistent with file type (SC 9408; USIM 6981) */
  CAUSE_SIM_MAX_INCREASE         = 0x6,           /* Increase: maximum reached (SC 9850) */
  CAUSE_SIM_CLA_WRONG            = 0x7,           /* Wrong class parameter (SC 6EXX) */
  CAUSE_SIM_INS_WRONG            = 0x8,           /* Unknown instruction code (SC 6DXX; USIM 6A81) */
  CAUSE_SIM_P1P2_WRONG           = 0x9,           /* Incorrect parameter P1, P2 (SC 6BXX; USIM 6A86. 6A88) */
  CAUSE_SIM_P3_WRONG             = 0xa,           /* Incorrect parameter P3 (SC 67XX; USIM 6282, 6A87) */
  CAUSE_SIM_CHV_NOTSET           = 0xb,           /* No CHV active (SC 9802; USIM 6982) */
  CAUSE_SIM_CHV_VALIDATED        = 0xc,           /* CHV already validated (SC 9808; USIM 6982) */
  CAUSE_SIM_ACCESS_PROHIBIT      = 0xd,           /* Access conditions not fulfilled (SC 9804; USIM 6985) */
  CAUSE_SIM_OTHER_ERROR          = 0xe,           /* Any other SIM error            */
  CAUSE_SIM_PUK1_BLOCKED         = 0xf,           /* PUK1 blocked (SC 9840; USIM 63C0) */
  CAUSE_SIM_PUK1_REMAIN1         = 0x10,          /* Wrong PUK1, 1 attempt left (SC 9804; USIM 63C1) */
  CAUSE_SIM_PUK1_REMAIN2         = 0x11,          /* Wrong PUK1, 2 attempts left (USIM 63C2) */
  CAUSE_SIM_PUK1_REMAIN3         = 0x12,          /* Wrong PUK1, 3 attempts left (USIM 63C3) */
  CAUSE_SIM_PUK1_REMAIN4         = 0x13,          /* Wrong PUK1, 4 attempts left (USIM 63C4) */
  CAUSE_SIM_PUK1_REMAIN5         = 0x14,          /* Wrong PUK1, 5 attempts left (USIM 63C5) */
  CAUSE_SIM_PUK1_REMAIN6         = 0x15,          /* Wrong PUK1, 6 attempts left (USIM 63C6) */
  CAUSE_SIM_PUK1_REMAIN7         = 0x16,          /* Wrong PUK1, 7 attempts left (USIM 63C7) */
  CAUSE_SIM_PUK1_REMAIN8         = 0x17,          /* Wrong PUK1, 8 attempts left (USIM 63C8) */
  CAUSE_SIM_PUK1_REMAIN9         = 0x18,          /* Wrong PUK1, 9 attempts left (USIM 63C9) */
  CAUSE_SIM_PUK1_EXPECT          = 0x19,          /* PUK1 required (SC 9804, 9808; USIM 6982, 6985) */
  CAUSE_SIM_PIN1_BLOCKED         = 0x1a,          /* PIN1 blocked (SC 9840; USIM 63C0, 6983) */
  CAUSE_SIM_PIN1_REMAIN1         = 0x1b,          /* Wrong PIN1, 1 attempt left (USIM 63C1) */
  CAUSE_SIM_PIN1_REMAIN2         = 0x1c,          /* Wrong PIN1, 2 attempts left (USIM 63C2) */
  CAUSE_SIM_PIN1_EXPECT          = 0x1d,          /* PIN1 required (SC 9804, 9808; USIM 6982, 6985) */
  CAUSE_SIM_PUK2_BLOCKED         = 0x1e,          /* PUK2 blocked (SC 9840; USIM 63C0) */
  CAUSE_SIM_PUK2_REMAIN1         = 0x1f,          /* Wrong PUK2, 1 attempt left (USIM 63C1) */
  CAUSE_SIM_PUK2_REMAIN2         = 0x20,          /* Wrong PUK2, 2 attempts left (USIM 63C2) */
  CAUSE_SIM_PUK2_REMAIN3         = 0x21,          /* Wrong PUK2, 3 attempts left (USIM 63C3) */
  CAUSE_SIM_PUK2_REMAIN4         = 0x22,          /* Wrong PUK2, 4 attempts left (USIM 63C4) */
  CAUSE_SIM_PUK2_REMAIN5         = 0x23,          /* Wrong PUK2, 5 attempts left (USIM 63C5) */
  CAUSE_SIM_PUK2_REMAIN6         = 0x24,          /* Wrong PUK2, 6 attempts left (USIM 63C6) */
  CAUSE_SIM_PUK2_REMAIN7         = 0x25,          /* Wrong PUK2, 7 attempts left (USIM 63C7) */
  CAUSE_SIM_PUK2_REMAIN8         = 0x26,          /* Wrong PUK2, 8 attempts left (USIM 63C8) */
  CAUSE_SIM_PUK2_REMAIN9         = 0x27,          /* Wrong PUK2, 9 attempts left (USIM 63C9) */
  CAUSE_SIM_PUK2_EXPECT          = 0x28,          /* PUK2 required (SC 9804, 9808; USIM 6982, 6985) */
  CAUSE_SIM_PIN2_BLOCKED         = 0x29,          /* PIN2 blocked (SC 9840; USIM 63C0, 6983) */
  CAUSE_SIM_PIN2_REMAIN1         = 0x2a,          /* Wrong PIN2, 1 attempt left (USIM 63C1) */
  CAUSE_SIM_PIN2_REMAIN2         = 0x2b,          /* Wrong PIN2, 2 attempts left (USIM 63C2) */
  CAUSE_SIM_PIN2_EXPECT          = 0x2c,          /* PIN1 required (SC 9804, 9808; USIM 6982, 6985) */
  CAUSE_SIM_SAT_BUSY             = 0x2d,          /* SIM Application Toolkit busy (SC 9300) */
  CAUSE_SIM_DNL_ERROR            = 0x2e,          /* SAT download error (SC 9EXX; USIM 62XX, 63XX) */
  CAUSE_SIM_CARD_REMOVED         = 0x2f,          /* SIM card removed or exchanged  */
  CAUSE_SIM_PARAM_WRONG          = 0x30,          /* Wrong parameter in primitive   */
  CAUSE_SIM_DRV_NOCARD           = 0x31,          /* SIM driver error: no card detected */
  CAUSE_SIM_DRV_NOINT            = 0x32,          /* SIM driver error: no interrupt */
  CAUSE_SIM_DRV_NOATR            = 0x33,          /* SIM driver error: no answer to reset */
  CAUSE_SIM_DRV_READ             = 0x34,          /* SIM driver error: invalid response */
  CAUSE_SIM_DRV_XMIT             = 0x35,          /* SIM driver error: unsuccessful transmission */
  CAUSE_SIM_DRV_OVF              = 0x36,          /* SIM driver error: interrupt overflow */
  CAUSE_SIM_DRV_LEN              = 0x37,          /* SIM driver error: incorrect size of response */
  CAUSE_SIM_DRV_CARDREJ          = 0x38,          /* SIM driver error: card rejected (invalid properties) */
  CAUSE_SIM_DRV_WAIT             = 0x39,          /* SIM driver error: timeout      */
  CAUSE_SIM_DRV_ABNCASE1         = 0x3a,          /* SIM driver error: abnormal case 1 */
  CAUSE_SIM_DRV_ABNCASE2         = 0x3b,          /* SIM driver error: abnormal case 2 */
  CAUSE_SIM_DRV_RCVOVFL          = 0x3c,          /* SIM driver error: more than 256 bytes received */
  CAUSE_SIM_DRV_TEMPFAIL         = 0x3f,          /* SIM driver error: temprary failure, SIM reset required */
  CAUSE_SIM_UMTS_AUTH_SQN_ERROR  = 0x40,          /* UMTS authentication failed due to Sequence Number error (erroneous AUTN) */
  CAUSE_SIM_UMTS_AUTH_MAC_ERROR  = 0x41           /* UMTS authentication failed due to MAC error (erroneous AUTN) */
}T_CAUSE_VAL_sim_cause;
#endif

/*
 * Enum to value table VAL_sm_cause
 * CCDGEN:WriteEnum_Count==153
 */
#ifndef __T_CAUSE_VAL_sm_cause__
#define __T_CAUSE_VAL_sm_cause__
typedef enum
{
  CAUSE_SM_MODIFY_COLLISION      = 0x1,           /* Collision between MO and MT modify. MT wins. */
  CAUSE_SM_INVALID_NSAPI         = 0x2,           /* Attempted procedure on non-existing context/NSAPI */
  CAUSE_SM_R99_PROCEDURE_REJECTED_IN_R97 = 0x3,   /* R99 Procedure rejected: Currently active in R97 network */
  CAUSE_SM_PRE_R99_NETWORK_ENTERED = 0x4,         /* Context deactivation due to entering pre-R99 network */
  CAUSE_SM_ACTIVATION_OVERRIDE   = 0x5            /* Context deactivation due to activation override */
}T_CAUSE_VAL_sm_cause;
#endif

/*
 * Enum to value table VAL_nwsm_cause
 * CCDGEN:WriteEnum_Count==154
 */
#ifndef __T_CAUSE_VAL_nwsm_cause__
#define __T_CAUSE_VAL_nwsm_cause__
typedef enum
{
  CAUSE_NWSM_LLC_OR_SNDCP_FAILURE = 0x19,         /* LLC or SNDCP failure           */
  CAUSE_NWSM_INSUFFICIENT_RESOURCES = 0x1a,       /* Insufficient resources         */
  CAUSE_NWSM_MISSING_OR_UNKNOWN_APN = 0x1b,       /* Missing or unknown APN         */
  CAUSE_NWSM_UNKNOWN_PDP_ADDR_OR_TYPE = 0x1c,     /* Unknown PDP address or PDP type */
  CAUSE_NWSM_USER_AUTH_FAILED    = 0x1d,          /* User Aauthentication failed    */
  CAUSE_NWSM_ACTIVATE_REJECTED_BY_GGSN = 0x1e,    /* Activation rejected by GGSN    */
  CAUSE_NWSM_ACTIVATE_REJECTED_UNSPECIFIED = 0x1f, /* Activation rejected, unspecified */
  CAUSE_NWSM_SERVICE_NOT_SUPPORTED = 0x20,        /* Service option not supported   */
  CAUSE_NWSM_SERVICE_NOT_SUBSCRIBED = 0x21,       /* Requested service option not subscribed */
  CAUSE_NWSM_SERVICE_TEMP_OUT_OF_ORDER = 0x22,    /* Service option temporarily out of order */
  CAUSE_NWSM_NSAPI_IN_USE        = 0x23,          /* NSAPI already used (pre-R99 only) */
  CAUSE_NWSM_REGULAR_DEACTIVATION = 0x24,         /* Regular deactivation           */
  CAUSE_NWSM_QOS_NOT_ACCEPTED    = 0x25,          /* QoS not accepted               */
  CAUSE_NWSM_NETWORK_FAILURE     = 0x26,          /* Network failure                */
  CAUSE_NWSM_REACTIVATION_REQUESTED = 0x27,       /* Reactivation requested         */
  CAUSE_NWSM_FEATURE_NOT_SUPPORTED = 0x28,        /* Feature not supported (context activation) */
  CAUSE_NWSM_SEMANTIC_TFT_ERROR  = 0x29,          /* Semantic error in TFT operation */
  CAUSE_NWSM_SYNTACTIC_TFT_ERROR = 0x2a,          /* Syntactical error in TFT operation */
  CAUSE_NWSM_UNKNOWN_LINKED_TI   = 0x2b,          /* Unknown PDP context (identified by linked TI) */
  CAUSE_NWSM_SEMANTIC_TFT_FILTER_ERROR = 0x2c,    /* Semantic error in packet filter */
  CAUSE_NWSM_SYNTACTIC_TFT_FILTER_ERROR = 0x2d,   /* Syntactical error in packet filter */
  CAUSE_NWSM_CONTEXT_NEEDS_TFT   = 0x2e,          /* PDP context without TFT already activated */
  CAUSE_NWSM_INVALID_TI          = 0x51,          /* Invalid transaction identifier value */
  CAUSE_NWSM_SEMANTIC_ERROR_IN_MSG = 0x5f,        /* Semantically incorrect message */
  CAUSE_NWSM_INVALID_MANDATORY_ELEMENT = 0x60,    /* Invalid mandatory information  */
  CAUSE_NWSM_MSG_TYPE_NOT_IMPLEMENTED = 0x61,     /* Message type non-existent or not implemented */
  CAUSE_NWSM_MSG_TYPE_INCOMPATIBLE_WITH_STATE = 0x62, /* Message type not compatible with the protocol state */
  CAUSE_NWSM_IE_NOT_IMPLEMENTED  = 0x63,          /* Information element non-existent or not implemented */
  CAUSE_NWSM_CONDITIONAL_IE_ERROR = 0x64,         /* Conditional IE error           */
  CAUSE_NWSM_MSG_INCOMPATIBLE_WITH_STATE = 0x65,  /* Message not compatible with the protocol state */
  CAUSE_NWSM_PROTOCOL_ERROR_UNSPECIFIED = 0x6f    /* Unspecified protocol error     */
}T_CAUSE_VAL_nwsm_cause;
#endif

/*
 * Enum to value table VAL_sms_cause
 * CCDGEN:WriteEnum_Count==155
 */
#ifndef __T_CAUSE_VAL_sms_cause__
#define __T_CAUSE_VAL_sms_cause__
typedef enum
{
  CAUSE_SMS_NO_ERROR             = 0x89ff,        /* No error                       */
  CAUSE_SMS_PARAM_WRONG          = 0xc900,        /* Wrong parameter in primitive   */
  CAUSE_SMS_ENTITY_BUSY          = 0xc901,        /* Entity is busy                 */
  CAUSE_SMS_OPER_NOT_ALLW        = 0xc902,        /* Operation not allowed          */
  CAUSE_SMS_OPER_NOT_SUPP        = 0xc903,        /* Operation not supported        */
  CAUSE_SMS_SIM_BUSY             = 0xc904,        /* SIM busy                       */
  CAUSE_SMS_MEM_FAIL             = 0xc905,        /* Memory failure                 */
  CAUSE_SMS_INV_INDEX            = 0xc906,        /* Invalid memory index           */
  CAUSE_SMS_MEM_FULL             = 0xc908,        /* Memory full                    */
  CAUSE_SMS_NO_SERVICE           = 0xc909,        /* No network service             */
  CAUSE_SMS_NET_TIMEOUT          = 0xc90a,        /* Network timeout                */
  CAUSE_SMS_UNEXP_CNMA           = 0xc90b,        /* No +CNMA acknowledgement expected */
  CAUSE_SMS_OTHER_ERROR          = 0xc90f         /* Any other error                */
}T_CAUSE_VAL_sms_cause;
#endif

/*
 * Enum to value table VAL_nwsms_cp_cause
 * CCDGEN:WriteEnum_Count==156
 */
#ifndef __T_CAUSE_VAL_nwsms_cp_cause__
#define __T_CAUSE_VAL_nwsms_cp_cause__
typedef enum
{
  CAUSE_NWSMS_CP_NETWORK_FAILURE = 0x11,          /* Network Failure                */
  CAUSE_NWSMS_CP_CONGESTION      = 0x16,          /* Congestion                     */
  CAUSE_NWSMS_CP_INVALID_TI      = 0x51,          /* Invalid Transaction Identifier */
  CAUSE_NWSMS_CP_SEM_INC_MSG     = 0x5f,          /* Semantically incorrect message */
  CAUSE_NWSMS_CP_INV_MAND_INFO   = 0x60,          /* Invalid mandatory information  */
  CAUSE_NWSMS_CP_MSG_TYPE_NON_EXIST = 0x61,       /* Message type non-existent or not implemented */
  CAUSE_NWSMS_CP_MSG_NOT_COMP    = 0x62,          /* Message not compatible with the short message protocol state */
  CAUSE_NWSMS_CP_INFO_NON_EXIST  = 0x63,          /* Information element non-existent or not implemented */
  CAUSE_NWSMS_CP_PROTOCOL_ERROR  = 0x6f           /* Protocol error, unspecified    */
}T_CAUSE_VAL_nwsms_cp_cause;
#endif

/*
 * Enum to value table VAL_nwsms_rp_cause
 * CCDGEN:WriteEnum_Count==157
 */
#ifndef __T_CAUSE_VAL_nwsms_rp_cause__
#define __T_CAUSE_VAL_nwsms_rp_cause__
typedef enum
{
  CAUSE_NWSMS_RP_UNASSIGNED_NUMBER = 0x1,         /* Unassigned (unallocated) number */
  CAUSE_NWSMS_RP_OPERATOR_DET_BARRED = 0x8,       /* Operator determined barring    */
  CAUSE_NWSMS_RP_CALL_BARRED     = 0xa,           /* Call barred                    */
  CAUSE_NWSMS_RP_SM_TRANSFER_REJECTED = 0x15,     /* Short message transfer rejected */
  CAUSE_NWSMS_RP_MEM_CAP_EXCEEDED = 0x16,         /* Memory Capacity exceeded       */
  CAUSE_NWSMS_RP_DEST_OUT_OF_ORDER = 0x1b,        /* Destination out of order       */
  CAUSE_NWSMS_RP_UNIDENT_SUBSCRIBER = 0x1c,       /* Unidentified subscriber        */
  CAUSE_NWSMS_RP_FACILITY_REJECTED = 0x1d,        /* Facility rejected              */
  CAUSE_NWSMS_RP_UNKNOWN_SUBSCRIBER = 0x1e,       /* Unknown subscriber             */
  CAUSE_NWSMS_RP_NET_OUT_OF_ORDER = 0x26,         /* Network out of order           */
  CAUSE_NWSMS_RP_TEMP_FAILURE    = 0x29,          /* Temporary Failure              */
  CAUSE_NWSMS_RP_CONGESTION      = 0x2a,          /* Congestion                     */
  CAUSE_NWSMS_RP_NO_RESOURCES    = 0x2f,          /* Resources unavailable, unspecified */
  CAUSE_NWSMS_RP_FAC_NOT_SUBSCRIBED = 0x32,       /* Requested facility not subscribed */
  CAUSE_NWSMS_RP_FAC_NOT_IMPL    = 0x45,          /* Requested facility not implemented */
  CAUSE_NWSMS_RP_INV_SM_TR_REF_VAL = 0x51,        /* Invalid short message transfer reference value */
  CAUSE_NWSMS_RP_SEM_INC_MSG     = 0x5f,          /* Semantically incorrect message */
  CAUSE_NWSMS_RP_INV_MAND_INFO   = 0x60,          /* Invalid mandatory information  */
  CAUSE_NWSMS_RP_MSG_NON_EXIST   = 0x61,          /* Message type non-existent or not implemented */
  CAUSE_NWSMS_RP_MSG_NOT_COMP    = 0x62,          /* Message not compatible with the short message protocol state */
  CAUSE_NWSMS_RP_INFO_NON_EXIST  = 0x63,          /* Information element non-existent or not implemented */
  CAUSE_NWSMS_RP_PROTOCOL_ERROR  = 0x6f,          /* Protocol error, unspecified    */
  CAUSE_NWSMS_RP_INTERWORKING    = 0x7f           /* Interworking, unspecified      */
}T_CAUSE_VAL_nwsms_rp_cause;
#endif

/*
 * Enum to value table VAL_nwsms_tp_cause
 * CCDGEN:WriteEnum_Count==158
 */
#ifndef __T_CAUSE_VAL_nwsms_tp_cause__
#define __T_CAUSE_VAL_nwsms_tp_cause__
typedef enum
{
  CAUSE_NWSMS_TP_TM_IW_NOT_SUP   = 0x80,          /* Telematic interworking not supported (MO) */
  CAUSE_NWSMS_TP_SM_0_NOT_SUP    = 0x81,          /* Short Message Type 0 not supported (MO, MT) */
  CAUSE_NWSMS_TP_CANT_REP_SM     = 0x82,          /* Cannot replace short message (MO, MT) */
  CAUSE_NWSMS_TP_TP_PID_UNSPEC   = 0x8f,          /* Unspecified TP-PID error (MO, MT) */
  CAUSE_NWSMS_TP_DCS_NOT_SUP     = 0x90,          /* Data coding scheme (alphabet) not supported (MO) */
  CAUSE_NWSMS_TP_CLASS_NOT_SUP   = 0x91,          /* Message class not supported (MT) */
  CAUSE_NWSMS_TP_TP_DCS_UNSPEC   = 0x9f,          /* Unspecified TP-DCS error (MO, MT) */
  CAUSE_NWSMS_TP_CMD_CANT_ACT    = 0xa0,          /* Command cannot be actioned (MO) */
  CAUSE_NWSMS_TP_CMD_NOT_SUP     = 0xa1,          /* Command unsupported (MO)       */
  CAUSE_NWSMS_TP_TP_CMD_UNSPEC   = 0xaf,          /* Unspecified TP-Command error (MO) */
  CAUSE_NWSMS_TP_TPDU_NOT_SUP    = 0xb0,          /* TPDU not supported (MO, MT)    */
  CAUSE_NWSMS_TP_SC_BUSY         = 0xc0,          /* SC busy (MO)                   */
  CAUSE_NWSMS_TP_NO_SC_SUBSCRIPT = 0xc1,          /* No SC subscription (MO)        */
  CAUSE_NWSMS_TP_SC_SYS_FAIL     = 0xc2,          /* SC system failure (MO)         */
  CAUSE_NWSMS_TP_INV_SME_ADDR    = 0xc3,          /* Invalid SME address (MO)       */
  CAUSE_NWSMS_TP_DEST_SME_BARRED = 0xc4,          /* Destination SME barred (MO)    */
  CAUSE_NWSMS_TP_REJ_DUPL_SM     = 0xc5,          /* SM rejected-duplicate SM (MO)  */
  CAUSE_NWSMS_TP_TPVPF_NOT_SUP   = 0xc6,          /* Validity Period Format not supported (MO) */
  CAUSE_NWSMS_TP_TPVP_NOT_SUP    = 0xc7,          /* Validity Period not supported (MO) */
  CAUSE_NWSMS_TP_SIM_MEM_FULL    = 0xd0,          /* SIM SMS storage full (MT)      */
  CAUSE_NWSMS_TP_NO_SMS_MEM_IN_MS = 0xd1,         /* No SMS storage capability in SIM (MT) */
  CAUSE_NWSMS_TP_ERROR_IN_MS     = 0xd2,          /* Error in MS (MT)               */
  CAUSE_NWSMS_TP_MEM_CAP_EXCEED  = 0xd3,          /* Memory Capacity exceeded (MO, MT) */
  CAUSE_NWSMS_TP_SAT_BUSY        = 0xd4,          /* SIM Application Toolkit busy (MT) */
  CAUSE_NWSMS_TP_SAT_DNL_ERROR   = 0xd5,          /* SIM Data Download error (MT)   */
  CAUSE_NWSMS_TP_UNSPECIFIED     = 0xff           /* Unspecified error cause (MO, MT) */
}T_CAUSE_VAL_nwsms_tp_cause;
#endif

/*
 * Enum to value table VAL_sn_cause
 * CCDGEN:WriteEnum_Count==159
 */
#ifndef __T_CAUSE_VAL_sn_cause__
#define __T_CAUSE_VAL_sn_cause__
typedef enum
{
  CAUSE_SN_NORMAL_RELEASE        = 0x0,           /* normal release (Not specified in 3G) */
  CAUSE_SN_INVALID_XID           = 0x100,         /* invalid XID response           */
  CAUSE_SN_DM_RECEIVED           = 0x101,         /* DM received                    */
  CAUSE_SN_NO_PEER_RESPONSE      = 0x102,         /* no peer response               */
  CAUSE_SN_LOWLAYER_DEACT        = 0x103          /* lower layer deactivation       */
}T_CAUSE_VAL_sn_cause;
#endif

/*
 * Enum to value table VAL_upm_cause
 * CCDGEN:WriteEnum_Count==160
 */
#ifndef __T_CAUSE_VAL_upm_cause__
#define __T_CAUSE_VAL_upm_cause__
typedef enum
{
  CAUSE_UPM_NORMAL_RELEASE       = 0x0,           /* normal release                 */
  CAUSE_UPM_DTI_DISCONNECT       = 0x10,          /* The DTI was closed for some reason */
  CAUSE_UPM_RT_QOS_RELEASE       = 0x200,         /* A real-time QoS caused a (RAB) release */
  CAUSE_UPM_REEST_NEEDED         = 0x201,         /* A real-time QoS context needs (RAB) reestablishment */
  CAUSE_UPM_REEST_REJECT         = 0x202          /* A reestablishment was rejected */
}T_CAUSE_VAL_upm_cause;
#endif

/*
 * Enum to value table VAL_rrlc_cause
 * CCDGEN:WriteEnum_Count==161
 */
#ifndef __T_CAUSE_VAL_rrlc_cause__
#define __T_CAUSE_VAL_rrlc_cause__
typedef enum
{
  CAUSE_LCS_OK                   = 0x0,           /* no error                       */
  CAUSE_LCS_ERROR                = 0x1,           /* Unspecified  error             */
  CAUSE_LCS_WRONG_BTS            = 0xa,           /* Serving Cell BTS differs from Reference BTS */
  CAUSE_LCS_HANDOVER             = 0x14           /* handover occured during Position Measurement procedure */
}T_CAUSE_VAL_rrlc_cause;
#endif

/* 
 * enum to UnionController value 
 * CCDGEN:WriteEnum_Count==162
 */
#ifndef __T_CAUSE_ctrl_value__
#define __T_CAUSE_ctrl_value__
typedef enum
{
  CAUSE_is_from_nwmm             = 0x0,           
  CAUSE_is_from_nwrr             = 0x1,           
  CAUSE_is_from_nwrrc            = 0x2,           
  CAUSE_is_from_nwsm             = 0x3,           
  CAUSE_is_from_nwss             = 0x4,           
  CAUSE_is_from_nwsms_cp         = 0x5,           
  CAUSE_is_from_nwsms_rp         = 0x6,           
  CAUSE_is_from_nwsms_tp         = 0x7,           
  CAUSE_is_from_nw               = 0x8,           
  CAUSE_is_from_cc               = 0x9,           
  CAUSE_is_from_dl               = 0xa,           
  CAUSE_is_from_l2r              = 0xb,           
  CAUSE_is_from_llc              = 0xc,           
  CAUSE_is_from_mm               = 0xd,           
  CAUSE_is_from_nwcc             = 0xe,           
  CAUSE_is_from_ppp              = 0xf,           
  CAUSE_is_from_rcm              = 0x10,          
  CAUSE_is_from_rr               = 0x11,          
  CAUSE_is_from_rlp              = 0x12,          
  CAUSE_is_from_rrc              = 0x13,          
  CAUSE_is_from_sim              = 0x14,          
  CAUSE_is_from_sm               = 0x15,          
  CAUSE_is_from_sms              = 0x16,          
  CAUSE_is_from_sndcp            = 0x17,          
  CAUSE_is_from_upm              = 0x18,          
  CAUSE_is_from_ue               = 0x19,          
  CAUSE_is_from_rrlc             = 0x1a           
}T_CAUSE_ctrl_value;
#endif

#include "CDG_LEAVE.h"


#endif
