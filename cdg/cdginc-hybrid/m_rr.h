/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : m_rr.h                                                         |
| SOURCE  : "msg\rr.mdf"                                                   |
| LastModified : "2002-12-19"                                              |
| IdAndVersion : "6147.604.97.114"                                         |
| SrcFileTime  : "Wed Nov 28 10:19:34 2007"                                |
| Generated by CCDGEN_2.5.5A on Fri Oct 14 21:41:52 2016                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : NONE
 * COMPATIBILITY_DEFINES  : NO (require PREFIX)
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 */


#ifndef M_RR_H
#define M_RR_H


#define CDG_ENTER__M_RR_H

#define CDG_ENTER__FILENAME _M_RR_H
#define CDG_ENTER__M_RR_H__FILE_TYPE CDGINC
#define CDG_ENTER__M_RR_H__LAST_MODIFIED _2002_12_19
#define CDG_ENTER__M_RR_H__ID_AND_VERSION _6147_604_97_114

#define CDG_ENTER__M_RR_H__SRC_FILE_TIME _Wed_Nov_28_10_19_34_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__M_RR_H

#undef CDG_ENTER__FILENAME


#include "m_rr.val"

#include "m_rr_com.h"

/*
 * bitbuffer structure for the element cell_chan_desc
 */
#ifndef __T_BUF_cell_chan_desc__
#define __T_BUF_cell_chan_desc__
typedef struct
{
  U16 l_cell_chan_desc;
  U16 o_cell_chan_desc;
  U8  b_cell_chan_desc[20];
} BUF_cell_chan_desc; /* size <24> */
#endif
/*
 * bitbuffer structure for the element ext_meas_freq
 */
#ifndef __T_BUF_ext_meas_freq__
#define __T_BUF_ext_meas_freq__
typedef struct
{
  U16 l_ext_meas_freq;
  U16 o_ext_meas_freq;
  U8  b_ext_meas_freq[20];
} BUF_ext_meas_freq; /* size <24> */
#endif
/*
 * bitbuffer structure for the element freq_short_list_before
 */
#ifndef __T_BUF_freq_short_list_before__
#define __T_BUF_freq_short_list_before__
typedef struct
{
  U16 l_freq_short_list_before;
  U16 o_freq_short_list_before;
  U8  b_freq_short_list_before[12];
} BUF_freq_short_list_before; /* size <16> */
#endif
/*
 * bitbuffer structure for the element freq_short_list_after
 */
#ifndef __T_BUF_freq_short_list_after__
#define __T_BUF_freq_short_list_after__
typedef struct
{
  U16 l_freq_short_list_after;
  U16 o_freq_short_list_after;
  U8  b_freq_short_list_after[12];
} BUF_freq_short_list_after; /* size <16> */
#endif
/*
 * bitbuffer structure for the element freq_short_list2
 */
#ifndef __T_BUF_freq_short_list2__
#define __T_BUF_freq_short_list2__
typedef struct
{
  U16 l_freq_short_list2;
  U16 o_freq_short_list2;
  U8  b_freq_short_list2[8];
} BUF_freq_short_list2; /* size <12> */
#endif
/*
 * bitbuffer structure for the element gcr
 */
#ifndef __T_BUF_gcr__
#define __T_BUF_gcr__
typedef struct
{
  U16 l_gcr;
  U16 o_gcr;
  U8  b_gcr[8];
} BUF_gcr; /* size <12> */
#endif
/*
 * bitbuffer structure for the element neigh_cell_desc
 */
#ifndef __T_BUF_neigh_cell_desc__
#define __T_BUF_neigh_cell_desc__
typedef struct
{
  U16 l_neigh_cell_desc;
  U16 o_neigh_cell_desc;
  U8  b_neigh_cell_desc[20];
} BUF_neigh_cell_desc; /* size <24> */
#endif
/*
 * bitbuffer structure for the element ded_tlli
 */
#ifndef __T_BUF_ded_tlli__
#define __T_BUF_ded_tlli__
typedef struct
{
  U16 l_ded_tlli;
  U16 o_ded_tlli;
  U8  b_ded_tlli[8];
} BUF_ded_tlli; /* size <12> */
#endif
/*
 * bitbuffer structure for the element tmsi_1
 */
#ifndef __T_BUF_tmsi_1__
#define __T_BUF_tmsi_1__
typedef struct
{
  U16 l_tmsi_1;
  U16 o_tmsi_1;
  U8  b_tmsi_1[8];
} BUF_tmsi_1; /* size <12> */
#endif
/*
 * bitbuffer structure for the element tmsi_2
 */
#ifndef __T_BUF_tmsi_2__
#define __T_BUF_tmsi_2__
typedef struct
{
  U16 l_tmsi_2;
  U16 o_tmsi_2;
  U8  b_tmsi_2[8];
} BUF_tmsi_2; /* size <12> */
#endif
/*
 * bitbuffer structure for the element tmsi_3
 */
#ifndef __T_BUF_tmsi_3__
#define __T_BUF_tmsi_3__
typedef struct
{
  U16 l_tmsi_3;
  U16 o_tmsi_3;
  U8  b_tmsi_3[8];
} BUF_tmsi_3; /* size <12> */
#endif
/*
 * bitbuffer structure for the element tmsi_4
 */
#ifndef __T_BUF_tmsi_4__
#define __T_BUF_tmsi_4__
typedef struct
{
  U16 l_tmsi_4;
  U16 o_tmsi_4;
  U8  b_tmsi_4[8];
} BUF_tmsi_4; /* size <12> */
#endif
// VAR-FF: REL99  
/*
 * bitbuffer structure for the element ptmsi
 */
// #ifndef __T_BUF_ptmsi__
// #define __T_BUF_ptmsi__
// // typedef struct
// {
//   U16 l_ptmsi;
//   U16 o_ptmsi;
//   U8  b_ptmsi[8];
// } BUF_ptmsi; /* size <12> */
// #endif
#ifndef __T_alpha_gamma__
#define __T_alpha_gamma__
/*
 * Alpha Gamma
 * CCDGEN:WriteStruct_Count==72
 */
typedef struct
{
  U8                        alpha;                    /*<  0:  1> Alpha                                              */
  U8                        gamma;                    /*<  1:  1> Gamma                                              */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_alpha_gamma;
#endif

#ifndef __T_apdu_data__
#define __T_apdu_data__
/*
 * APDU Data
 * CCDGEN:WriteStruct_Count==73
 */
typedef struct
{
  U8                        c_apdu_info;              /*<  0:  1> counter                                            */
  U8                        apdu_info[MAX_APDU_DATA]; /*<  1:248> APDU Information                                   */
  U8                        _align0;                  /*<249:  1> alignment                                          */
  U8                        _align1;                  /*<250:  1> alignment                                          */
  U8                        _align2;                  /*<251:  1> alignment                                          */
} T_apdu_data;
#endif

#ifndef __T_apdu_flags__
#define __T_apdu_flags__
/*
 * APDU Flags
 * CCDGEN:WriteStruct_Count==74
 */
typedef struct
{
  U8                        c_r;                      /*<  0:  1> Command/Final Response                             */
  U8                        f_seg;                    /*<  1:  1> First segment                                      */
  U8                        l_seg;                    /*<  2:  1> Last segment                                       */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_apdu_flags;
#endif

#ifndef __T_apdu_id__
#define __T_apdu_id__
/*
 * APDU ID
 * CCDGEN:WriteStruct_Count==75
 */
typedef struct
{
  U8                        protoc_ident;             /*<  0:  1> Protocol Identifier                                */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_apdu_id;
#endif

#ifndef __T_cell_desc__
#define __T_cell_desc__
/*
 * Cell Description
 * CCDGEN:WriteStruct_Count==76
 */
typedef struct
{
  U8                        bcch_arfcn_hi;            /*<  0:  1> BCCH ARFCN                                         */
  U8                        ncc;                      /*<  1:  1> PLMN Colour Code                                   */
  U8                        bcc;                      /*<  2:  1> BS Colour Code                                     */
  U8                        bcch_arfcn_lo;            /*<  3:  1> BCCH ARFCN                                         */
} T_cell_desc;
#endif

#ifndef __T_cell_opt_bcch__
#define __T_cell_opt_bcch__
/*
 * Cell Options (BCCH)
 * CCDGEN:WriteStruct_Count==77
 */
typedef struct
{
  U8                        pow_ctrl;                 /*<  0:  1> Power Control                                      */
  U8                        dtx_b;                    /*<  1:  1> Discontinuous Transmission (BCCH)                  */
  U8                        rlt;                      /*<  2:  1> Radio Link Timeout                                 */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_cell_opt_bcch;
#endif

#ifndef __T_cell_opt_sacch__
#define __T_cell_opt_sacch__
/*
 * Cell Options (SACCH)
 * CCDGEN:WriteStruct_Count==78
 */
typedef struct
{
  U8                        dtx2_s;                   /*<  0:  1> Discontinuous Transmission (SACCH) MSB             */
  U8                        pow_ctrl;                 /*<  1:  1> Power Control                                      */
  U8                        dtx_s;                    /*<  2:  1> Discontinuous Transmission (SACCH) MSB             */
  U8                        rlt;                      /*<  3:  1> Radio Link Timeout                                 */
} T_cell_opt_sacch;
#endif

#ifndef __T_cell_select__
#define __T_cell_select__
/*
 * Cell Selection Parameters
 * CCDGEN:WriteStruct_Count==79
 */
typedef struct
{
  U8                        cell_resel_hyst;          /*<  0:  1> CELL-RESELECT HYSTERESIS                           */
  U8                        ms_txpwr_max_cch;         /*<  1:  1> MS-TXPWR-MAX-CCH                                   */
  U8                        acs;                      /*<  2:  1> Additional reselect parameter indication           */
  U8                        neci;                     /*<  3:  1> Half rate support                                  */
  U8                        rxlev_access_min;         /*<  4:  1> RX Level Access Minimum                            */
  U8                        _align0;                  /*<  5:  1> alignment                                          */
  U8                        _align1;                  /*<  6:  1> alignment                                          */
  U8                        _align2;                  /*<  7:  1> alignment                                          */
} T_cell_select;
#endif

#ifndef __T_chan_desc__
#define __T_chan_desc__
/*
 * Channel Description
 * CCDGEN:WriteStruct_Count==80
 */
typedef struct
{
  U8                        chan_type;                /*<  0:  1> Channel type and TDMA offset                       */
  U8                        tn;                       /*<  1:  1> Time Slot                                          */
  U8                        tsc;                      /*<  2:  1> Training Sequence Code                             */
  U8                        hop;                      /*<  3:  1> Hopping                                            */
  U8                        _align0;                  /*<  4:  1> alignment                                          */
  U8                        v_arfcn;                  /*<  5:  1> valid-flag                                         */
  U16                       arfcn;                    /*<  6:  2> Absolute RF Channel Number                         */
  U8                        v_maio;                   /*<  8:  1> valid-flag                                         */
  U8                        maio;                     /*<  9:  1> Mobile Allocation Index Offset                     */
  U8                        v_hsn;                    /*< 10:  1> valid-flag                                         */
  U8                        hsn;                      /*< 11:  1> Hopping Sequence Number                            */
} T_chan_desc;
#endif

/*
 * Channel Description
 * CCDGEN:WriteStruct_Count==81
 */
#ifndef __T_chan_desc_2__
#define __T_chan_desc_2__
typedef T_chan_desc T_chan_desc_2;
#endif
/*
 * Channel Description
 * CCDGEN:WriteStruct_Count==82
 */
#ifndef __T_chan_desc_before__
#define __T_chan_desc_before__
typedef T_chan_desc T_chan_desc_before;
#endif
/*
 * Channel Description
 * CCDGEN:WriteStruct_Count==83
 */
#ifndef __T_chan_desc_before_2__
#define __T_chan_desc_before_2__
typedef T_chan_desc T_chan_desc_before_2;
#endif
/*
 * Channel Description
 * CCDGEN:WriteStruct_Count==84
 */
#ifndef __T_chan_desc_after__
#define __T_chan_desc_after__
typedef T_chan_desc T_chan_desc_after;
#endif
/*
 * Channel Description
 * CCDGEN:WriteStruct_Count==85
 */
#ifndef __T_chan_desc_after_2__
#define __T_chan_desc_after_2__
typedef T_chan_desc T_chan_desc_after_2;
#endif
#ifndef __T_chan_needed__
#define __T_chan_needed__
/*
 * Channel Needed
 * CCDGEN:WriteStruct_Count==86
 */
typedef struct
{
  U8                        cn2;                      /*<  0:  1> Channel Needed for Mobile ID 2                     */
  U8                        cn1;                      /*<  1:  1> Channel Needed for Mobile ID 1                     */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_chan_needed;
#endif

#ifndef __T_chan_needed3_4__
#define __T_chan_needed3_4__
/*
 * Channel Needed for Mobile ID 3 and 4
 * CCDGEN:WriteStruct_Count==87
 */
typedef struct
{
  U8                        cn3;                      /*<  0:  1> Channel Needed for Mobile ID 3                     */
  U8                        cn4;                      /*<  1:  1> Channel Needed for Mobile ID 4                     */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_chan_needed3_4;
#endif

#ifndef __T_chan_req_desc__
#define __T_chan_req_desc__
/*
 * Channel Request Description
 * CCDGEN:WriteStruct_Count==88
 */
typedef struct
{
  U8                        or_ty;                    /*<  0:  1> MT/MO Origination type                             */
  U8                        v_crd_prio;               /*<  1:  1> valid-flag                                         */
  U8                        crd_prio;                 /*<  2:  1> Channel Request Description Priority               */
  U8                        v_rlc_mode;               /*<  3:  1> valid-flag                                         */
  U8                        rlc_mode;                 /*<  4:  1> RLC Mode                                           */
  U8                        v_llc_fr_type;            /*<  5:  1> valid-flag                                         */
  U8                        llc_fr_type;              /*<  6:  1> LLC Frame Type                                     */
  U8                        v_rbw;                    /*<  7:  1> valid-flag                                         */
  U16                       rbw;                      /*<  8:  2> Requested Bandwidth                                */
  U8                        _align0;                  /*< 10:  1> alignment                                          */
  U8                        v_rlc_c_oct;              /*< 11:  1> valid-flag                                         */
  U16                       rlc_c_oct;                /*< 12:  2> RLC Octet Count                                    */
  U8                        _align1;                  /*< 14:  1> alignment                                          */
  U8                        _align2;                  /*< 15:  1> alignment                                          */
} T_chan_req_desc;
#endif

#ifndef __T_ciph_key_num__
#define __T_ciph_key_num__
/*
 * Ciphering Key Sequence Number
 * CCDGEN:WriteStruct_Count==89
 */
typedef struct
{
  U8                        key_seq;                  /*<  0:  1> key sequence                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_ciph_key_num;
#endif

#ifndef __T_ciph_mode_set__
#define __T_ciph_mode_set__
/*
 * Cipher Mode Setting
 * CCDGEN:WriteStruct_Count==90
 */
typedef struct
{
  U8                        algo_ident;               /*<  0:  1> algorithm identifier                               */
  U8                        sc;                       /*<  1:  1> Start Ciphering                                    */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_ciph_mode_set;
#endif

#ifndef __T_ciph_res__
#define __T_ciph_res__
/*
 * Cipher Response
 * CCDGEN:WriteStruct_Count==91
 */
typedef struct
{
  U8                        cr;                       /*<  0:  1> Cipher Response Info                               */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_ciph_res;
#endif

#ifndef __T_cod_prop__
#define __T_cod_prop__
/*
 * Codec Properties
 * CCDGEN:WriteStruct_Count==92
 */
typedef struct
{
  U8                        codec_thr;                /*<  0:  1> Codec Threshold                                    */
  U8                        codec_hyst;               /*<  1:  1> Codec Hysteresis                                   */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_cod_prop;
#endif

#ifndef __T_ctrl_chan_desc__
#define __T_ctrl_chan_desc__
/*
 * Control Channel Description
 * CCDGEN:WriteStruct_Count==93
 */
typedef struct
{
  U8                        mscr;                     /*<  0:  1> MSC Release                                        */
  U8                        att;                      /*<  1:  1> Attach / detach allowed                            */
  U8                        bs_ag_blks_res;           /*<  2:  1> BS Access Grant Blocks reserved                    */
  U8                        ccch_conf;                /*<  3:  1> Common Control Channel Configuration               */
  U8                        bs_pa_mfrms;              /*<  4:  1> BS Paging Multiframes                              */
  U8                        t3212;                    /*<  5:  1> T 3212 time-out value                              */
  U8                        _align0;                  /*<  6:  1> alignment                                          */
  U8                        _align1;                  /*<  7:  1> alignment                                          */
} T_ctrl_chan_desc;
#endif

#ifndef __T_dgcr__
#define __T_dgcr__
/*
 * Descriptive Group Call Reference
 * CCDGEN:WriteStruct_Count==94
 */
typedef struct
{
  BUF_gcr                   gcr;                      /*<  0: 12> Group Call Reference                               */
  U8                        sf;                       /*< 12:  1> Service Flag                                       */
  U8                        af;                       /*< 13:  1> Acknowledge Flag                                   */
  U8                        call_prio;                /*< 14:  1> Call Priority                                      */
  U8                        group_ckn;                /*< 15:  1> Group Cipher Key Number                            */
} T_dgcr;
#endif

#ifndef __T_es_ind_tag__
#define __T_es_ind_tag__
/*
 * Early Classmark Sending Tag
 * CCDGEN:WriteStruct_Count==95
 */
/* typedef void T_es_ind_tag;*/
#endif
#ifndef __T_ext_meas_res__
#define __T_ext_meas_res__
/*
 * Extended Measurement Results
 * CCDGEN:WriteStruct_Count==96
 */
typedef struct
{
  U8                        sc_used;                  /*<  0:  1> Sequence Code Used                                 */
  U8                        dtx_used;                 /*<  1:  1> DTX USED                                           */
  U8                        rx_lev_ncell[21];         /*<  2: 21> RX Level Ncell                                     */
  U8                        _align0;                  /*< 23:  1> alignment                                          */
} T_ext_meas_res;
#endif

#ifndef __T_freq_chan_seq__
#define __T_freq_chan_seq__
/*
 * Frequency Channel Sequence
 * CCDGEN:WriteStruct_Count==97
 */
typedef struct
{
  U8                        low_arfcn;                /*<  0:  1> Lowest ARFCN                                       */
  U8                        inc_skip[N_FREQ_SKIP];    /*<  1: 16> inc skip of ARFCNn                                 */
  U8                        _align0;                  /*< 17:  1> alignment                                          */
  U8                        _align1;                  /*< 18:  1> alignment                                          */
  U8                        _align2;                  /*< 19:  1> alignment                                          */
} T_freq_chan_seq;
#endif

/*
 * Frequency Channel Sequence
 * CCDGEN:WriteStruct_Count==98
 */
#ifndef __T_freq_chan_seq_before__
#define __T_freq_chan_seq_before__
typedef T_freq_chan_seq T_freq_chan_seq_before;
#endif
/*
 * Frequency Channel Sequence
 * CCDGEN:WriteStruct_Count==99
 */
#ifndef __T_freq_chan_seq_after__
#define __T_freq_chan_seq_after__
typedef T_freq_chan_seq T_freq_chan_seq_after;
#endif
#ifndef __T_freq_list__
#define __T_freq_list__
/*
 * Frequency List
 * CCDGEN:WriteStruct_Count==100
 */
typedef struct
{
  U8                        c_flist;                  /*<  0:  1> counter                                            */
  U8                        flist[32];                /*<  1: 32> Frequency List Contents                            */
  U8                        _align0;                  /*< 33:  1> alignment                                          */
  U8                        _align1;                  /*< 34:  1> alignment                                          */
  U8                        _align2;                  /*< 35:  1> alignment                                          */
} T_freq_list;
#endif

/*
 * Frequency List
 * CCDGEN:WriteStruct_Count==101
 */
#ifndef __T_freq_list_after__
#define __T_freq_list_after__
typedef T_freq_list T_freq_list_after;
#endif
/*
 * Frequency List
 * CCDGEN:WriteStruct_Count==102
 */
#ifndef __T_freq_list_before__
#define __T_freq_list_before__
typedef T_freq_list T_freq_list_before;
#endif
#ifndef __T_freq_range__
#define __T_freq_range__
/*
 * Frequency Range
 * CCDGEN:WriteStruct_Count==103
 */
typedef struct
{
  U16                       freq_lower;               /*<  0:  2> Frequency Range Lower                              */
  U16                       freq_higher;              /*<  2:  2> Frequency Range Higher                             */
} T_freq_range;
#endif

#ifndef __T_ba_list_pref__
#define __T_ba_list_pref__
/*
 * BA List Pref
 * CCDGEN:WriteStruct_Count==104
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        v_freq_range;             /*<  2:  1> valid-flag                                         */
  U8                        c_freq_range;             /*<  3:  1> counter                                            */
  T_freq_range              freq_range[MAX_RANGE];    /*<  4: 40> Frequency Range                                    */
  U8                        v_arfcn;                  /*< 44:  1> valid-flag                                         */
  U8                        c_arfcn;                  /*< 45:  1> counter                                            */
  U16                       arfcn[MAX_ARFCN];         /*< 46: 40> Absolute RF Channel Number                         */
  U8                        _align2;                  /*< 86:  1> alignment                                          */
  U8                        _align3;                  /*< 87:  1> alignment                                          */
} T_ba_list_pref;
#endif

#ifndef __T_ba_range__
#define __T_ba_range__
/*
 * BA Range
 * CCDGEN:WriteStruct_Count==105
 */
typedef struct
{
  U8                        num_range;                /*<  0:  1> Number of Ranges                                   */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        c_freq_range;             /*<  3:  1> counter                                            */
  T_freq_range              freq_range[N_MAX_RANGE];  /*<  4:120> Frequency Range                                    */
} T_ba_range;
#endif

#ifndef __T_gprs_indic__
#define __T_gprs_indic__
/*
 * GPRS Indicator
 * CCDGEN:WriteStruct_Count==106
 */
typedef struct
{
  U8                        ra_color;                 /*<  0:  1> RA color                                           */
  U8                        si13_pos;                 /*<  1:  1> SI13 Position                                      */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_gprs_indic;
#endif

#ifndef __T_gprs_meas_res__
#define __T_gprs_meas_res__
/*
 * GPRS Measurement Results
 * CCDGEN:WriteStruct_Count==107
 */
typedef struct
{
  U8                        c_val;                    /*<  0:  1> C Value                                            */
  U8                        rxqual;                   /*<  1:  1> RX Quality                                         */
  U8                        sign_var;                 /*<  2:  1> Signal Variance                                    */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_gprs_meas_res;
#endif

#ifndef __T_gprs_ma__
#define __T_gprs_ma__
/*
 * GPRS Mobile Allocation
 * CCDGEN:WriteStruct_Count==108
 */
typedef struct
{
  U8                        hsn;                      /*<  0:  1> Hopping Sequence Number                            */
  U8                        v_rfln;                   /*<  1:  1> valid-flag                                         */
  U8                        c_rfln;                   /*<  2:  1> counter                                            */
  U8                        rfln[MAX_RFL];            /*<  3:  5> RFL Number                                         */
  U8                        hop;                      /*<  8:  1> Hopping                                            */
  U8                        v_allo_len6;              /*<  9:  1> valid-flag                                         */
  U8                        allo_len6;                /*< 10:  1> Allocation Bitmap Length                           */
  U8                        v_allo_bmp6;              /*< 11:  1> valid-flag                                         */
  U8                        c_allo_bmp6;              /*< 12:  1> counter                                            */
  U8                        allo_bmp6[64];            /*< 13: 64> Allocation Bitmap                                  */
  U8                        v_arfcn_idx;              /*< 77:  1> valid-flag                                         */
  U8                        c_arfcn_idx;              /*< 78:  1> counter                                            */
  U8                        arfcn_idx[MAX_ARFCNI];    /*< 79:  5> ARFCN Index                                        */
} T_gprs_ma;
#endif

#ifndef __T_gprs_resum__
#define __T_gprs_resum__
/*
 * GPRS Resumption
 * CCDGEN:WriteStruct_Count==109
 */
typedef struct
{
  U8                        res_ack;                  /*<  0:  1> Resumption ACK                                     */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_gprs_resum;
#endif

#ifndef __T_group_chan_desc__
#define __T_group_chan_desc__
/*
 * Group Channel Description
 * CCDGEN:WriteStruct_Count==110
 */
typedef struct
{
  U8                        chan_type;                /*<  0:  1> Channel type and TDMA offset                       */
  U8                        tn;                       /*<  1:  1> Time Slot                                          */
  U8                        tsc;                      /*<  2:  1> Training Sequence Code                             */
  U8                        hop;                      /*<  3:  1> Hopping                                            */
  U8                        _align0;                  /*<  4:  1> alignment                                          */
  U8                        v_arfcn;                  /*<  5:  1> valid-flag                                         */
  U16                       arfcn;                    /*<  6:  2> Absolute RF Channel Number                         */
  U8                        v_maio;                   /*<  8:  1> valid-flag                                         */
  U8                        maio;                     /*<  9:  1> Mobile Allocation Index Offset                     */
  U8                        v_hsn;                    /*< 10:  1> valid-flag                                         */
  U8                        hsn;                      /*< 11:  1> Hopping Sequence Number                            */
  U8                        v_mac;                    /*< 12:  1> valid-flag                                         */
  U8                        c_mac;                    /*< 13:  1> counter                                            */
  U8                        mac[N_MOB_ALLOC];         /*< 14:  8> Mobile Allocation Contents                         */
  U8                        _align1;                  /*< 22:  1> alignment                                          */
  U8                        _align2;                  /*< 23:  1> alignment                                          */
} T_group_chan_desc;
#endif

#ifndef __T_hop_freq__
#define __T_hop_freq__
/*
 * Hopping Frequencies
 * CCDGEN:WriteStruct_Count==111
 */
typedef struct
{
  U8                        flag;                     /*<  0:  1> Flag                                               */
  U8                        v_ma_len;                 /*<  1:  1> valid-flag                                         */
  U8                        ma_len;                   /*<  2:  1> Mobile Allocation Length                           */
  U8                        v_mac;                    /*<  3:  1> valid-flag                                         */
  U8                        c_mac;                    /*<  4:  1> counter                                            */
  U8                        mac[N_MOB_ALLOC];         /*<  5:  8> Mobile Allocation Contents                         */
  U8                        _align0;                  /*< 13:  1> alignment                                          */
  U8                        _align1;                  /*< 14:  1> alignment                                          */
  U8                        v_freq_short_list2;       /*< 15:  1> valid-flag                                         */
  BUF_freq_short_list2      freq_short_list2;         /*< 16: 12> Frequency Short List 2                             */
} T_hop_freq;
#endif

#ifndef __T_gr_ch_desc__
#define __T_gr_ch_desc__
/*
 * Group Channel Description 2
 * CCDGEN:WriteStruct_Count==112
 */
typedef struct
{
  U8                        chan_type;                /*<  0:  1> Channel type and TDMA offset                       */
  U8                        tn;                       /*<  1:  1> Time Slot                                          */
  U8                        tsc;                      /*<  2:  1> Training Sequence Code                             */
  U8                        hop;                      /*<  3:  1> Hopping                                            */
  U8                        _align0;                  /*<  4:  1> alignment                                          */
  U8                        v_arfcn;                  /*<  5:  1> valid-flag                                         */
  U16                       arfcn;                    /*<  6:  2> Absolute RF Channel Number                         */
  U8                        v_maio;                   /*<  8:  1> valid-flag                                         */
  U8                        maio;                     /*<  9:  1> Mobile Allocation Index Offset                     */
  U8                        v_hsn;                    /*< 10:  1> valid-flag                                         */
  U8                        hsn;                      /*< 11:  1> Hopping Sequence Number                            */
  U8                        _align1;                  /*< 12:  1> alignment                                          */
  U8                        _align2;                  /*< 13:  1> alignment                                          */
  U8                        _align3;                  /*< 14:  1> alignment                                          */
  U8                        v_hop_freq;               /*< 15:  1> valid-flag                                         */
  T_hop_freq                hop_freq;                 /*< 16: 28> Hopping Frequencies                                */
} T_gr_ch_desc;
#endif

#ifndef __T_gr_call_info__
#define __T_gr_call_info__
/*
 * Group Call Information
 * CCDGEN:WriteStruct_Count==113
 */
typedef struct
{
  T_dgcr                    dgcr;                     /*<  0: 16> Descriptive Group Call Reference                   */
  U8                        _align0;                  /*< 16:  1> alignment                                          */
  U8                        _align1;                  /*< 17:  1> alignment                                          */
  U8                        _align2;                  /*< 18:  1> alignment                                          */
  U8                        v_gr_ch_desc;             /*< 19:  1> valid-flag                                         */
  T_gr_ch_desc              gr_ch_desc;               /*< 20: 44> Group Channel Description 2                        */
} T_gr_call_info;
#endif

#ifndef __T_ia_freq_par__
#define __T_ia_freq_par__
/*
 * IA Frequency Parameters
 * CCDGEN:WriteStruct_Count==114
 */
typedef struct
{
  U8                        fp_len;                   /*<  0:  1> Length Of Frequency Parameters                     */
  U8                        v_maio;                   /*<  1:  1> valid-flag                                         */
  U8                        maio;                     /*<  2:  1> Mobile Allocation Index Offset                     */
  U8                        v_mac;                    /*<  3:  1> valid-flag                                         */
  U8                        c_mac;                    /*<  4:  1> counter                                            */
  U8                        mac[11];                  /*<  5: 11> Mobile Allocation Contents                         */
} T_ia_freq_par;
#endif

#ifndef __T_ia_2nd_part__
#define __T_ia_2nd_part__
/*
 * IA Second Part Packet Assignment
 * CCDGEN:WriteStruct_Count==115
 */
typedef struct
{
  U8                        v_ext_ra;                 /*<  0:  1> valid-flag                                         */
  U8                        ext_ra;                   /*<  1:  1> Extended RA                                        */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_ia_2nd_part;
#endif


// STRUCT-FF: REL99 
// #ifndef __T_iar_rest_oct__
// #define __T_iar_rest_oct__
// 
//  IAR Rest Octets
// CCDGEN:WriteStruct_Count==116
// 
// typedef struct
// {
//   U8                        v_ext_ra;                 /*<  0:  1> valid-flag                                         */
//   U8                        ext_ra[4];                /*<  1:  4> Extended RA                                        */
//   U8                        _align0;                  /*<  5:  1> alignment                                          */
//   U8                        _align1;                  /*<  6:  1> alignment                                          */
//   U8                        _align2;                  /*<  7:  1> alignment                                          */
// } T_iar_rest_oct;
// #endif
// 
#ifndef __T_loc_area_ident__
#define __T_loc_area_ident__
/*
 * Location Area Identification
 * CCDGEN:WriteStruct_Count==117
 */
typedef struct
{
  U8                        mcc[3];                   /*<  0:  3> Mobile Country Code                                */
  U8                        c_mnc;                    /*<  3:  1> counter                                            */
  U8                        mnc[3];                   /*<  4:  3> Mobile Network Code                                */
  U8                        _align0;                  /*<  7:  1> alignment                                          */
  U16                       lac;                      /*<  8:  2> Location Area Code                                 */
  U8                        _align1;                  /*< 10:  1> alignment                                          */
  U8                        _align2;                  /*< 11:  1> alignment                                          */
} T_loc_area_ident;
#endif

#ifndef __T_lsa_id_info__
#define __T_lsa_id_info__
/*
 * LSA ID Information
 * CCDGEN:WriteStruct_Count==118
 */
typedef struct
{
  U32                       lsa_id;                   /*<  0:  4> LSA ID                                             */
  U8                        _align0;                  /*<  4:  1> alignment                                          */
  U8                        _align1;                  /*<  5:  1> alignment                                          */
  U8                        v_lsa_id_add;             /*<  6:  1> valid-flag                                         */
  U8                        c_lsa_id_add;             /*<  7:  1> counter                                            */
  U32                       lsa_id_add[MAX_LSA_ID];   /*<  8:  8> Additional LSA IDs                                 */
} T_lsa_id_info;
#endif

#ifndef __T_chan_coding__
#define __T_chan_coding__
/*
 * MAC Mode And Channel Coding
 * CCDGEN:WriteStruct_Count==119
 */
typedef struct
{
  U8                        mac_mode;                 /*<  0:  1> MAC Mode                                           */
  U8                        cod_scheme;               /*<  1:  1> Coding Scheme                                      */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_chan_coding;
#endif

#ifndef __T_mob_alloc__
#define __T_mob_alloc__
/*
 * Mobile Allocation
 * CCDGEN:WriteStruct_Count==120
 */
typedef struct
{
  U8                        c_mac;                    /*<  0:  1> counter                                            */
  U8                        mac[N_MOB_ALLOC];         /*<  1:  8> Mobile Allocation Contents                         */
  U8                        _align0;                  /*<  9:  1> alignment                                          */
  U8                        _align1;                  /*< 10:  1> alignment                                          */
  U8                        _align2;                  /*< 11:  1> alignment                                          */
} T_mob_alloc;
#endif

/*
 * Mobile Allocation
 * CCDGEN:WriteStruct_Count==121
 */
#ifndef __T_mob_alloc_before__
#define __T_mob_alloc_before__
typedef T_mob_alloc T_mob_alloc_before;
#endif
/*
 * Mobile Allocation
 * CCDGEN:WriteStruct_Count==122
 */
#ifndef __T_mob_alloc_after__
#define __T_mob_alloc_after__
typedef T_mob_alloc T_mob_alloc_after;
#endif
#ifndef __T_mob_ident__
#define __T_mob_ident__
/*
 * Mobile Identity
 * CCDGEN:WriteStruct_Count==123
 */
typedef struct
{
  U8                        ident_type;               /*<  0:  1> Type of identity                                   */
  U8                        odd_even;                 /*<  1:  1> Odd/ Even indication                               */
  U8                        v_ident_dig;              /*<  2:  1> valid-flag                                         */
  U8                        c_ident_dig;              /*<  3:  1> counter                                            */
  U8                        ident_dig[16];            /*<  4: 16> Identity digit                                     */
  U8                        _align0;                  /*< 20:  1> alignment                                          */
  U8                        _align1;                  /*< 21:  1> alignment                                          */
  U8                        _align2;                  /*< 22:  1> alignment                                          */
  U8                        v_tmsi_1;                 /*< 23:  1> valid-flag                                         */
  BUF_tmsi_1                tmsi_1;                   /*< 24: 12> TMSI                                               */
} T_mob_ident;
#endif

/*
 * Mobile Identity
 * CCDGEN:WriteStruct_Count==124
 */
#ifndef __T_mob_ident_2__
#define __T_mob_ident_2__
typedef T_mob_ident T_mob_ident_2;
#endif
#ifndef __T_mob_time_diff__
#define __T_mob_time_diff__
/*
 * Mobile Time Difference
 * CCDGEN:WriteStruct_Count==125
 */
typedef struct
{
  U32                       diff;                     /*<  0:  4> Time difference                                    */
} T_mob_time_diff;
#endif

#ifndef __T_multirate_conf__
#define __T_multirate_conf__
/*
 * Multi Rate Configuration
 * CCDGEN:WriteStruct_Count==126
 */
typedef struct
{
  U16                       tlv_len;                  /*<  0:  2> TLV length information                             */
  U8                        mr_vers;                  /*<  2:  1> Multi Rate Speech Version                          */
  U8                        nscb;                     /*<  3:  1> Noise Suppression Control Bit                      */
  U8                        icmi;                     /*<  4:  1> Initial Codec Mode Indicator                       */
  U8                        st_mode;                  /*<  5:  1> Start Mode                                         */
  U8                        set_amr;                  /*<  6:  1> Set of AMR Codec Modes                             */
  U8                        _align0;                  /*<  7:  1> alignment                                          */
  U8                        _align1;                  /*<  8:  1> alignment                                          */
  U8                        _align2;                  /*<  9:  1> alignment                                          */
  U8                        v_cod_prop;               /*< 10:  1> valid-flag                                         */
  U8                        c_cod_prop;               /*< 11:  1> counter                                            */
  T_cod_prop                cod_prop[3];              /*< 12: 12> Codec Properties                                   */
} T_multirate_conf;
#endif

#ifndef __T_multislot_alloc__
#define __T_multislot_alloc__
/*
 * Multislot Configuration
 * CCDGEN:WriteStruct_Count==127
 */
typedef struct
{
  U8                        v_dab;                    /*<  0:  1> valid-flag                                         */
  U8                        dab;                      /*<  1:  1> Downlink Assignment Bitmap                         */
  U8                        v_uab;                    /*<  2:  1> valid-flag                                         */
  U8                        uab;                      /*<  3:  1> Uplink Assignment Bitmap                           */
  U8                        c_chan_set;               /*<  4:  1> counter                                            */
  U8                        chan_set[8];              /*<  5:  8> Channel Set Bitmap                                 */
  U8                        _align0;                  /*< 13:  1> alignment                                          */
  U8                        _align1;                  /*< 14:  1> alignment                                          */
  U8                        _align2;                  /*< 15:  1> alignment                                          */
} T_multislot_alloc;
#endif

#ifndef __T_nc_mode__
#define __T_nc_mode__
/*
 * NC Mode For Target Cell
 * CCDGEN:WriteStruct_Count==128
 */
typedef struct
{
  U8                        ncm;                      /*<  0:  1> NC Mode                                            */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_nc_mode;
#endif

#ifndef __T_ncell__
#define __T_ncell__
/*
 * Ncell
 * CCDGEN:WriteStruct_Count==129
 */
typedef struct
{
  U8                        rx_lev_ncell;             /*<  0:  1> RX Level Ncell                                     */
  U8                        bcch_ncell;               /*<  1:  1> BCCH Frequency Ncell                               */
  U8                        bsic;                     /*<  2:  1> BSIC                                               */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_ncell;
#endif

#ifndef __T_meas_result__
#define __T_meas_result__
/*
 * Measurement Results
 * CCDGEN:WriteStruct_Count==130
 */
typedef struct
{
  U8                        ba_used;                  /*<  0:  1> BA-USED                                            */
  U8                        dtx_used;                 /*<  1:  1> DTX USED                                           */
  U8                        rxlev_full;               /*<  2:  1> RX Level Full Serving Cell                         */
  U8                        meas_valid;               /*<  3:  1> Measurement valid                                  */
  U8                        rxlev_sub;                /*<  4:  1> RX Level Sub Serving Cell                          */
  U8                        rxqual_full;              /*<  5:  1> RX Quality Full Serving Cell                       */
  U8                        rxqual_sub;               /*<  6:  1> RX Quality Sub Serving Cell                        */
  U8                        num_ncell;                /*<  7:  1> Number of Cells                                    */
  T_ncell                   ncell[N_CELL_MRES];       /*<  8: 24> Ncell                                              */
} T_meas_result;
#endif


// STRUCT-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// #ifndef __T_nc_meas_struct__
// #define __T_nc_meas_struct__
// 
//  NC Measurement struct
// CCDGEN:WriteStruct_Count==131
// 
// typedef struct
// {
//   U8                        nc_non_drx;               /*<  0:  0> NC Non DRX period                                  */
//   U8                        nc_rep_i;                 /*<  0:  0> NC reporting period I                              */
//   U8                        nc_rep_t;                 /*<  0:  0> NC reporting period T                              */
// } T_nc_meas_struct;
// #endif
// 

// STRUCT-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// #ifndef __T_nc_meas_para__
// #define __T_nc_meas_para__
// 
//  NC Measurement Parameters
// CCDGEN:WriteStruct_Count==132
// 
// typedef struct
// {
//   U8                        nco;                      /*<  0:  1> Network Control Order                              */
//   U8                        v_nc_meas_struct;         /*<  0:  0> valid-flag                                         */
// //   T_nc_meas_struct          nc_meas_struct;           /*<  0:  0> NC Measurement struct                              */
//   U8                        _align0;                  /*<  1:  1> alignment                                          */
//   U8                        _align1;                  /*<  2:  1> alignment                                          */
//   U8                        _align2;                  /*<  3:  1> alignment                                          */
// } T_nc_meas_para;
// #endif
// 
#ifndef __T_nln_stat__
#define __T_nln_stat__
/*
 * NLN(PCH) and Status
 * CCDGEN:WriteStruct_Count==133
 */
typedef struct
{
  U8                        nln_pch;                  /*<  0:  1> Notification List Number PCH                       */
  U8                        nln_status;               /*<  1:  1> Notification List Number Status                    */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_nln_stat;
#endif

#ifndef __T_nt_rest_oct__
#define __T_nt_rest_oct__
/*
 * NT/N Rest Octets
 * CCDGEN:WriteStruct_Count==134
 */
typedef struct
{
  U8                        v_nln_pch;                /*<  0:  1> valid-flag                                         */
  U8                        nln_pch;                  /*<  1:  1> Notification List Number PCH                       */
  U8                        v_gr_call_info;           /*<  2:  1> valid-flag                                         */
  U8                        c_gr_call_info;           /*<  3:  1> counter                                            */
  T_gr_call_info            gr_call_info[MAX_GR_C_INFO]; /*<  4:320> Group Call Information                             */
} T_nt_rest_oct;
#endif

#ifndef __T_opt_mcc__
#define __T_opt_mcc__
/*
 * Optional MCC
 * CCDGEN:WriteStruct_Count==135
 */
typedef struct
{
  U8                        mcc[3];                   /*<  0:  3> Mobile Country Code                                */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_opt_mcc;
#endif

#ifndef __T_lsa_param__
#define __T_lsa_param__
/*
 * LSA parameters
 * CCDGEN:WriteStruct_Count==136
 */
typedef struct
{
  U8                        prio_thr;                 /*<  0:  1> Priority Threshold                                 */
  U8                        lsa_offs;                 /*<  1:  1> LSA Offset                                         */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        v_opt_mcc;                /*<  3:  1> valid-flag                                         */
  T_opt_mcc                 opt_mcc;                  /*<  4:  4> Optional MCC                                       */
  U8                        mnc[3];                   /*<  8:  3> Mobile Network Code                                */
  U8                        _align1;                  /*< 11:  1> alignment                                          */
} T_lsa_param;
#endif

#ifndef __T_lsa_par_id__
#define __T_lsa_par_id__
/*
 * LSA Parameters and LSA ID
 * CCDGEN:WriteStruct_Count==137
 */
typedef struct
{
  T_lsa_param               lsa_param;                /*<  0: 12> LSA parameters                                     */
  T_lsa_id_info             lsa_id_info;              /*< 12: 16> LSA ID Information                                 */
} T_lsa_par_id;
#endif

#ifndef __T_opt_sel_par__
#define __T_opt_sel_par__
/*
 * Optional Selection Parameters
 * CCDGEN:WriteStruct_Count==138
 */
typedef struct
{
  U8                        cell_bar_qual;            /*<  0:  1> Cell Bar Qualify                                   */
  U8                        cell_resel_offs;          /*<  1:  1> Cell Reselect Offset                               */
  U8                        temp_offs;                /*<  2:  1> Temporary Offset                                   */
  U8                        penalty_time;             /*<  3:  1> Penalty Time                                       */
} T_opt_sel_par;
#endif

#ifndef __T_p0_pwr_ctrl_mode__
#define __T_p0_pwr_ctrl_mode__
/*
 * P0 and BTS Power Control Mode
 * CCDGEN:WriteStruct_Count==139
 */
typedef struct
{
  U8                        p0;                       /*<  0:  1> P0                                                 */
  U8                        pwr_ctrl_mode;            /*<  1:  1> BTS Power Control Mode                             */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_p0_pwr_ctrl_mode;
#endif

#ifndef __T_p0_prmode__
#define __T_p0_prmode__
/*
 * P0 PR Mode
 * CCDGEN:WriteStruct_Count==140
 */
typedef struct
{
  U8                        p0;                       /*<  0:  1> P0                                                 */
  U8                        pr_mode;                  /*<  1:  1> PR Mode                                            */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_p0_prmode;
#endif

#ifndef __T_p0_bts_prmode__
#define __T_p0_bts_prmode__
/*
 * P0 BTS Power Control PR Mode
 * CCDGEN:WriteStruct_Count==141
 */
typedef struct
{
  U8                        p0;                       /*<  0:  1> P0                                                 */
  U8                        pwr_ctrl_mode;            /*<  1:  1> BTS Power Control Mode                             */
  U8                        pr_mode;                  /*<  2:  1> PR Mode                                            */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_p0_bts_prmode;
#endif

#ifndef __T_pck_page1__
#define __T_pck_page1__
/*
 * Packet Page Indication 1
 * CCDGEN:WriteStruct_Count==142
 */
/* typedef void T_pck_page1;*/
#endif
/*
 * Packet Page Indication 2
 * CCDGEN:WriteStruct_Count==143
 */
#ifndef __T_pck_page2__
#define __T_pck_page2__
/* typedef void T_pck_page2;*/
#endif
/*
 * Packet Page Indication 3
 * CCDGEN:WriteStruct_Count==144
 */
#ifndef __T_pck_page3__
#define __T_pck_page3__
/* typedef void T_pck_page3;*/
#endif
#ifndef __T_pck_chan_desc__
#define __T_pck_chan_desc__
/*
 * Packet Channel Description
 * CCDGEN:WriteStruct_Count==145
 */
typedef struct
{
  U8                        pck_chan_type;            /*<  0:  1> Packet Channel type                                */
  U8                        tn;                       /*<  1:  1> Time Slot                                          */
  U8                        tsc;                      /*<  2:  1> Training Sequence Code                             */
  U8                        hop;                      /*<  3:  1> Hopping                                            */
  U8                        v_indir;                  /*<  4:  1> valid-flag                                         */
  U8                        indir;                    /*<  5:  1> Indirect                                           */
  U8                        _align0;                  /*<  6:  1> alignment                                          */
  U8                        v_arfcn;                  /*<  7:  1> valid-flag                                         */
  U16                       arfcn;                    /*<  8:  2> Absolute RF Channel Number                         */
  U8                        v_maio;                   /*< 10:  1> valid-flag                                         */
  U8                        maio;                     /*< 11:  1> Mobile Allocation Index Offset                     */
  U8                        v_ma_num;                 /*< 12:  1> valid-flag                                         */
  U8                        ma_num;                   /*< 13:  1> MA Number Indication                               */
  U8                        v_flag;                   /*< 14:  1> valid-flag                                         */
  U8                        flag;                     /*< 15:  1> Flag                                               */
  U8                        v_ch_mark1;               /*< 16:  1> valid-flag                                         */
  U8                        ch_mark1;                 /*< 17:  1> Change Mark 1                                      */
  U8                        v_hsn;                    /*< 18:  1> valid-flag                                         */
  U8                        hsn;                      /*< 19:  1> Hopping Sequence Number                            */
} T_pck_chan_desc;
#endif


// STRUCT-FF: REL99 
// #ifndef __T_pda_egprs_par__
// #define __T_pda_egprs_par__
// 
//  PDA EGPRS Parameters
// CCDGEN:WriteStruct_Count==146
// 
// typedef struct
// {
//   U8                        e_window;                 /*<  0:  0> EGPRS Window Size                                  */
//   U8                        lqm_mode;                 /*<  0:  0> Link Quality Measurement Mode                      */
//   U8                        v_bep_period;             /*<  0:  1> valid-flag                                         */
//   U8                        bep_period;               /*<  0:  0> BEP Period 2                                       */
// } T_pda_egprs_par;
// #endif
// 
#ifndef __T_page_mode__
#define __T_page_mode__
/*
 * Page Mode
 * CCDGEN:WriteStruct_Count==147
 */
typedef struct
{
  U8                        pm;                       /*<  0:  1> Page Mode                                          */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_page_mode;
#endif

#ifndef __T_pbcch_des__
#define __T_pbcch_des__
/*
 * PBCCH Description
 * CCDGEN:WriteStruct_Count==148
 */
typedef struct
{
  U8                        pb;                       /*<  0:  1> Pb                                                 */
  U8                        tsc;                      /*<  1:  1> Training Sequence Code                             */
  U8                        tn;                       /*<  2:  1> Time Slot                                          */
  U8                        flag;                     /*<  3:  1> Flag                                               */
  U8                        v_flag2;                  /*<  4:  1> valid-flag                                         */
  U8                        flag2;                    /*<  5:  1> Flag2                                              */
  U8                        _align0;                  /*<  6:  1> alignment                                          */
  U8                        v_arfcn;                  /*<  7:  1> valid-flag                                         */
  U16                       arfcn;                    /*<  8:  2> Absolute RF Channel Number                         */
  U8                        v_maio;                   /*< 10:  1> valid-flag                                         */
  U8                        maio;                     /*< 11:  1> Mobile Allocation Index Offset                     */
} T_pbcch_des;
#endif

#ifndef __T_pch_nch_info__
#define __T_pch_nch_info__
/*
 * PCH and NCH Info
 * CCDGEN:WriteStruct_Count==149
 */
typedef struct
{
  U8                        pch_restruct;             /*<  0:  1> Paging Channel Restructuring                       */
  U8                        nln_sacch;                /*<  1:  1> Notification List Number SACCH                     */
  U8                        call_prio;                /*<  2:  1> Call Priority                                      */
  U8                        nln_status;               /*<  3:  1> Notification List Number Status                    */
} T_pch_nch_info;
#endif

#ifndef __T_pos__
#define __T_pos__
/*
 * Position
 * CCDGEN:WriteStruct_Count==150
 */
typedef struct
{
  U8                        mod;                      /*<  0:  1> Modulus                                            */
  U8                        v_rel_pos;                /*<  1:  1> valid-flag                                         */
  U16                       rel_pos;                  /*<  2:  2> Relative Position                                  */
  U8                        bcch_type;                /*<  4:  1> BCCH Type                                          */
  U8                        _align0;                  /*<  5:  1> alignment                                          */
  U8                        _align1;                  /*<  6:  1> alignment                                          */
  U8                        _align2;                  /*<  7:  1> alignment                                          */
} T_pos;
#endif

/*
 * Optional Position
 * CCDGEN:WriteStruct_Count==151
 */
#ifndef __T_poso__
#define __T_poso__
typedef T_pos T_poso;
#endif
#ifndef __T_poss__
#define __T_poss__
/*
 * Positions
 * CCDGEN:WriteStruct_Count==152
 */
typedef struct
{
  T_pos                     pos;                      /*<  0:  8> Position                                           */
  U8                        _align0;                  /*<  8:  1> alignment                                          */
  U8                        _align1;                  /*<  9:  1> alignment                                          */
  U8                        v_poso;                   /*< 10:  1> valid-flag                                         */
  U8                        c_poso;                   /*< 11:  1> counter                                            */
  T_poso                    poso[MAX_POS];            /*< 12: 40> Optional Position                                  */
} T_poss;
#endif

#ifndef __T_itp__
#define __T_itp__
/*
 * Info Type and Positions
 * CCDGEN:WriteStruct_Count==153
 */
typedef struct
{
  U8                        flag;                     /*<  0:  1> Flag                                               */
  U8                        v_it4;                    /*<  1:  1> valid-flag                                         */
  U8                        it4;                      /*<  2:  1> Info Type 4                                        */
  U8                        v_flag1;                  /*<  3:  1> valid-flag                                         */
  U8                        flag1;                    /*<  4:  1> Flag1                                              */
  U8                        v_it5;                    /*<  5:  1> valid-flag                                         */
  U8                        it5;                      /*<  6:  1> Info Type 5                                        */
  U8                        v_it6;                    /*<  7:  1> valid-flag                                         */
  U8                        it6;                      /*<  8:  1> Info Type 6                                        */
  U8                        _align0;                  /*<  9:  1> alignment                                          */
  U8                        _align1;                  /*< 10:  1> alignment                                          */
  U8                        _align2;                  /*< 11:  1> alignment                                          */
  T_poss                    poss;                     /*< 12: 52> Positions                                          */
} T_itp;
#endif

/*
 * Info Type and Positions Optional
 * CCDGEN:WriteStruct_Count==154
 */
#ifndef __T_itpo__
#define __T_itpo__
typedef T_itp T_itpo;
#endif
#ifndef __T_pow_cmd__
#define __T_pow_cmd__
/*
 * Power Command
 * CCDGEN:WriteStruct_Count==155
 */
typedef struct
{
  U8                        pow;                      /*<  0:  1> Power Level                                        */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_pow_cmd;
#endif

#ifndef __T_pow_cmd_access__
#define __T_pow_cmd_access__
/*
 * Power Command & access type
 * CCDGEN:WriteStruct_Count==156
 */
typedef struct
{
  U8                        atc;                      /*<  0:  1> Access Type Control                                */
  U8                        pow;                      /*<  1:  1> Power Level                                        */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_pow_cmd_access;
#endif

#ifndef __T_rach_ctrl__
#define __T_rach_ctrl__
/*
 * RACH Control Parameters
 * CCDGEN:WriteStruct_Count==157
 */
typedef struct
{
  U8                        max_retrans;              /*<  0:  1> Maximum Number of Retransmissions                  */
  U8                        tx_integer;               /*<  1:  1> Tx-integer                                         */
  U8                        cell_bar_access;          /*<  2:  1> Cell Barred for Access                             */
  U8                        re;                       /*<  3:  1> Call Reestablishment allowed                       */
  U16                       ac;                       /*<  4:  2> Access Control Class                               */
  U8                        _align0;                  /*<  6:  1> alignment                                          */
  U8                        _align1;                  /*<  7:  1> alignment                                          */
} T_rach_ctrl;
#endif

#ifndef __T_req_ref__
#define __T_req_ref__
/*
 * Request Reference
 * CCDGEN:WriteStruct_Count==158
 */
typedef struct
{
  U8                        ra;                       /*<  0:  1> Random Access Information                          */
  U8                        t1;                       /*<  1:  1> T1'                                                */
  U8                        t3;                       /*<  2:  1> T3                                                 */
  U8                        t2;                       /*<  3:  1> T2                                                 */
} T_req_ref;
#endif

/*
 * Request Reference
 * CCDGEN:WriteStruct_Count==159
 */
#ifndef __T_req_ref_2__
#define __T_req_ref_2__
typedef T_req_ref T_req_ref_2;
#endif
/*
 * Request Reference
 * CCDGEN:WriteStruct_Count==160
 */
#ifndef __T_req_ref_3__
#define __T_req_ref_3__
typedef T_req_ref T_req_ref_3;
#endif
/*
 * Request Reference
 * CCDGEN:WriteStruct_Count==161
 */
#ifndef __T_req_ref_4__
#define __T_req_ref_4__
typedef T_req_ref T_req_ref_4;
#endif
#ifndef __T_rout_area_id__
#define __T_rout_area_id__
/*
 * Routing Area Identification
 * CCDGEN:WriteStruct_Count==162
 */
typedef struct
{
  U8                        mcc[3];                   /*<  0:  3> Mobile Country Code                                */
  U8                        c_mnc;                    /*<  3:  1> counter                                            */
  U8                        mnc[3];                   /*<  4:  3> Mobile Network Code                                */
  U8                        _align0;                  /*<  7:  1> alignment                                          */
  U16                       lac;                      /*<  8:  2> Location Area Code                                 */
  U8                        rac;                      /*< 10:  1> Routing Area Code                                  */
  U8                        _align1;                  /*< 11:  1> alignment                                          */
} T_rout_area_id;
#endif

#ifndef __T_sched__
#define __T_sched__
/*
 * Scheduling Info
 * CCDGEN:WriteStruct_Count==163
 */
typedef struct
{
  T_itp                     itp;                      /*<  0: 64> Info Type and Positions                            */
  U8                        _align0;                  /*< 64:  1> alignment                                          */
  U8                        _align1;                  /*< 65:  1> alignment                                          */
  U8                        v_itpo;                   /*< 66:  1> valid-flag                                         */
  U8                        c_itpo;                   /*< 67:  1> counter                                            */
  T_itpo                    itpo[MAX_ITP];            /*< 68:320> Info Type and Positions Optional                   */
} T_sched;
#endif

#ifndef __T_si1_rest_oct__
#define __T_si1_rest_oct__
/*
 * SI 1 Rest Octets
 * CCDGEN:WriteStruct_Count==164
 */
typedef struct
{
  U8                        v_nch_position;           /*<  0:  1> valid-flag                                         */
  U8                        nch_position;             /*<  1:  1> NCH Position                                       */
// ELEM-FF: TI_PS_FF_QUAD_BAND_SUPPORT 
//   U8                        band_indicator;           /*<  0:  0> BAND_INDICATOR                                     */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_si1_rest_oct;
#endif


// STRUCT-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// #ifndef __T_meas_para__
// #define __T_meas_para__
// 
//  Measurement_parameter description
// CCDGEN:WriteStruct_Count==165
// 
// typedef struct
// {
//   U8                        report_type;              /*<  0:  0> Report type                                        */
//   U8                        serv_band_rep;            /*<  0:  0> Serving band reporting                             */
// } T_meas_para;
// #endif
// 

// STRUCT-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// #ifndef __T_gprs_meas_para__
// #define __T_gprs_meas_para__
// 
//  GPRS MEASUREMENT Parameters Description
// CCDGEN:WriteStruct_Count==166
// 
// typedef struct
// {
//   U8                        report_type;              /*<  0:  0> Report type                                        */
//   U8                        reporting_rate;           /*<  0:  0> Reporting rate                                     */
//   U8                        inv_bsic_rep;             /*<  0:  0> Invalid BSIC reporting                             */
//   U8                        v_mr;                     /*<  0:  1> valid-flag                                         */
//   U8                        mr;                       /*<  0:  0> Multiband Reporting                                */
//   U8                        v_serv_band_rep;          /*<  0:  1> valid-flag                                         */
//   U8                        serv_band_rep;            /*<  0:  0> Serving band reporting                             */
//   U8                        scale_ord;                /*<  0:  0> Scale ord                                          */
//   U8                        v_report_900;             /*<  0:  0> valid-flag                                         */
// //   T_report_900              report_900;               /*<  0:  0> Reporting 900 (type defined in "m_rr_com.h")       */
//   U8                        v_report_1800;            /*<  0:  0> valid-flag                                         */
// //   T_report_1800             report_1800;              /*<  0:  0> Reporting 1800 (type defined in "m_rr_com.h")      */
//   U8                        v_report_400;             /*<  0:  0> valid-flag                                         */
// //   T_report_400              report_400;               /*<  0:  0> Reporting 400 (type defined in "m_rr_com.h")       */
//   U8                        v_report_1900;            /*<  0:  0> valid-flag                                         */
// //   T_report_1900             report_1900;              /*<  0:  0> Reporting 1900 (type defined in "m_rr_com.h")      */
//   U8                        v_report_850;             /*<  0:  0> valid-flag                                         */
// //   T_report_850              report_850;               /*<  0:  0> Reporting 850 (type defined in "m_rr_com.h")       */
// } T_gprs_meas_para;
// #endif
// 
#ifndef __T_si4_rest_octets_s__
#define __T_si4_rest_octets_s__
/*
 * SI4 Rest Octets_S
 * CCDGEN:WriteStruct_Count==167
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_lsa_param;              /*<  3:  1> valid-flag                                         */
  T_lsa_param               lsa_param;                /*<  4: 12> LSA parameters                                     */
  U8                        _align3;                  /*< 16:  1> alignment                                          */
  U8                        v_cell_ident;             /*< 17:  1> valid-flag                                         */
  U16                       cell_ident;               /*< 18:  2> Cell identity                                      */
  U8                        _align4;                  /*< 20:  1> alignment                                          */
  U8                        _align5;                  /*< 21:  1> alignment                                          */
  U8                        _align6;                  /*< 22:  1> alignment                                          */
  U8                        v_lsa_id_info;            /*< 23:  1> valid-flag                                         */
  T_lsa_id_info             lsa_id_info;              /*< 24: 16> LSA ID Information                                 */
} T_si4_rest_octets_s;
#endif

#ifndef __T_si4_rest_octets_bs__
#define __T_si4_rest_octets_bs__
/*
 * Structured Element
 * CCDGEN:WriteStruct_Count==168
 */
typedef struct
{
  U8                        flag;                     /*<  0:  1> Flag                                               */
  U8                        v_break_ind;              /*<  1:  1> valid-flag                                         */
  U8                        break_ind;                /*<  2:  1> Break Indicator                                    */
  U8                        v_si4_rest_octets_s;      /*<  3:  1> valid-flag                                         */
  T_si4_rest_octets_s       si4_rest_octets_s;        /*<  4: 40> SI4 Rest Octets_S                                  */
} T_si4_rest_octets_bs;
#endif

#ifndef __T_si4_rest_oct__
#define __T_si4_rest_oct__
/*
 * SI 4 Rest Octets
 * CCDGEN:WriteStruct_Count==169
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_opt_sel_par;            /*<  3:  1> valid-flag                                         */
  T_opt_sel_par             opt_sel_par;              /*<  4:  4> Optional Selection Parameters                      */
  U8                        v_pow_offs;               /*<  8:  1> valid-flag                                         */
  U8                        pow_offs;                 /*<  9:  1> Power Offset                                       */
  U8                        _align3;                  /*< 10:  1> alignment                                          */
  U8                        v_gprs_indic;             /*< 11:  1> valid-flag                                         */
  T_gprs_indic              gprs_indic;               /*< 12:  4> GPRS Indicator                                     */
  T_si4_rest_octets_bs      si4_rest_octets_bs;       /*< 16: 44> Structured Element                                 */
} T_si4_rest_oct;
#endif

#ifndef __T_si7_rest_oct__
#define __T_si7_rest_oct__
/*
 * SI 7 Rest Octets
 * CCDGEN:WriteStruct_Count==170
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_opt_sel_par;            /*<  3:  1> valid-flag                                         */
  T_opt_sel_par             opt_sel_par;              /*<  4:  4> Optional Selection Parameters                      */
  U8                        v_pow_offs;               /*<  8:  1> valid-flag                                         */
  U8                        pow_offs;                 /*<  9:  1> Power Offset                                       */
  U8                        _align3;                  /*< 10:  1> alignment                                          */
  U8                        v_gprs_indic;             /*< 11:  1> valid-flag                                         */
  T_gprs_indic              gprs_indic;               /*< 12:  4> GPRS Indicator                                     */
  T_si4_rest_octets_s       si4_rest_octets_s;        /*< 16: 40> SI4 Rest Octets_S                                  */
} T_si7_rest_oct;
#endif

/*
 * SI 8 Rest Octets
 * CCDGEN:WriteStruct_Count==171
 */
#ifndef __T_si8_rest_oct__
#define __T_si8_rest_oct__
typedef T_si7_rest_oct T_si8_rest_oct;
#endif
#ifndef __T_si9_rest_oct__
#define __T_si9_rest_oct__
/*
 * SI 9 Rest Octets
 * CCDGEN:WriteStruct_Count==172
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_sched;                  /*<  3:  1> valid-flag                                         */
  T_sched                   sched;                    /*<  4:388> Scheduling Info                                    */
} T_si9_rest_oct;
#endif

#ifndef __T_si13_info__
#define __T_si13_info__
/*
 * SI 13 Info
 * CCDGEN:WriteStruct_Count==173
 */
typedef struct
{
  U8                        bcch_cm;                  /*<  0:  1> BCCH Change Mark                                   */
  U8                        si_cf;                    /*<  1:  1> SI Change Field                                    */
  U8                        flag;                     /*<  2:  1> Flag                                               */
  U8                        v_si13_cm;                /*<  3:  1> valid-flag                                         */
  U8                        si13_cm;                  /*<  4:  1> SI 13 Change Mark                                  */
  U8                        _align0;                  /*<  5:  1> alignment                                          */
  U8                        _align1;                  /*<  6:  1> alignment                                          */
  U8                        v_gprs_ma;                /*<  7:  1> valid-flag                                         */
  T_gprs_ma                 gprs_ma;                  /*<  8: 84> GPRS Mobile Allocation                             */
  U8                        flag1;                    /*< 92:  1> Flag1                                              */
  U8                        v_rac;                    /*< 93:  1> valid-flag                                         */
  U8                        rac;                      /*< 94:  1> Routing Area Code                                  */
  U8                        v_spgc;                   /*< 95:  1> valid-flag                                         */
  U8                        spgc;                     /*< 96:  1> Split PG Cycle Support                             */
  U8                        v_prio_acc_thr;           /*< 97:  1> valid-flag                                         */
  U8                        prio_acc_thr;             /*< 98:  1> Priority Access Threshold                          */
  U8                        v_nco;                    /*< 99:  1> valid-flag                                         */
  U8                        nco;                      /*<100:  1> Network Control Order                              */
  U8                        _align2;                  /*<101:  1> alignment                                          */
  U8                        _align3;                  /*<102:  1> alignment                                          */
  U8                        v_gprs_cell_opt;          /*<103:  1> valid-flag                                         */
  T_gprs_cell_opt           gprs_cell_opt;            /*<104: 84> GPRS Cell Options (type defined in "m_rr_com.h")   */
  U8                        v_alpha;                  /*<188:  1> valid-flag                                         */
  U8                        alpha;                    /*<189:  1> Alpha                                              */
  U8                        v_t_avg_w;                /*<190:  1> valid-flag                                         */
  U8                        t_avg_w;                  /*<191:  1> T_AVG_W Value                                      */
  U8                        v_t_avg_t;                /*<192:  1> valid-flag                                         */
  U8                        t_avg_t;                  /*<193:  1> T_AVG_T Value                                      */
  U8                        v_pc_meas_chan;           /*<194:  1> valid-flag                                         */
  U8                        pc_meas_chan;             /*<195:  1> PC_MEAS_CHAN                                       */
  U8                        v_n_avg_i;                /*<196:  1> valid-flag                                         */
  U8                        n_avg_i;                  /*<197:  1> N_AVG_I Value                                      */
  U8                        v_psi1_period;            /*<198:  1> valid-flag                                         */
  U8                        psi1_period;              /*<199:  1> PSI1 Repeat Period                                 */
  U8                        _align4;                  /*<200:  1> alignment                                          */
  U8                        _align5;                  /*<201:  1> alignment                                          */
  U8                        _align6;                  /*<202:  1> alignment                                          */
  U8                        v_pbcch_des;              /*<203:  1> valid-flag                                         */
  T_pbcch_des               pbcch_des;                /*<204: 12> PBCCH Description                                  */
// ELEM-FF: REL99 
//   U8                        v_sgsnr;                  /*<216:  1> valid-flag                                         */
//   U8                        sgsnr;                    /*<  0:  0> SGSNR Bit                                          */
} T_si13_info;
#endif

#ifndef __T_si13_rest_oct__
#define __T_si13_rest_oct__
/*
 * SI 13 Rest Octets
 * CCDGEN:WriteStruct_Count==174
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_si13_info;              /*<  3:  1> valid-flag                                         */
  T_si13_info               si13_info;                /*<  4:216> SI 13 Info                                         */
} T_si13_rest_oct;
#endif

#ifndef __T_si16_rest_oct__
#define __T_si16_rest_oct__
/*
 * SI 16 Rest Octets
 * CCDGEN:WriteStruct_Count==175
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_lsa_par_id;             /*<  3:  1> valid-flag                                         */
  T_lsa_par_id              lsa_par_id;               /*<  4: 28> LSA Parameters and LSA ID                          */
} T_si16_rest_oct;
#endif

/*
 * SI 17 Rest Octets
 * CCDGEN:WriteStruct_Count==176
 */
#ifndef __T_si17_rest_oct__
#define __T_si17_rest_oct__
typedef T_si16_rest_oct T_si17_rest_oct;
#endif
#ifndef __T_single_alloc__
#define __T_single_alloc__
/*
 * Single Block Allocation
 * CCDGEN:WriteStruct_Count==177
 */
typedef struct
{
  U8                        tn;                       /*<  0:  1> Time Slot                                          */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        v_alpha_gamma;            /*<  3:  1> valid-flag                                         */
  T_alpha_gamma             alpha_gamma;              /*<  4:  4> Alpha Gamma                                        */
  U8                        _align2;                  /*<  8:  1> alignment                                          */
  U8                        _align3;                  /*<  9:  1> alignment                                          */
  U8                        _align4;                  /*< 10:  1> alignment                                          */
  U8                        v_p0_pwr_ctrl_mode;       /*< 11:  1> valid-flag                                         */
  T_p0_pwr_ctrl_mode        p0_pwr_ctrl_mode;         /*< 12:  4> P0 and BTS Power Control Mode                      */
} T_single_alloc;
#endif

#ifndef __T_start_time__
#define __T_start_time__
/*
 * Starting Time
 * CCDGEN:WriteStruct_Count==178
 */
typedef struct
{
  U8                        t1;                       /*<  0:  1> T1'                                                */
  U8                        t3;                       /*<  1:  1> T3                                                 */
  U8                        t2;                       /*<  2:  1> T2                                                 */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_start_time;
#endif

/*
 * TBF Starting Time
 * CCDGEN:WriteStruct_Count==179
 */
#ifndef __T_tbf_start_time__
#define __T_tbf_start_time__
typedef T_start_time T_tbf_start_time;
#endif
/*
 * Measurement Starting Time
 * CCDGEN:WriteStruct_Count==180
 */
#ifndef __T_meas_start__
#define __T_meas_start__
typedef T_start_time T_meas_start;
#endif
#ifndef __T_pck_meas_par__
#define __T_pck_meas_par__
/*
 * Packet Measurement Parameters
 * CCDGEN:WriteStruct_Count==181
 */
typedef struct
{
  T_meas_start              meas_start;               /*<  0:  4> Measurement Starting Time                          */
  U8                        meas_int;                 /*<  4:  1> Measurement Interval                               */
  U8                        meas_bmp;                 /*<  5:  1> Measurement Bitmap                                 */
  U8                        _align0;                  /*<  6:  1> alignment                                          */
  U8                        _align1;                  /*<  7:  1> alignment                                          */
} T_pck_meas_par;
#endif


// STRUCT-FF: REL99 
// #ifndef __T_mb_alloc__
// #define __T_mb_alloc__
// 
//  Multi Block Allocation
// CCDGEN:WriteStruct_Count==182
// 
// typedef struct
// {
//   U8                        v_alpha;                  /*<  0:  1> valid-flag                                         */
//   U8                        alpha;                    /*<  1:  1> Alpha                                              */
//   U8                        gamma;                    /*<  2:  1> Gamma                                              */
//   U8                        _align0;                  /*<  3:  1> alignment                                          */
//   T_tbf_start_time          tbf_start_time;           /*<  4:  4> TBF Starting Time                                  */
//   U8                        nr_rb;                    /*<  0:  0> Number of Radio Blocks                             */
//   U8                        _align1;                  /*<  8:  1> alignment                                          */
//   U8                        _align2;                  /*<  9:  1> alignment                                          */
//   U8                        _align3;                  /*< 10:  1> alignment                                          */
//   U8                        v_p0_bts_prmode;          /*< 11:  1> valid-flag                                         */
// //   T_p0_bts_prmode           p0_bts_prmode;            /*< 12:  4> P0 BTS Power Control PR Mode                       */
// } T_mb_alloc;
// #endif
// 
#ifndef __T_si2ter_ind__
#define __T_si2ter_ind__
/*
 * system information 2ter indicator
 * CCDGEN:WriteStruct_Count==183
 */
/* typedef void T_si2ter_ind;*/
#endif
#ifndef __T_synch_ind__
#define __T_synch_ind__
/*
 * Synchronization Indication
 * CCDGEN:WriteStruct_Count==184
 */
typedef struct
{
  U8                        nci;                      /*<  0:  1> Normal cell indication                             */
  U8                        rot;                      /*<  1:  1> Report Observed Time Difference                    */
  U8                        si;                       /*<  2:  1> Synchronisation indication                         */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
} T_synch_ind;
#endif


// STRUCT-FF: REL99 
// #ifndef __T_t_ext_ra__
// #define __T_t_ext_ra__
// 
//  Tagged Extended RA
// CCDGEN:WriteStruct_Count==185
// 
// typedef struct
// {
//   U8                        v_ext_ra;                 /*<  0:  1> valid-flag                                         */
//   U8                        ext_ra;                   /*<  1:  1> Extended RA                                        */
//   U8                        _align0;                  /*<  2:  1> alignment                                          */
//   U8                        _align1;                  /*<  3:  1> alignment                                          */
// } T_t_ext_ra;
// #endif
// 
#ifndef __T_tagged_gamma__
#define __T_tagged_gamma__
/*
 * Tagged Gamma
 * CCDGEN:WriteStruct_Count==186
 */
typedef struct
{
  U8                        v_gamma;                  /*<  0:  1> valid-flag                                         */
  U8                        gamma;                    /*<  1:  1> Gamma                                              */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_tagged_gamma;
#endif

#ifndef __T_pwr_ctrl__
#define __T_pwr_ctrl__
/*
 * Power Control Parameters
 * CCDGEN:WriteStruct_Count==187
 */
typedef struct
{
  U8                        alpha;                    /*<  0:  1> Alpha                                              */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_tagged_gamma            tagged_gamma[8];          /*<  4: 32> Tagged Gamma                                       */
} T_pwr_ctrl;
#endif

#ifndef __T_tagged_call_prio__
#define __T_tagged_call_prio__
/*
 * Tagged Priority
 * CCDGEN:WriteStruct_Count==188
 */
typedef struct
{
  U8                        v_call_prio;              /*<  0:  1> valid-flag                                         */
  U8                        call_prio;                /*<  1:  1> Call Priority                                      */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_tagged_call_prio;
#endif

#ifndef __T_p3_rest_oct__
#define __T_p3_rest_oct__
/*
 * P3 Rest Octets
 * CCDGEN:WriteStruct_Count==189
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_chan_needed3_4;         /*<  3:  1> valid-flag                                         */
  T_chan_needed3_4          chan_needed3_4;           /*<  4:  4> Channel Needed for Mobile ID 3 and 4               */
  U8                        _align3;                  /*<  8:  1> alignment                                          */
  U8                        _align4;                  /*<  9:  1> alignment                                          */
  U8                        _align5;                  /*< 10:  1> alignment                                          */
  U8                        v_nln_stat;               /*< 11:  1> valid-flag                                         */
  T_nln_stat                nln_stat;                 /*< 12:  4> NLN(PCH) and Status                                */
  T_tagged_call_prio        tagged_call_prio[4];      /*< 16: 16> Tagged Priority                                    */
} T_p3_rest_oct;
#endif

#ifndef __T_p2_rest_oct__
#define __T_p2_rest_oct__
/*
 * P2 Rest Octets
 * CCDGEN:WriteStruct_Count==190
 */
typedef struct
{
  U8                        v_cn3;                    /*<  0:  1> valid-flag                                         */
  U8                        cn3;                      /*<  1:  1> Channel Needed for Mobile ID 3                     */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        v_nln_stat;               /*<  3:  1> valid-flag                                         */
  T_nln_stat                nln_stat;                 /*<  4:  4> NLN(PCH) and Status                                */
  T_tagged_call_prio        tagged_call_prio[3];      /*<  8: 12> Tagged Priority                                    */
  U8                        _align1;                  /*< 20:  1> alignment                                          */
  U8                        _align2;                  /*< 21:  1> alignment                                          */
  U8                        _align3;                  /*< 22:  1> alignment                                          */
  U8                        v_pck_page3;              /*< 23:  1> valid-flag                                         */
} T_p2_rest_oct;
#endif

#ifndef __T_p1_rest_oct__
#define __T_p1_rest_oct__
/*
 * P1 Rest Octets
 * CCDGEN:WriteStruct_Count==191
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_nln_stat;               /*<  3:  1> valid-flag                                         */
  T_nln_stat                nln_stat;                 /*<  4:  4> NLN(PCH) and Status                                */
  T_tagged_call_prio        tagged_call_prio[2];      /*<  8:  8> Tagged Priority                                    */
  U8                        _align3;                  /*< 16:  1> alignment                                          */
  U8                        _align4;                  /*< 17:  1> alignment                                          */
  U8                        _align5;                  /*< 18:  1> alignment                                          */
  U8                        v_gr_call_info;           /*< 19:  1> valid-flag                                         */
  T_gr_call_info            gr_call_info;             /*< 20: 64> Group Call Information                             */
  U8                        _align6;                  /*< 84:  1> alignment                                          */
  U8                        _align7;                  /*< 85:  1> alignment                                          */
  U8                        _align8;                  /*< 86:  1> alignment                                          */
  U8                        v_pck_page1;              /*< 87:  1> valid-flag                                         */
  U8                        _align9;                  /*< 88:  1> alignment                                          */
  U8                        _align10;                 /*< 89:  1> alignment                                          */
  U8                        _align11;                 /*< 90:  1> alignment                                          */
  U8                        v_pck_page2;              /*< 91:  1> valid-flag                                         */
} T_p1_rest_oct;
#endif

#ifndef __T_tagged_usf_tn__
#define __T_tagged_usf_tn__
/*
 * Tagged USF For Timeslot
 * CCDGEN:WriteStruct_Count==192
 */
typedef struct
{
  U8                        v_usf;                    /*<  0:  1> valid-flag                                         */
  U8                        usf;                      /*<  1:  1> Uplink State Flag                                  */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_tagged_usf_tn;
#endif

#ifndef __T_time_advance__
#define __T_time_advance__
/*
 * Timing Advance
 * CCDGEN:WriteStruct_Count==193
 */
typedef struct
{
  U8                        ta;                       /*<  0:  1> Timing advance value                               */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_time_advance;
#endif

/*
 * Timing Advance
 * CCDGEN:WriteStruct_Count==194
 */
#ifndef __T_time_advance_2__
#define __T_time_advance_2__
typedef T_time_advance T_time_advance_2;
#endif
#ifndef __T_ta_idx_nm__
#define __T_ta_idx_nm__
/*
 * Timing Advance Index and Number
 * CCDGEN:WriteStruct_Count==195
 */
typedef struct
{
  U8                        ta_idx;                   /*<  0:  1> Timing Advance Index                               */
  U8                        ta_nm;                    /*<  1:  1> Timing Advance Timeslot Number                     */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_ta_idx_nm;
#endif

#ifndef __T_pck_ta__
#define __T_pck_ta__
/*
 * Packet Timing Advance
 * CCDGEN:WriteStruct_Count==196
 */
typedef struct
{
  U8                        v_ta;                     /*<  0:  1> valid-flag                                         */
  U8                        ta;                       /*<  1:  1> Timing advance value                               */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        v_ta_idx_nm;              /*<  3:  1> valid-flag                                         */
  T_ta_idx_nm               ta_idx_nm;                /*<  4:  4> Timing Advance Index and Number                    */
} T_pck_ta;
#endif

#ifndef __T_pck_dl_ass__
#define __T_pck_dl_ass__
/*
 * RR Packet Downlink Assignment
 * CCDGEN:WriteStruct_Count==197
 */
typedef struct
{
  U8                        mac_mode;                 /*<  0:  1> MAC Mode                                           */
  U8                        rlc_mode;                 /*<  1:  1> RLC Mode                                           */
  U8                        ts_all;                   /*<  2:  1> Timeslot Allocation                                */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
  T_pck_ta                  pck_ta;                   /*<  4:  8> Packet Timing Advance                              */
  U8                        _align1;                  /*< 12:  1> alignment                                          */
  U8                        _align2;                  /*< 13:  1> alignment                                          */
  U8                        _align3;                  /*< 14:  1> alignment                                          */
  U8                        v_pwr_ctrl;               /*< 15:  1> valid-flag                                         */
  T_pwr_ctrl                pwr_ctrl;                 /*< 16: 36> Power Control Parameters                           */
  U8                        v_tfi;                    /*< 52:  1> valid-flag                                         */
  U8                        tfi;                      /*< 53:  1> TFI                                                */
  U8                        _align4;                  /*< 54:  1> alignment                                          */
  U8                        v_pck_meas_par;           /*< 55:  1> valid-flag                                         */
  T_pck_meas_par            pck_meas_par;             /*< 56:  8> Packet Measurement Parameters                      */
} T_pck_dl_ass;
#endif

#ifndef __T_tfi_ass_alloc__
#define __T_tfi_ass_alloc__
/*
 * TFI Assignment and Allocation
 * CCDGEN:WriteStruct_Count==198
 */
typedef struct
{
  U8                        tfi;                      /*<  0:  1> TFI                                                */
  U8                        poll;                     /*<  1:  1> Polling                                            */
  U8                        allo_flag;                /*<  2:  1> Allocation Flag                                    */
  U8                        v_usf;                    /*<  3:  1> valid-flag                                         */
  U8                        usf;                      /*<  4:  1> Uplink State Flag                                  */
  U8                        v_usf_gran;               /*<  5:  1> valid-flag                                         */
  U8                        usf_gran;                 /*<  6:  1> USF Granularity                                    */
  U8                        v_p0_prmode;              /*<  7:  1> valid-flag                                         */
  T_p0_prmode               p0_prmode;                /*<  8:  4> P0 PR Mode                                         */
  U8                        v_allo_len5;              /*< 12:  1> valid-flag                                         */
  U8                        allo_len5;                /*< 13:  1> Allocation Bitmap Length                           */
  U8                        v_allo_bmp5;              /*< 14:  1> valid-flag                                         */
  U8                        c_allo_bmp5;              /*< 15:  1> counter                                            */
  U8                        allo_bmp5[31];            /*< 16: 31> Allocation Bitmap                                  */
  U8                        v_p0_bts_prmode;          /*< 47:  1> valid-flag                                         */
  T_p0_bts_prmode           p0_bts_prmode;            /*< 48:  4> P0 BTS Power Control PR Mode                       */
  U8                        ccm;                      /*< 52:  1> Channel Coding Command                             */
  U8                        tlli_bcc;                 /*< 53:  1> TLLI Block Channel Coding                          */
  U8                        v_alpha;                  /*< 54:  1> valid-flag                                         */
  U8                        alpha;                    /*< 55:  1> Alpha                                              */
  U8                        gamma;                    /*< 56:  1> Gamma                                              */
  U8                        v_ta_idx;                 /*< 57:  1> valid-flag                                         */
  U8                        ta_idx;                   /*< 58:  1> Timing Advance Index                               */
  U8                        v_tbf_start_time;         /*< 59:  1> valid-flag                                         */
  T_tbf_start_time          tbf_start_time;           /*< 60:  4> TBF Starting Time                                  */
} T_tfi_ass_alloc;
#endif

#ifndef __T_tfi_ass_rlc__
#define __T_tfi_ass_rlc__
/*
 * TFI Assignment and RLC Mode
 * CCDGEN:WriteStruct_Count==199
 */
typedef struct
{
  U8                        tfi;                      /*<  0:  1> TFI                                                */
  U8                        rlc_mode;                 /*<  1:  1> RLC Mode                                           */
  U8                        v_alpha;                  /*<  2:  1> valid-flag                                         */
  U8                        alpha;                    /*<  3:  1> Alpha                                              */
  U8                        gamma;                    /*<  4:  1> Gamma                                              */
  U8                        poll;                     /*<  5:  1> Polling                                            */
  U8                        ta_valid;                 /*<  6:  1> Timing Advance Valid                               */
  U8                        _align0;                  /*<  7:  1> alignment                                          */
} T_tfi_ass_rlc;
#endif

#ifndef __T_pck_downl_ass_ia__
#define __T_pck_downl_ass_ia__
/*
 * Packet Downlink Assignment (IA)
 * CCDGEN:WriteStruct_Count==200
 */
typedef struct
{
  BUF_ded_tlli              ded_tlli;                 /*<  0: 12> Temporary Logical Link Identifier                  */
  U8                        _align0;                  /*< 12:  1> alignment                                          */
  U8                        _align1;                  /*< 13:  1> alignment                                          */
  U8                        _align2;                  /*< 14:  1> alignment                                          */
  U8                        v_tfi_ass_rlc;            /*< 15:  1> valid-flag                                         */
  T_tfi_ass_rlc             tfi_ass_rlc;              /*< 16:  8> TFI Assignment and RLC Mode                        */
  U8                        v_ta_idx;                 /*< 24:  1> valid-flag                                         */
  U8                        ta_idx;                   /*< 25:  1> Timing Advance Index                               */
  U8                        _align3;                  /*< 26:  1> alignment                                          */
  U8                        v_tbf_start_time;         /*< 27:  1> valid-flag                                         */
  T_tbf_start_time          tbf_start_time;           /*< 28:  4> TBF Starting Time                                  */
  U8                        _align4;                  /*< 32:  1> alignment                                          */
  U8                        _align5;                  /*< 33:  1> alignment                                          */
  U8                        _align6;                  /*< 34:  1> alignment                                          */
  U8                        v_p0_bts_prmode;          /*< 35:  1> valid-flag                                         */
  T_p0_bts_prmode           p0_bts_prmode;            /*< 36:  4> P0 BTS Power Control PR Mode                       */
// ELEM-FF: REL99 
//   U8                        v_pda_egprs_par;          /*<  0:  0> valid-flag                                         */
// //   T_pda_egprs_par           pda_egprs_par;            /*<  0:  0> PDA EGPRS Parameters                               */
} T_pck_downl_ass_ia;
#endif

#ifndef __T_usf_gamma__
#define __T_usf_gamma__
/*
 * USF For Timeslot And Gamma
 * CCDGEN:WriteStruct_Count==201
 */
typedef struct
{
  U8                        usf;                      /*<  0:  1> Uplink State Flag                                  */
  U8                        gamma;                    /*<  1:  1> Gamma                                              */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_usf_gamma;
#endif

#ifndef __T_usf_gamma_csn1__
#define __T_usf_gamma_csn1__
/*
 * USF For Timeslot And Gamma (CSN1)
 * CCDGEN:WriteStruct_Count==202
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_usf_gamma;              /*<  3:  1> valid-flag                                         */
  T_usf_gamma               usf_gamma;                /*<  4:  4> USF For Timeslot And Gamma                         */
} T_usf_gamma_csn1;
#endif

#ifndef __T_dyn_alloc__
#define __T_dyn_alloc__
/*
 * Dynamic Allocation
 * CCDGEN:WriteStruct_Count==203
 */
typedef struct
{
  U8                        ext_dyn_all;              /*<  0:  1> Extended Dynamic Allocation                        */
  U8                        v_p0;                     /*<  1:  1> valid-flag                                         */
  U8                        p0;                       /*<  2:  1> P0                                                 */
  U8                        usf_gran;                 /*<  3:  1> USF Granularity                                    */
  U8                        v_tfi;                    /*<  4:  1> valid-flag                                         */
  U8                        tfi;                      /*<  5:  1> TFI                                                */
  U8                        v_rlc_blks;               /*<  6:  1> valid-flag                                         */
  U8                        rlc_blks;                 /*<  7:  1> RLC Data Blocks Granted                            */
  U8                        flag_pp;                  /*<  8:  1> Flag Parameters Present                            */
  U8                        _align0;                  /*<  9:  1> alignment                                          */
  U8                        _align1;                  /*< 10:  1> alignment                                          */
  U8                        v_tagged_usf_tn;          /*< 11:  1> valid-flag                                         */
  T_tagged_usf_tn           tagged_usf_tn[8];         /*< 12: 32> Tagged USF For Timeslot                            */
  U8                        v_alpha;                  /*< 44:  1> valid-flag                                         */
  U8                        alpha;                    /*< 45:  1> Alpha                                              */
  U8                        _align2;                  /*< 46:  1> alignment                                          */
  U8                        v_usf_gamma_csn1;         /*< 47:  1> valid-flag                                         */
  T_usf_gamma_csn1          usf_gamma_csn1[8];        /*< 48: 64> USF For Timeslot And Gamma (CSN1)                  */
} T_dyn_alloc;
#endif


// STRUCT-FF: REL99 
// #ifndef __T_utran_freq_list__
// #define __T_utran_freq_list__
// 
//  UTRAN Freq List
// CCDGEN:WriteStruct_Count==204
// 
// typedef struct
// {
//   U8                        length;                   /*<  0:  0> UTRAN frequency list length                        */
//   U8                        v_fdd_arfcn;              /*<  0:  1> valid-flag                                         */
//   U8                        c_fdd_arfcn;              /*<  0:  0> counter                                            */
// //   U16                       fdd_arfcn[MAX_FDD];       /*<  0:  0> FDD_ARFCN                                          */
//   U8                        v_tdd_arfcn;              /*<  0:  1> valid-flag                                         */
//   U8                        c_tdd_arfcn;              /*<  0:  0> counter                                            */
// //   U16                       tdd_arfcn[MAX_TDD];       /*<  0:  0> TDD_ARFCN                                          */
// } T_utran_freq_list;
// #endif
// 
#ifndef __T_vbs_vgcs_opt__
#define __T_vbs_vgcs_opt__
/*
 * VBS/VGCS Options
 * CCDGEN:WriteStruct_Count==205
 */
typedef struct
{
  U8                        inband_not;               /*<  0:  1> Inband Notification                                */
  U8                        inband_pag;               /*<  1:  1> Inband pagings                                     */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_vbs_vgcs_opt;
#endif

#ifndef __T_vgcs_tmi__
#define __T_vgcs_tmi__
/*
 * VGCS Target Mode Indication
 * CCDGEN:WriteStruct_Count==206
 */
typedef struct
{
  U8                        tm;                       /*<  0:  1> Target mode                                        */
  U8                        group_ckn;                /*<  1:  1> Group Cipher Key Number                            */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_vgcs_tmi;
#endif

#ifndef __T_fa_blk_ia__
#define __T_fa_blk_ia__
/*
 * Fixed Allocation Block Structure
 * CCDGEN:WriteStruct_Count==207
 */
typedef struct
{
  U8                        blp;                      /*<  0:  1> Blocks Or Block Periods                            */
  U8                        allo_len7;                /*<  1:  1> Allocation Bitmap Length                           */
  U8                        c_allo_bmp7;              /*<  2:  1> counter                                            */
  U8                        allo_bmp7[127];           /*<  3:127> Allocation Bitmap                                  */
  U8                        _align0;                  /*<130:  1> alignment                                          */
  U8                        _align1;                  /*<131:  1> alignment                                          */
} T_fa_blk_ia;
#endif

#ifndef __T_fix_alloc__
#define __T_fix_alloc__
/*
 * Fixed Allocation
 * CCDGEN:WriteStruct_Count==208
 */
typedef struct
{
  U8                        v_tfi;                    /*<  0:  1> valid-flag                                         */
  U8                        tfi;                      /*<  1:  1> TFI                                                */
  U8                        final;                    /*<  2:  1> Final Allocation                                   */
  U8                        dl_ctrl_tn;               /*<  3:  1> Downlink Control Timeslot                          */
  U8                        _align0;                  /*<  4:  1> alignment                                          */
  U8                        _align1;                  /*<  5:  1> alignment                                          */
  U8                        _align2;                  /*<  6:  1> alignment                                          */
  U8                        v_p0_pwr_ctrl_mode;       /*<  7:  1> valid-flag                                         */
  T_p0_pwr_ctrl_mode        p0_pwr_ctrl_mode;         /*<  8:  4> P0 and BTS Power Control Mode                      */
  U8                        flag;                     /*< 12:  1> Flag                                               */
  U8                        v_ts_all;                 /*< 13:  1> valid-flag                                         */
  U8                        ts_all;                   /*< 14:  1> Timeslot Allocation                                */
  U8                        v_pwr_ctrl;               /*< 15:  1> valid-flag                                         */
  T_pwr_ctrl                pwr_ctrl;                 /*< 16: 36> Power Control Parameters                           */
  U8                        hdm;                      /*< 52:  1> Half Duplex Mode                                   */
  U8                        flag1;                    /*< 53:  1> Flag1                                              */
  U8                        _align3;                  /*< 54:  1> alignment                                          */
  U8                        v_fa_blk_ia;              /*< 55:  1> valid-flag                                         */
  T_fa_blk_ia               fa_blk_ia;                /*< 56:132> Fixed Allocation Block Structure                   */
  U8                        v_allo_var;               /*<188:  1> valid-flag                                         */
  U8                        c_allo_var;               /*<189:  1> counter                                            */
  U8                        allo_var[127];            /*<190:127> Allocation Bitmap Var                              */
  U8                        _align4;                  /*<317:  1> alignment                                          */
  U8                        _align5;                  /*<318:  1> alignment                                          */
  U8                        _align6;                  /*<319:  1> alignment                                          */
} T_fix_alloc;
#endif

#ifndef __T_pck_ul_ass__
#define __T_pck_ul_ass__
/*
 * RR Packet Uplink Assignment
 * CCDGEN:WriteStruct_Count==209
 */
typedef struct
{
  U8                        ccm;                      /*<  0:  1> Channel Coding Command                             */
  U8                        tlli_bcc;                 /*<  1:  1> TLLI Block Channel Coding                          */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
  T_pck_ta                  pck_ta;                   /*<  4:  8> Packet Timing Advance                              */
  U8                        flag;                     /*< 12:  1> Flag                                               */
  U8                        flag1;                    /*< 13:  1> Flag1                                              */
  U8                        _align2;                  /*< 14:  1> alignment                                          */
  U8                        v_dyn_alloc;              /*< 15:  1> valid-flag                                         */
  T_dyn_alloc               dyn_alloc;                /*< 16:112> Dynamic Allocation                                 */
  U8                        _align3;                  /*<128:  1> alignment                                          */
  U8                        _align4;                  /*<129:  1> alignment                                          */
  U8                        _align5;                  /*<130:  1> alignment                                          */
  U8                        v_single_alloc;           /*<131:  1> valid-flag                                         */
  T_single_alloc            single_alloc;             /*<132: 16> Single Block Allocation                            */
  U8                        _align6;                  /*<148:  1> alignment                                          */
  U8                        _align7;                  /*<149:  1> alignment                                          */
  U8                        _align8;                  /*<150:  1> alignment                                          */
  U8                        v_fix_alloc;              /*<151:  1> valid-flag                                         */
  T_fix_alloc               fix_alloc;                /*<152:320> Fixed Allocation                                   */
} T_pck_ul_ass;
#endif

#ifndef __T_sngl_block_alloc__
#define __T_sngl_block_alloc__
/*
 * Single Block Allocation
 * CCDGEN:WriteStruct_Count==210
 */
typedef struct
{
  U8                        v_alpha;                  /*<  0:  1> valid-flag                                         */
  U8                        alpha;                    /*<  1:  1> Alpha                                              */
  U8                        gamma;                    /*<  2:  1> Gamma                                              */
  U8                        _align0;                  /*<  3:  1> alignment                                          */
  T_tbf_start_time          tbf_start_time;           /*<  4:  4> TBF Starting Time                                  */
  U8                        _align1;                  /*<  8:  1> alignment                                          */
  U8                        _align2;                  /*<  9:  1> alignment                                          */
  U8                        _align3;                  /*< 10:  1> alignment                                          */
  U8                        v_p0_bts_prmode;          /*< 11:  1> valid-flag                                         */
  T_p0_bts_prmode           p0_bts_prmode;            /*< 12:  4> P0 BTS Power Control PR Mode                       */
} T_sngl_block_alloc;
#endif

#ifndef __T_pck_upl_ass_ia__
#define __T_pck_upl_ass_ia__
/*
 * Packet Uplink Assignment (IA)
 * CCDGEN:WriteStruct_Count==211
 */
typedef struct
{
  U8                        flag;                     /*<  0:  1> Flag                                               */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        v_tfi_ass_alloc;          /*<  3:  1> valid-flag                                         */
  T_tfi_ass_alloc           tfi_ass_alloc;            /*<  4: 64> TFI Assignment and Allocation                      */
  U8                        _align2;                  /*< 68:  1> alignment                                          */
  U8                        _align3;                  /*< 69:  1> alignment                                          */
  U8                        _align4;                  /*< 70:  1> alignment                                          */
  U8                        v_sngl_block_alloc;       /*< 71:  1> valid-flag                                         */
  T_sngl_block_alloc        sngl_block_alloc;         /*< 72: 16> Single Block Allocation                            */
// STRUCT-FF: REL99 
//   U8                        v_t_ext_ra;               /*<  0:  0> valid-flag                                         */
// //   T_t_ext_ra                t_ext_ra;                 /*<  0:  0> Tagged Extended RA                                 */
} T_pck_upl_ass_ia;
#endif

#ifndef __T_ia_assign_par__
#define __T_ia_assign_par__
/*
 * IA Assignment Parameters
 * CCDGEN:WriteStruct_Count==212
 */
typedef struct
{
  U8                        flag;                     /*<  0:  1> Flag                                               */
  U8                        v_flag1;                  /*<  1:  1> valid-flag                                         */
  U8                        flag1;                    /*<  2:  1> Flag1                                              */
  U8                        v_pck_upl_ass_ia;         /*<  3:  1> valid-flag                                         */
  T_pck_upl_ass_ia          pck_upl_ass_ia;           /*<  4: 88> Packet Uplink Assignment (IA)                      */
  U8                        _align0;                  /*< 92:  1> alignment                                          */
  U8                        _align1;                  /*< 93:  1> alignment                                          */
  U8                        _align2;                  /*< 94:  1> alignment                                          */
  U8                        v_pck_downl_ass_ia;       /*< 95:  1> valid-flag                                         */
  T_pck_downl_ass_ia        pck_downl_ass_ia;         /*< 96: 40> Packet Downlink Assignment (IA)                    */
  U8                        _align3;                  /*<136:  1> alignment                                          */
  U8                        _align4;                  /*<137:  1> alignment                                          */
  U8                        _align5;                  /*<138:  1> alignment                                          */
  U8                        v_ia_2nd_part;            /*<139:  1> valid-flag                                         */
  T_ia_2nd_part             ia_2nd_part;              /*<140:  4> IA Second Part Packet Assignment                   */
} T_ia_assign_par;
#endif


// STRUCT-FF: REL99 
// #ifndef __T_class_enq_mask__
// #define __T_class_enq_mask__
// 
//  Classmark enquiry mask
// CCDGEN:WriteStruct_Count==213
// 
// typedef struct
// {
//   U8                        class_req;                /*<  0:  0> Classmark change request                           */
//   U8                        utran_class_req;          /*<  0:  0> Utran Classmark change request                     */
//   U8                        cdma_class_req;           /*<  0:  0> CDMA2000 Classmark change request                  */
// } T_class_enq_mask;
// #endif
// 

// STRUCT-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// #ifndef __T_si2q_extn_info__
// #define __T_si2q_extn_info__
// 
//  SI 2 Quater Extension Info
// CCDGEN:WriteStruct_Count==214
// 
// typedef struct
// {
//   U8                        v_ccn_support_description; /*<  0:  0> valid-flag                                         */
// //   T_ccn_support_description ccn_support_description;  /*<  0:  0> ccn support description towards all neighbour (type defined in "m_rr_com.h") */
// } T_si2q_extn_info;
// #endif
// 

// STRUCT-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// #ifndef __T_si2q_extn_bits__
// #define __T_si2q_extn_bits__
// 
//  SI 2 Quater Extension Info
// CCDGEN:WriteStruct_Count==215
// 
// typedef struct
// {
//   U8                        ext_length;               /*<  0:  1> Extension Length2                                  */
//   T_si2q_extn_info          si2q_extn_info;           /*<  0:  0> BIT STRING: SI 2 Quater Extension Info             */
//   U8                        _align0;                  /*<  1:  1> alignment                                          */
//   U8                        _align1;                  /*<  2:  1> alignment                                          */
//   U8                        _align2;                  /*<  3:  1> alignment                                          */
// } T_si2q_extn_bits;
// #endif
// 

// STRUCT-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// #ifndef __T_si_2qua_octets__
// #define __T_si_2qua_octets__
// 
//  SI 2quater Rest Octets
// CCDGEN:WriteStruct_Count==216
// 
// typedef struct
// {
//   U8                        ba_ind;                   /*<  0:  0> BA_ind                                             */
//   U8                        threeg_ba_ind;            /*<  0:  0> ThreeG BA ind                                      */
//   U8                        mp_change_mark;           /*<  0:  0> MP change mark                                     */
//   U8                        si2qua_index;             /*<  0:  0> SI2quater_index                                    */
//   U8                        si2qua_count;             /*<  0:  0> SI2quater_count                                    */
//   U8                        v_meas_para;              /*<  0:  0> valid-flag                                         */
// //   T_meas_para               meas_para;                /*<  0:  0> Measurement_parameter description                  */
//   U8                        v_rtdd;                   /*<  0:  0> valid-flag                                         */
// //   T_rtdd                    rtdd;                     /*<  0:  0> GPRS Real Time Difference Description (type defined in "m_rr_com.h") */
//   U8                        v_gprs_bsic;              /*<  0:  0> valid-flag                                         */
// //   T_gprs_bsic               gprs_bsic;                /*<  0:  0> GPRS BSIC Description (type defined in "m_rr_com.h") */
//   U8                        v_gprs_rep_prio;          /*<  0:  0> valid-flag                                         */
// //   T_gprs_rep_prio           gprs_rep_prio;            /*<  0:  0> GPRS REPORT PRIORITY Description (type defined in "m_rr_com.h") */
//   U8                        v_gprs_meas_para;         /*<  0:  0> valid-flag                                         */
// //   T_gprs_meas_para          gprs_meas_para;           /*<  0:  0> GPRS MEASUREMENT Parameters Description            */
//   U8                        v_nc_meas_para;           /*<  0:  0> valid-flag                                         */
// //   T_nc_meas_para            nc_meas_para;             /*<  0:  0> NC Measurement Parameters                          */
//   U8                        v_si2q_extn_bits;         /*<  0:  0> valid-flag                                         */
// //   T_si2q_extn_bits          si2q_extn_bits;           /*<  0:  0> SI 2 Quater Extension Info                         */
// } T_si_2qua_octets;
// #endif
// 

// STRUCT-FF: REL99 
// #ifndef __T_threeg_es_tag_ind__
// #define __T_threeg_es_tag_ind__
// 
//  3G Early Classmark Sending Restriction (1 bit field)
// CCDGEN:WriteStruct_Count==217
// 
// /* typedef void T_threeg_es_tag_ind;*/
// #endif

// STRUCT-FF: REL99 
// #ifndef __T_si2quater_ind__
// #define __T_si2quater_ind__
// 
//  SI2quater Indicator struct
// CCDGEN:WriteStruct_Count==218
// 
// typedef struct
// {
// ELEM-FF: REL99 
//   U8                        si2quater_pos;            /*<  0:  0> SI2quater_POSITION                                 */
// } T_si2quater_ind;
// #endif
// 
#ifndef __T_si3_rest_oct__
#define __T_si3_rest_oct__
/*
 * SI 3 Rest Octets
 * CCDGEN:WriteStruct_Count==219
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_opt_sel_par;            /*<  3:  1> valid-flag                                         */
  T_opt_sel_par             opt_sel_par;              /*<  4:  4> Optional Selection Parameters                      */
  U8                        v_pow_offs;               /*<  8:  1> valid-flag                                         */
  U8                        pow_offs;                 /*<  9:  1> Power Offset                                       */
  U8                        _align3;                  /*< 10:  1> alignment                                          */
  U8                        v_si2ter_ind;             /*< 11:  1> valid-flag                                         */
  U8                        _align4;                  /*< 12:  1> alignment                                          */
  U8                        _align5;                  /*< 13:  1> alignment                                          */
  U8                        _align6;                  /*< 14:  1> alignment                                          */
  U8                        v_es_ind_tag;             /*< 15:  1> valid-flag                                         */
  U8                        v_if_and_where;           /*< 16:  1> valid-flag                                         */
  U8                        if_and_where;             /*< 17:  1> If And Where                                       */
  U8                        _align7;                  /*< 18:  1> alignment                                          */
  U8                        v_gprs_indic;             /*< 19:  1> valid-flag                                         */
  T_gprs_indic              gprs_indic;               /*< 20:  4> GPRS Indicator                                     */
// ELEM-FF: REL99 
//   U8                        v_threeg_es_tag_ind;      /*<  0:  0> valid-flag                                         */
// // ELEM-FF: REL99 
//   U8                        v_si2quater_ind;          /*<  0:  0> valid-flag                                         */
// //   T_si2quater_ind           si2quater_ind;            /*<  0:  0> SI2quater Indicator struct                         */
} T_si3_rest_oct;
#endif


// STRUCT-FF: REL99 
// #ifndef __T_d_alloc__
// #define __T_d_alloc__
// 
//  Dynamic Allocation
// CCDGEN:WriteStruct_Count==220
// 
// typedef struct
// {
//   U8                        usf;                      /*<  0:  1> Uplink State Flag                                  */
//   U8                        usf_gran;                 /*<  1:  1> USF Granularity                                    */
//   U8                        _align0;                  /*<  2:  1> alignment                                          */
//   U8                        v_p0_prmode;              /*<  3:  1> valid-flag                                         */
// //   T_p0_prmode               p0_prmode;                /*<  4:  4> P0 PR Mode                                         */
// } T_d_alloc;
// #endif
// 

// STRUCT-FF: REL99 
// #ifndef __T_f_alloc__
// #define __T_f_alloc__
// 
//  Fixed Allocation
// CCDGEN:WriteStruct_Count==221
// 
// typedef struct
// {
//   U8                        allo_len5;                /*<  0:  1> Allocation Bitmap Length                           */
//   U8                        c_allo_bmp5;              /*<  1:  1> counter                                            */
//   U8                        allo_bmp5[31];            /*<  2: 31> Allocation Bitmap                                  */
//   U8                        _align0;                  /*< 33:  1> alignment                                          */
//   U8                        _align1;                  /*< 34:  1> alignment                                          */
//   U8                        v_p0_bts_prmode;          /*< 35:  1> valid-flag                                         */
// //   T_p0_bts_prmode           p0_bts_prmode;            /*< 36:  4> P0 BTS Power Control PR Mode                       */
// } T_f_alloc;
// #endif
// 

// STRUCT-FF: REL99 
// #ifndef __T_d_f_alloc__
// #define __T_d_f_alloc__
// 
//  Dynamic or Fixed Allocation
// CCDGEN:WriteStruct_Count==222
// 
// typedef struct
// {
//   U8                        tfi;                      /*<  0:  1> TFI                                                */
//   U8                        poll;                     /*<  1:  1> Polling                                            */
//   U8                        allo_flag;                /*<  2:  1> Allocation Flag                                    */
//   U8                        v_d_alloc;                /*<  0:  0> valid-flag                                         */
// //   T_d_alloc                 d_alloc;                  /*<  0:  0> Dynamic Allocation                                 */
//   U8                        v_f_alloc;                /*<  0:  0> valid-flag                                         */
// //   T_f_alloc                 f_alloc;                  /*<  0:  0> Fixed Allocation                                   */
//   U8                        mcs;                      /*<  0:  0> EGPRS Modulation and coding Scheme                 */
//   U8                        tlli_bcc;                 /*<  3:  1> TLLI Block Channel Coding                          */
//   U8                        v_bep_period;             /*<  4:  1> valid-flag                                         */
//   U8                        bep_period;               /*<  0:  0> BEP Period 2                                       */
//   U8                        resegm;                   /*<  0:  0> Resegment Bit                                      */
//   U8                        e_window;                 /*<  0:  0> EGPRS Window Size                                  */
//   U8                        v_alpha;                  /*<  4:  1> valid-flag                                         */
//   U8                        alpha;                    /*<  5:  1> Alpha                                              */
//   U8                        gamma;                    /*<  6:  1> Gamma                                              */
//   U8                        v_ta_idx;                 /*<  7:  1> valid-flag                                         */
//   U8                        ta_idx;                   /*<  8:  1> Timing Advance Index                               */
//   U8                        _align0;                  /*<  9:  1> alignment                                          */
//   U8                        _align1;                  /*< 10:  1> alignment                                          */
//   U8                        v_tbf_start_time;         /*< 11:  1> valid-flag                                         */
// //   T_tbf_start_time          tbf_start_time;           /*< 12:  4> TBF Starting Time                                  */
// } T_d_f_alloc;
// #endif
// 

// STRUCT-FF: REL99 
// #ifndef __T_egprs_pua__
// #define __T_egprs_pua__
// 
//  EGPRS Packet Uplink Assignment
// CCDGEN:WriteStruct_Count==223
// 
// typedef struct
// {
//   U8                        ext_ra;                   /*<  0:  1> Extended RA                                        */
//   U8                        v_acc_tt;                 /*<  1:  1> valid-flag                                         */
//   U8                        c_acc_tt;                 /*<  0:  0> counter                                            */
// //   U8                        acc_tt[MAX_ACCESS_TT];    /*<  0:  0> Access Technology Type                             */
//   U8                        flag;                     /*<  1:  1> Flag                                               */
//   U8                        v_d_f_alloc;              /*<  0:  0> valid-flag                                         */
// //   T_d_f_alloc               d_f_alloc;                /*<  0:  0> Dynamic or Fixed Allocation                        */
//   U8                        v_mb_alloc;               /*<  0:  0> valid-flag                                         */
// //   T_mb_alloc                mb_alloc;                 /*<  0:  0> Multi Block Allocation                             */
//   U8                        _align0;                  /*<  2:  1> alignment                                          */
//   U8                        _align1;                  /*<  3:  1> alignment                                          */
// } T_egprs_pua;
// #endif
// 

// STRUCT-FF: REL99 
// #ifndef __T_ia_egprs_par__
// #define __T_ia_egprs_par__
// 
//  IA EGPRS Parameters
// CCDGEN:WriteStruct_Count==224
// 
// typedef struct
// {
//   U8                        flag;                     /*<  0:  1> Flag                                               */
//   U8                        v_flag1;                  /*<  1:  1> valid-flag                                         */
//   U8                        flag1;                    /*<  2:  1> Flag1                                              */
//   U8                        v_egprs_pua;              /*<  0:  0> valid-flag                                         */
// //   T_egprs_pua               egprs_pua;                /*<  0:  0> EGPRS Packet Uplink Assignment                     */
//   U8                        _align0;                  /*<  3:  1> alignment                                          */
// } T_ia_egprs_par;
// #endif
// 
#ifndef __T_ia_rest_oct__
#define __T_ia_rest_oct__
/*
 * IA Rest Octets
 * CCDGEN:WriteStruct_Count==225
 */
typedef struct
{
  U8                        flag_2bit;                /*<  0:  1> Flag twobit                                        */
// ELEM-FF: REL99 
//   U8                        v_ia_egprs_par;           /*<  0:  0> valid-flag                                         */
// //   T_ia_egprs_par            ia_egprs_par;             /*<  0:  0> IA EGPRS Parameters                                */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        v_ia_freq_par;            /*<  3:  1> valid-flag                                         */
  T_ia_freq_par             ia_freq_par;              /*<  4: 16> IA Frequency Parameters                            */
  U8                        _align2;                  /*< 20:  1> alignment                                          */
  U8                        _align3;                  /*< 21:  1> alignment                                          */
  U8                        _align4;                  /*< 22:  1> alignment                                          */
  U8                        v_ia_assign_par;          /*< 23:  1> valid-flag                                         */
  T_ia_assign_par           ia_assign_par;            /*< 24:144> IA Assignment Parameters                           */
} T_ia_rest_oct;
#endif


// STRUCT-FF: TI_PS_FF_QUAD_BAND_SUPPORT 
// #ifndef __T_si6_rest_oct_dtm__
// #define __T_si6_rest_oct_dtm__
// 
//  Structured Element
// CCDGEN:WriteStruct_Count==226
// 
// typedef struct
// {
//   U8                        rac;                      /*<  0:  1> Routing Area Code                                  */
//   U8                        max_lapdm;                /*<  0:  0> Max LAPDm frames on which a layer 3 can be segmented */
//   U8                        _align0;                  /*<  1:  1> alignment                                          */
//   U8                        _align1;                  /*<  2:  1> alignment                                          */
//   U8                        _align2;                  /*<  3:  1> alignment                                          */
// } T_si6_rest_oct_dtm;
// #endif
// 
#ifndef __T_si6_rest_oct__
#define __T_si6_rest_oct__
/*
 * SI 6 Rest Octets
 * CCDGEN:WriteStruct_Count==227
 */
typedef struct
{
  U8                        _align0;                  /*<  0:  1> alignment                                          */
  U8                        _align1;                  /*<  1:  1> alignment                                          */
  U8                        _align2;                  /*<  2:  1> alignment                                          */
  U8                        v_pch_nch_info;           /*<  3:  1> valid-flag                                         */
  T_pch_nch_info            pch_nch_info;             /*<  4:  4> PCH and NCH Info                                   */
  U8                        _align3;                  /*<  8:  1> alignment                                          */
  U8                        _align4;                  /*<  9:  1> alignment                                          */
  U8                        _align5;                  /*< 10:  1> alignment                                          */
  U8                        v_vbs_vgcs_opt;           /*< 11:  1> valid-flag                                         */
  T_vbs_vgcs_opt            vbs_vgcs_opt;             /*< 12:  4> VBS/VGCS Options                                   */
// ELEM-FF: TI_PS_FF_QUAD_BAND_SUPPORT 
//   U8                        v_si6_rest_oct_dtm;       /*<  0:  0> valid-flag                                         */
// //   T_si6_rest_oct_dtm        si6_rest_oct_dtm;         /*<  0:  0> Structured Element                                 */
// ELEM-FF: TI_PS_FF_QUAD_BAND_SUPPORT 
//   U8                        band_indicator;           /*<  0:  0> BAND_INDICATOR                                     */
} T_si6_rest_oct;
#endif


/*
 * End of substructure section, begin of message definition section
 */

#ifndef __T_B_APPLIC_INFO__
#define __T_B_APPLIC_INFO__
/*
 * 
 * CCDGEN:WriteStruct_Count==228
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_apdu_id                 apdu_id;                  /*<  4:  4> APDU ID                                            */
  T_apdu_flags              apdu_flags;               /*<  8:  4> APDU Flags                                         */
  T_apdu_data               apdu_data;                /*< 12:252> APDU Data                                          */
} T_B_APPLIC_INFO;
#endif

#ifndef __T_D_ADD_ASSIGN__
#define __T_D_ADD_ASSIGN__
/*
 * 
 * CCDGEN:WriteStruct_Count==229
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_chan_desc               chan_desc;                /*<  4: 12> Channel Description                                */
  U8                        _align3;                  /*< 16:  1> alignment                                          */
  U8                        _align4;                  /*< 17:  1> alignment                                          */
  U8                        _align5;                  /*< 18:  1> alignment                                          */
  U8                        v_mob_alloc;              /*< 19:  1> valid-flag                                         */
  T_mob_alloc               mob_alloc;                /*< 20: 12> Mobile Allocation                                  */
  U8                        _align6;                  /*< 32:  1> alignment                                          */
  U8                        _align7;                  /*< 33:  1> alignment                                          */
  U8                        _align8;                  /*< 34:  1> alignment                                          */
  U8                        v_start_time;             /*< 35:  1> valid-flag                                         */
  T_start_time              start_time;               /*< 36:  4> Starting Time                                      */
} T_D_ADD_ASSIGN;
#endif

#ifndef __T_D_ASSIGN_CMD__
#define __T_D_ASSIGN_CMD__
/*
 * 
 * CCDGEN:WriteStruct_Count==230
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_chan_desc               chan_desc;                /*<  4: 12> Channel Description                                */
  T_pow_cmd                 pow_cmd;                  /*< 16:  4> Power Command                                      */
  U8                        _align3;                  /*< 20:  1> alignment                                          */
  U8                        _align4;                  /*< 21:  1> alignment                                          */
  U8                        _align5;                  /*< 22:  1> alignment                                          */
  U8                        v_freq_list_after;        /*< 23:  1> valid-flag                                         */
  T_freq_list_after         freq_list_after;          /*< 24: 36> Frequency List                                     */
  U8                        _align6;                  /*< 60:  1> alignment                                          */
  U8                        _align7;                  /*< 61:  1> alignment                                          */
  U8                        _align8;                  /*< 62:  1> alignment                                          */
  U8                        v_cell_chan_desc;         /*< 63:  1> valid-flag                                         */
  BUF_cell_chan_desc        cell_chan_desc;           /*< 64: 24> Cell Channel Description                           */
  U8                        _align9;                  /*< 88:  1> alignment                                          */
  U8                        _align10;                 /*< 89:  1> alignment                                          */
  U8                        _align11;                 /*< 90:  1> alignment                                          */
  U8                        v_multislot_alloc;        /*< 91:  1> valid-flag                                         */
  T_multislot_alloc         multislot_alloc;          /*< 92: 16> Multislot Configuration                            */
  U8                        v_chan_mode;              /*<108:  1> valid-flag                                         */
  U8                        chan_mode;                /*<109:  1> Channel Mode                                       */
  U8                        v_chan_mode2;             /*<110:  1> valid-flag                                         */
  U8                        chan_mode2;               /*<111:  1> Mode Of  2nd Channel Set                           */
  U8                        v_chan_mode3;             /*<112:  1> valid-flag                                         */
  U8                        chan_mode3;               /*<113:  1> Mode Of  3rd Channel Set                           */
  U8                        v_chan_mode4;             /*<114:  1> valid-flag                                         */
  U8                        chan_mode4;               /*<115:  1> Mode Of  4th Channel Set                           */
  U8                        v_chan_mode5;             /*<116:  1> valid-flag                                         */
  U8                        chan_mode5;               /*<117:  1> Mode Of  5th Channel Set                           */
  U8                        v_chan_mode6;             /*<118:  1> valid-flag                                         */
  U8                        chan_mode6;               /*<119:  1> Mode Of  6th Channel Set                           */
  U8                        v_chan_mode7;             /*<120:  1> valid-flag                                         */
  U8                        chan_mode7;               /*<121:  1> Mode Of  7th Channel Set                           */
  U8                        v_chan_mode8;             /*<122:  1> valid-flag                                         */
  U8                        chan_mode8;               /*<123:  1> Mode Of  8th Channel Set                           */
  U8                        _align12;                 /*<124:  1> alignment                                          */
  U8                        _align13;                 /*<125:  1> alignment                                          */
  U8                        _align14;                 /*<126:  1> alignment                                          */
  U8                        v_chan_desc_after_2;      /*<127:  1> valid-flag                                         */
  T_chan_desc_after_2       chan_desc_after_2;        /*<128: 12> Channel Description                                */
  U8                        v_chan_mode_2;            /*<140:  1> valid-flag                                         */
  U8                        chan_mode_2;              /*<141:  1> Channel Mode 2                                     */
  U8                        _align15;                 /*<142:  1> alignment                                          */
  U8                        v_mob_alloc_after;        /*<143:  1> valid-flag                                         */
  T_mob_alloc_after         mob_alloc_after;          /*<144: 12> Mobile Allocation                                  */
  U8                        _align16;                 /*<156:  1> alignment                                          */
  U8                        _align17;                 /*<157:  1> alignment                                          */
  U8                        _align18;                 /*<158:  1> alignment                                          */
  U8                        v_start_time;             /*<159:  1> valid-flag                                         */
  T_start_time              start_time;               /*<160:  4> Starting Time                                      */
  U8                        _align19;                 /*<164:  1> alignment                                          */
  U8                        _align20;                 /*<165:  1> alignment                                          */
  U8                        _align21;                 /*<166:  1> alignment                                          */
  U8                        v_freq_list_before;       /*<167:  1> valid-flag                                         */
  T_freq_list_before        freq_list_before;         /*<168: 36> Frequency List                                     */
  U8                        _align22;                 /*<204:  1> alignment                                          */
  U8                        _align23;                 /*<205:  1> alignment                                          */
  U8                        _align24;                 /*<206:  1> alignment                                          */
  U8                        v_chan_desc_before;       /*<207:  1> valid-flag                                         */
  T_chan_desc_before        chan_desc_before;         /*<208: 12> Channel Description                                */
  U8                        _align25;                 /*<220:  1> alignment                                          */
  U8                        _align26;                 /*<221:  1> alignment                                          */
  U8                        _align27;                 /*<222:  1> alignment                                          */
  U8                        v_chan_desc_before_2;     /*<223:  1> valid-flag                                         */
  T_chan_desc_before_2      chan_desc_before_2;       /*<224: 12> Channel Description                                */
  U8                        _align28;                 /*<236:  1> alignment                                          */
  U8                        _align29;                 /*<237:  1> alignment                                          */
  U8                        _align30;                 /*<238:  1> alignment                                          */
  U8                        v_freq_chan_seq;          /*<239:  1> valid-flag                                         */
  T_freq_chan_seq           freq_chan_seq;            /*<240: 20> Frequency Channel Sequence                         */
  U8                        _align31;                 /*<260:  1> alignment                                          */
  U8                        _align32;                 /*<261:  1> alignment                                          */
  U8                        _align33;                 /*<262:  1> alignment                                          */
  U8                        v_mob_alloc_before;       /*<263:  1> valid-flag                                         */
  T_mob_alloc_before        mob_alloc_before;         /*<264: 12> Mobile Allocation                                  */
  U8                        _align34;                 /*<276:  1> alignment                                          */
  U8                        _align35;                 /*<277:  1> alignment                                          */
  U8                        _align36;                 /*<278:  1> alignment                                          */
  U8                        v_ciph_mode_set;          /*<279:  1> valid-flag                                         */
  T_ciph_mode_set           ciph_mode_set;            /*<280:  4> Cipher Mode Setting                                */
  U8                        _align37;                 /*<284:  1> alignment                                          */
  U8                        _align38;                 /*<285:  1> alignment                                          */
  U8                        _align39;                 /*<286:  1> alignment                                          */
  U8                        v_vgcs_tmi;               /*<287:  1> valid-flag                                         */
  T_vgcs_tmi                vgcs_tmi;                 /*<288:  4> VGCS Target Mode Indication                        */
  U8                        _align40;                 /*<292:  1> alignment                                          */
  U8                        _align41;                 /*<293:  1> alignment                                          */
  U8                        _align42;                 /*<294:  1> alignment                                          */
  U8                        v_multirate_conf;         /*<295:  1> valid-flag                                         */
  T_multirate_conf          multirate_conf;           /*<296: 24> Multi Rate Configuration                           */
} T_D_ASSIGN_CMD;
#endif

#ifndef __T_U_ASSIGN_COMP__
#define __T_U_ASSIGN_COMP__
/*
 * 
 * CCDGEN:WriteStruct_Count==231
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        rr_cause;                 /*<  1:  1> RR Cause                                           */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_U_ASSIGN_COMP;
#endif

#ifndef __T_U_ASSIGN_FAIL__
#define __T_U_ASSIGN_FAIL__
/*
 * 
 * CCDGEN:WriteStruct_Count==232
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        rr_cause;                 /*<  1:  1> RR Cause                                           */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_U_ASSIGN_FAIL;
#endif

#ifndef __T_D_CHAN_MOD__
#define __T_D_CHAN_MOD__
/*
 * 
 * CCDGEN:WriteStruct_Count==233
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_chan_desc               chan_desc;                /*<  4: 12> Channel Description                                */
  U8                        chan_mode;                /*< 16:  1> Channel Mode                                       */
  U8                        _align3;                  /*< 17:  1> alignment                                          */
  U8                        _align4;                  /*< 18:  1> alignment                                          */
  U8                        v_vgcs_tmi;               /*< 19:  1> valid-flag                                         */
  T_vgcs_tmi                vgcs_tmi;                 /*< 20:  4> VGCS Target Mode Indication                        */
  U8                        _align5;                  /*< 24:  1> alignment                                          */
  U8                        _align6;                  /*< 25:  1> alignment                                          */
  U8                        _align7;                  /*< 26:  1> alignment                                          */
  U8                        v_multirate_conf;         /*< 27:  1> valid-flag                                         */
  T_multirate_conf          multirate_conf;           /*< 28: 24> Multi Rate Configuration                           */
} T_D_CHAN_MOD;
#endif

#ifndef __T_U_CHAN_MOD_ACK__
#define __T_U_CHAN_MOD_ACK__
/*
 * 
 * CCDGEN:WriteStruct_Count==234
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_chan_desc               chan_desc;                /*<  4: 12> Channel Description                                */
  U8                        chan_mode;                /*< 16:  1> Channel Mode                                       */
  U8                        _align3;                  /*< 17:  1> alignment                                          */
  U8                        _align4;                  /*< 18:  1> alignment                                          */
  U8                        _align5;                  /*< 19:  1> alignment                                          */
} T_U_CHAN_MOD_ACK;
#endif

#ifndef __T_D_CHAN_REL__
#define __T_D_CHAN_REL__
/*
 * 
 * CCDGEN:WriteStruct_Count==235
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        rr_cause;                 /*<  1:  1> RR Cause                                           */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        v_ba_range;               /*<  3:  1> valid-flag                                         */
  T_ba_range                ba_range;                 /*<  4:124> BA Range                                           */
  U8                        _align1;                  /*<128:  1> alignment                                          */
  U8                        _align2;                  /*<129:  1> alignment                                          */
  U8                        _align3;                  /*<130:  1> alignment                                          */
  U8                        v_group_chan_desc;        /*<131:  1> valid-flag                                         */
  T_group_chan_desc         group_chan_desc;          /*<132: 24> Group Channel Description                          */
  U8                        v_group_ckn;              /*<156:  1> valid-flag                                         */
  U8                        group_ckn;                /*<157:  1> Group Cipher Key Number                            */
  U8                        _align4;                  /*<158:  1> alignment                                          */
  U8                        v_gprs_resum;             /*<159:  1> valid-flag                                         */
  T_gprs_resum              gprs_resum;               /*<160:  4> GPRS Resumption                                    */
  U8                        _align5;                  /*<164:  1> alignment                                          */
  U8                        _align6;                  /*<165:  1> alignment                                          */
  U8                        _align7;                  /*<166:  1> alignment                                          */
  U8                        v_ba_list_pref;           /*<167:  1> valid-flag                                         */
  T_ba_list_pref            ba_list_pref;             /*<168: 88> BA List Pref                                       */
// ELEM-FF: REL99 
//   U8                        v_utran_freq_list;        /*<  0:  0> valid-flag                                         */
// //   T_utran_freq_list         utran_freq_list;          /*<  0:  0> UTRAN Freq List                                    */
// ELEM-FF: REL99 
//   U8                        v_cell_chan_desc;         /*<256:  1> valid-flag                                         */
//   BUF_cell_chan_desc        cell_chan_desc;           /*<  0:  0> Cell Channel Description                           */
} T_D_CHAN_REL;
#endif

#ifndef __T_D_CIPH_CMD__
#define __T_D_CIPH_CMD__
/*
 * 
 * CCDGEN:WriteStruct_Count==236
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_ciph_mode_set           ciph_mode_set;            /*<  4:  4> Cipher Mode Setting                                */
  T_ciph_res                ciph_res;                 /*<  8:  4> Cipher Response                                    */
} T_D_CIPH_CMD;
#endif

#ifndef __T_U_CIPH_COMP__
#define __T_U_CIPH_COMP__
/*
 * 
 * CCDGEN:WriteStruct_Count==237
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        v_mob_ident;              /*<  3:  1> valid-flag                                         */
  T_mob_ident               mob_ident;                /*<  4: 36> Mobile Identity                                    */
} T_U_CIPH_COMP;
#endif

#ifndef __T_U_CLASS_CHNG__
#define __T_U_CLASS_CHNG__
/*
 * 
 * CCDGEN:WriteStruct_Count==238
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_mob_class_2             mob_class_2;              /*<  4: 20> Mobile Station Classmark 2 (type defined in "m_rr_com.h") */
  U8                        _align3;                  /*< 24:  1> alignment                                          */
  U8                        _align4;                  /*< 25:  1> alignment                                          */
  U8                        _align5;                  /*< 26:  1> alignment                                          */
  U8                        v_mob_class_3;            /*< 27:  1> valid-flag                                         */
  T_mob_class_3             mob_class_3;              /*< 28: 68> Mobile Station Classmark 3 (type defined in "m_rr_com.h") */
} T_U_CLASS_CHNG;
#endif

#ifndef __T_D_CLASS_ENQ__
#define __T_D_CLASS_ENQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==239
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
// ELEM-FF: REL99 
//   U8                        v_class_enq_mask;         /*<  0:  0> valid-flag                                         */
// //   T_class_enq_mask          class_enq_mask;           /*<  0:  0> Classmark enquiry mask                             */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_D_CLASS_ENQ;
#endif

#ifndef __T_D_CONF_CHANGE_CMD__
#define __T_D_CONF_CHANGE_CMD__
/*
 * 
 * CCDGEN:WriteStruct_Count==240
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_multislot_alloc         multislot_alloc;          /*<  4: 16> Multislot Configuration                            */
  U8                        v_chan_mode;              /*< 20:  1> valid-flag                                         */
  U8                        chan_mode;                /*< 21:  1> Channel Mode                                       */
  U8                        v_chan_mode2;             /*< 22:  1> valid-flag                                         */
  U8                        chan_mode2;               /*< 23:  1> Mode Of  2nd Channel Set                           */
  U8                        v_chan_mode3;             /*< 24:  1> valid-flag                                         */
  U8                        chan_mode3;               /*< 25:  1> Mode Of  3rd Channel Set                           */
  U8                        v_chan_mode4;             /*< 26:  1> valid-flag                                         */
  U8                        chan_mode4;               /*< 27:  1> Mode Of  4th Channel Set                           */
  U8                        v_chan_mode5;             /*< 28:  1> valid-flag                                         */
  U8                        chan_mode5;               /*< 29:  1> Mode Of  5th Channel Set                           */
  U8                        v_chan_mode6;             /*< 30:  1> valid-flag                                         */
  U8                        chan_mode6;               /*< 31:  1> Mode Of  6th Channel Set                           */
  U8                        v_chan_mode7;             /*< 32:  1> valid-flag                                         */
  U8                        chan_mode7;               /*< 33:  1> Mode Of  7th Channel Set                           */
  U8                        v_chan_mode8;             /*< 34:  1> valid-flag                                         */
  U8                        chan_mode8;               /*< 35:  1> Mode Of  8th Channel Set                           */
} T_D_CONF_CHANGE_CMD;
#endif

#ifndef __T_D_CONF_CHANGE_ACK__
#define __T_D_CONF_CHANGE_ACK__
/*
 * 
 * CCDGEN:WriteStruct_Count==241
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_D_CONF_CHANGE_ACK;
#endif

#ifndef __T_D_CONFIG_CHANGE_REJ__
#define __T_D_CONFIG_CHANGE_REJ__
/*
 * 
 * CCDGEN:WriteStruct_Count==242
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        rr_cause;                 /*<  1:  1> RR Cause                                           */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_D_CONFIG_CHANGE_REJ;
#endif

#ifndef __T_D_EXT_MEAS_ORDER__
#define __T_D_EXT_MEAS_ORDER__
/*
 * 
 * CCDGEN:WriteStruct_Count==243
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_ext_meas_freq         ext_meas_freq;            /*<  4: 24> Extended Measurement Frequency List                */
} T_D_EXT_MEAS_ORDER;
#endif

#ifndef __T_U_EXT_MEAS_REPORT__
#define __T_U_EXT_MEAS_REPORT__
/*
 * 
 * CCDGEN:WriteStruct_Count==244
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_ext_meas_res            ext_meas_res;             /*<  4: 24> Extended Measurement Results                       */
} T_U_EXT_MEAS_REPORT;
#endif

#ifndef __T_D_FREQ_REDEF__
#define __T_D_FREQ_REDEF__
/*
 * 
 * CCDGEN:WriteStruct_Count==245
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_chan_desc               chan_desc;                /*<  4: 12> Channel Description                                */
  T_mob_alloc               mob_alloc;                /*< 16: 12> Mobile Allocation                                  */
  T_start_time              start_time;               /*< 28:  4> Starting Time                                      */
  U8                        _align3;                  /*< 32:  1> alignment                                          */
  U8                        _align4;                  /*< 33:  1> alignment                                          */
  U8                        _align5;                  /*< 34:  1> alignment                                          */
  U8                        v_cell_chan_desc;         /*< 35:  1> valid-flag                                         */
  BUF_cell_chan_desc        cell_chan_desc;           /*< 36: 24> Cell Channel Description                           */
} T_D_FREQ_REDEF;
#endif

#ifndef __T_U_GPRS_SUSP_REQ__
#define __T_U_GPRS_SUSP_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==246
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_ded_tlli              ded_tlli;                 /*<  4: 12> Temporary Logical Link Identifier                  */
  T_rout_area_id            rout_area_id;             /*< 16: 12> Routing Area Identification                        */
  U8                        susp_cause;               /*< 28:  1> Suspension Cause                                   */
  U8                        _align3;                  /*< 29:  1> alignment                                          */
  U8                        _align4;                  /*< 30:  1> alignment                                          */
  U8                        _align5;                  /*< 31:  1> alignment                                          */
} T_U_GPRS_SUSP_REQ;
#endif

#ifndef __T_D_HANDOV_CMD__
#define __T_D_HANDOV_CMD__
/*
 * 
 * CCDGEN:WriteStruct_Count==247
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_cell_desc               cell_desc;                /*<  4:  4> Cell Description                                   */
  T_chan_desc_after         chan_desc_after;          /*<  8: 12> Channel Description                                */
  U8                        handov_ref;               /*< 20:  1> Handover Reference                                 */
  U8                        _align3;                  /*< 21:  1> alignment                                          */
  U8                        _align4;                  /*< 22:  1> alignment                                          */
  U8                        _align5;                  /*< 23:  1> alignment                                          */
  T_pow_cmd_access          pow_cmd_access;           /*< 24:  4> Power Command & access type                        */
  U8                        _align6;                  /*< 28:  1> alignment                                          */
  U8                        _align7;                  /*< 29:  1> alignment                                          */
  U8                        _align8;                  /*< 30:  1> alignment                                          */
  U8                        v_synch_ind;              /*< 31:  1> valid-flag                                         */
  T_synch_ind               synch_ind;                /*< 32:  4> Synchronization Indication                         */
  U8                        _align9;                  /*< 36:  1> alignment                                          */
  U8                        _align10;                 /*< 37:  1> alignment                                          */
  U8                        _align11;                 /*< 38:  1> alignment                                          */
  U8                        v_freq_short_list_after;  /*< 39:  1> valid-flag                                         */
  BUF_freq_short_list_after freq_short_list_after;    /*< 40: 16> Frequency Short List                               */
  U8                        _align12;                 /*< 56:  1> alignment                                          */
  U8                        _align13;                 /*< 57:  1> alignment                                          */
  U8                        _align14;                 /*< 58:  1> alignment                                          */
  U8                        v_freq_list_after;        /*< 59:  1> valid-flag                                         */
  T_freq_list_after         freq_list_after;          /*< 60: 36> Frequency List                                     */
  U8                        _align15;                 /*< 96:  1> alignment                                          */
  U8                        _align16;                 /*< 97:  1> alignment                                          */
  U8                        _align17;                 /*< 98:  1> alignment                                          */
  U8                        v_cell_chan_desc;         /*< 99:  1> valid-flag                                         */
  BUF_cell_chan_desc        cell_chan_desc;           /*<100: 24> Cell Channel Description                           */
// ELEM-FF: REL99 
//   U8                        v_multislot_alloc;        /*<  0:  0> valid-flag                                         */
// //   T_multislot_alloc         multislot_alloc;          /*<  0:  0> Multislot Configuration                            */
  U8                        v_chan_mode;              /*<124:  1> valid-flag                                         */
  U8                        chan_mode;                /*<125:  1> Channel Mode                                       */
  U8                        v_chan_mode2;             /*<126:  1> valid-flag                                         */
  U8                        chan_mode2;               /*<127:  1> Mode Of  2nd Channel Set                           */
  U8                        v_chan_mode3;             /*<128:  1> valid-flag                                         */
  U8                        chan_mode3;               /*<129:  1> Mode Of  3rd Channel Set                           */
  U8                        v_chan_mode4;             /*<130:  1> valid-flag                                         */
  U8                        chan_mode4;               /*<131:  1> Mode Of  4th Channel Set                           */
  U8                        v_chan_mode5;             /*<132:  1> valid-flag                                         */
  U8                        chan_mode5;               /*<133:  1> Mode Of  5th Channel Set                           */
  U8                        v_chan_mode6;             /*<134:  1> valid-flag                                         */
  U8                        chan_mode6;               /*<135:  1> Mode Of  6th Channel Set                           */
  U8                        v_chan_mode7;             /*<136:  1> valid-flag                                         */
  U8                        chan_mode7;               /*<137:  1> Mode Of  7th Channel Set                           */
  U8                        v_chan_mode8;             /*<138:  1> valid-flag                                         */
  U8                        chan_mode8;               /*<139:  1> Mode Of  8th Channel Set                           */
  U8                        _align18;                 /*<140:  1> alignment                                          */
  U8                        _align19;                 /*<141:  1> alignment                                          */
  U8                        _align20;                 /*<142:  1> alignment                                          */
  U8                        v_chan_desc_after_2;      /*<143:  1> valid-flag                                         */
  T_chan_desc_after_2       chan_desc_after_2;        /*<144: 12> Channel Description                                */
  U8                        v_chan_mode_2;            /*<156:  1> valid-flag                                         */
  U8                        chan_mode_2;              /*<157:  1> Channel Mode 2                                     */
  U8                        _align21;                 /*<158:  1> alignment                                          */
  U8                        v_freq_chan_seq_after;    /*<159:  1> valid-flag                                         */
  T_freq_chan_seq_after     freq_chan_seq_after;      /*<160: 20> Frequency Channel Sequence                         */
  U8                        _align22;                 /*<180:  1> alignment                                          */
  U8                        _align23;                 /*<181:  1> alignment                                          */
  U8                        _align24;                 /*<182:  1> alignment                                          */
  U8                        v_mob_alloc_after;        /*<183:  1> valid-flag                                         */
  T_mob_alloc_after         mob_alloc_after;          /*<184: 12> Mobile Allocation                                  */
  U8                        _align25;                 /*<196:  1> alignment                                          */
  U8                        _align26;                 /*<197:  1> alignment                                          */
  U8                        _align27;                 /*<198:  1> alignment                                          */
  U8                        v_start_time;             /*<199:  1> valid-flag                                         */
  T_start_time              start_time;               /*<200:  4> Starting Time                                      */
  U8                        v_time_diff;              /*<204:  1> valid-flag                                         */
  U8                        time_diff;                /*<205:  1> Time Difference                                    */
  U8                        _align28;                 /*<206:  1> alignment                                          */
  U8                        v_time_advance;           /*<207:  1> valid-flag                                         */
  T_time_advance            time_advance;             /*<208:  4> Timing Advance                                     */
  U8                        _align29;                 /*<212:  1> alignment                                          */
  U8                        _align30;                 /*<213:  1> alignment                                          */
  U8                        _align31;                 /*<214:  1> alignment                                          */
  U8                        v_freq_short_list_before; /*<215:  1> valid-flag                                         */
  BUF_freq_short_list_before freq_short_list_before;  /*<216: 16> Frequency Short List                               */
  U8                        _align32;                 /*<232:  1> alignment                                          */
  U8                        _align33;                 /*<233:  1> alignment                                          */
  U8                        _align34;                 /*<234:  1> alignment                                          */
  U8                        v_freq_list_before;       /*<235:  1> valid-flag                                         */
  T_freq_list_before        freq_list_before;         /*<236: 36> Frequency List                                     */
  U8                        _align35;                 /*<272:  1> alignment                                          */
  U8                        _align36;                 /*<273:  1> alignment                                          */
  U8                        _align37;                 /*<274:  1> alignment                                          */
  U8                        v_chan_desc_before;       /*<275:  1> valid-flag                                         */
  T_chan_desc_before        chan_desc_before;         /*<276: 12> Channel Description                                */
  U8                        _align38;                 /*<288:  1> alignment                                          */
  U8                        _align39;                 /*<289:  1> alignment                                          */
  U8                        _align40;                 /*<290:  1> alignment                                          */
  U8                        v_chan_desc_before_2;     /*<291:  1> valid-flag                                         */
  T_chan_desc_before_2      chan_desc_before_2;       /*<292: 12> Channel Description                                */
  U8                        _align41;                 /*<304:  1> alignment                                          */
  U8                        _align42;                 /*<305:  1> alignment                                          */
  U8                        _align43;                 /*<306:  1> alignment                                          */
  U8                        v_freq_chan_seq_before;   /*<307:  1> valid-flag                                         */
  T_freq_chan_seq_before    freq_chan_seq_before;     /*<308: 20> Frequency Channel Sequence                         */
  U8                        _align44;                 /*<328:  1> alignment                                          */
  U8                        _align45;                 /*<329:  1> alignment                                          */
  U8                        _align46;                 /*<330:  1> alignment                                          */
  U8                        v_mob_alloc_before;       /*<331:  1> valid-flag                                         */
  T_mob_alloc_before        mob_alloc_before;         /*<332: 12> Mobile Allocation                                  */
  U8                        _align47;                 /*<344:  1> alignment                                          */
  U8                        _align48;                 /*<345:  1> alignment                                          */
  U8                        _align49;                 /*<346:  1> alignment                                          */
  U8                        v_ciph_mode_set;          /*<347:  1> valid-flag                                         */
  T_ciph_mode_set           ciph_mode_set;            /*<348:  4> Cipher Mode Setting                                */
  U8                        _align50;                 /*<352:  1> alignment                                          */
  U8                        _align51;                 /*<353:  1> alignment                                          */
  U8                        _align52;                 /*<354:  1> alignment                                          */
  U8                        v_vgcs_tmi;               /*<355:  1> valid-flag                                         */
  T_vgcs_tmi                vgcs_tmi;                 /*<356:  4> VGCS Target Mode Indication                        */
  U8                        _align53;                 /*<360:  1> alignment                                          */
  U8                        _align54;                 /*<361:  1> alignment                                          */
  U8                        _align55;                 /*<362:  1> alignment                                          */
  U8                        v_multirate_conf;         /*<363:  1> valid-flag                                         */
  T_multirate_conf          multirate_conf;           /*<364: 24> Multi Rate Configuration                           */
} T_D_HANDOV_CMD;
#endif

#ifndef __T_U_HANDOV_COMP__
#define __T_U_HANDOV_COMP__
/*
 * 
 * CCDGEN:WriteStruct_Count==248
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        rr_cause;                 /*<  1:  1> RR Cause                                           */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        v_mob_time_diff;          /*<  3:  1> valid-flag                                         */
  T_mob_time_diff           mob_time_diff;            /*<  4:  4> Mobile Time Difference                             */
} T_U_HANDOV_COMP;
#endif

#ifndef __T_U_HANDOV_FAIL__
#define __T_U_HANDOV_FAIL__
/*
 * 
 * CCDGEN:WriteStruct_Count==249
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        rr_cause;                 /*<  1:  1> RR Cause                                           */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_U_HANDOV_FAIL;
#endif

#ifndef __T_D_IMM_ASSIGN__
#define __T_D_IMM_ASSIGN__
/*
 * 
 * CCDGEN:WriteStruct_Count==250
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        tma;                      /*<  1:  1> Two-message Assignment                             */
  U8                        dl;                       /*<  2:  1> Downlink Assignment                                */
  U8                        d_t;                      /*<  3:  1> Dedicated Mode or TBF                              */
  T_page_mode               page_mode;                /*<  4:  4> Page Mode                                          */
  U8                        _align0;                  /*<  8:  1> alignment                                          */
  U8                        _align1;                  /*<  9:  1> alignment                                          */
  U8                        _align2;                  /*< 10:  1> alignment                                          */
  U8                        v_chan_desc;              /*< 11:  1> valid-flag                                         */
  T_chan_desc               chan_desc;                /*< 12: 12> Channel Description                                */
  U8                        _align3;                  /*< 24:  1> alignment                                          */
  U8                        _align4;                  /*< 25:  1> alignment                                          */
  U8                        _align5;                  /*< 26:  1> alignment                                          */
  U8                        v_pck_chan_desc;          /*< 27:  1> valid-flag                                         */
  T_pck_chan_desc           pck_chan_desc;            /*< 28: 20> Packet Channel Description                         */
  T_req_ref                 req_ref;                  /*< 48:  4> Request Reference                                  */
  T_time_advance            time_advance;             /*< 52:  4> Timing Advance                                     */
  T_mob_alloc               mob_alloc;                /*< 56: 12> Mobile Allocation                                  */
  U8                        _align6;                  /*< 68:  1> alignment                                          */
  U8                        _align7;                  /*< 69:  1> alignment                                          */
  U8                        _align8;                  /*< 70:  1> alignment                                          */
  U8                        v_start_time;             /*< 71:  1> valid-flag                                         */
  T_start_time              start_time;               /*< 72:  4> Starting Time                                      */
  T_ia_rest_oct             ia_rest_oct;              /*< 76:168> IA Rest Octets                                     */
} T_D_IMM_ASSIGN;
#endif

#ifndef __T_D_IMM_ASSIGN_EXT__
#define __T_D_IMM_ASSIGN_EXT__
/*
 * 
 * CCDGEN:WriteStruct_Count==251
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_page_mode               page_mode;                /*<  4:  4> Page Mode                                          */
  T_chan_desc               chan_desc;                /*<  8: 12> Channel Description                                */
  T_req_ref                 req_ref;                  /*< 20:  4> Request Reference                                  */
  T_time_advance            time_advance;             /*< 24:  4> Timing Advance                                     */
  T_chan_desc_2             chan_desc_2;              /*< 28: 12> Channel Description                                */
  T_req_ref_2               req_ref_2;                /*< 40:  4> Request Reference                                  */
  T_time_advance_2          time_advance_2;           /*< 44:  4> Timing Advance                                     */
  T_mob_alloc               mob_alloc;                /*< 48: 12> Mobile Allocation                                  */
  U8                        _align3;                  /*< 60:  1> alignment                                          */
  U8                        _align4;                  /*< 61:  1> alignment                                          */
  U8                        _align5;                  /*< 62:  1> alignment                                          */
  U8                        v_start_time;             /*< 63:  1> valid-flag                                         */
  T_start_time              start_time;               /*< 64:  4> Starting Time                                      */
} T_D_IMM_ASSIGN_EXT;
#endif

#ifndef __T_D_IMM_ASSIGN_REJ__
#define __T_D_IMM_ASSIGN_REJ__
/*
 * 
 * CCDGEN:WriteStruct_Count==252
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_page_mode               page_mode;                /*<  4:  4> Page Mode                                          */
  T_req_ref                 req_ref;                  /*<  8:  4> Request Reference                                  */
  U8                        t3122;                    /*< 12:  1> T 3122 Wait Indication                             */
  U8                        _align3;                  /*< 13:  1> alignment                                          */
  U8                        _align4;                  /*< 14:  1> alignment                                          */
  U8                        _align5;                  /*< 15:  1> alignment                                          */
  T_req_ref_2               req_ref_2;                /*< 16:  4> Request Reference                                  */
  U8                        t3122_2;                  /*< 20:  1> T 3122 Wait Indication                             */
  U8                        _align6;                  /*< 21:  1> alignment                                          */
  U8                        _align7;                  /*< 22:  1> alignment                                          */
  U8                        _align8;                  /*< 23:  1> alignment                                          */
  T_req_ref_3               req_ref_3;                /*< 24:  4> Request Reference                                  */
  U8                        t3122_3;                  /*< 28:  1> T 3122 Wait Indication                             */
  U8                        _align9;                  /*< 29:  1> alignment                                          */
  U8                        _align10;                 /*< 30:  1> alignment                                          */
  U8                        _align11;                 /*< 31:  1> alignment                                          */
  T_req_ref_4               req_ref_4;                /*< 32:  4> Request Reference                                  */
  U8                        t3122_4;                  /*< 36:  1> T 3122 Wait Indication                             */
// ELEM-FF: REL99 
//   T_iar_rest_oct            iar_rest_oct;             /*<  0:  0> IAR Rest Octets                                    */
// ELEM-FF: !REL99 
  U8                        _align12;                 /*< 37:  1> alignment                                          */
  U8                        _align13;                 /*< 38:  1> alignment                                          */
  U8                        _align14;                 /*< 39:  1> alignment                                          */
} T_D_IMM_ASSIGN_REJ;
#endif

#ifndef __T_U_MEAS_REP__
#define __T_U_MEAS_REP__
/*
 * 
 * CCDGEN:WriteStruct_Count==253
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_meas_result             meas_result;              /*<  4: 32> Measurement Results                                */
} T_U_MEAS_REP;
#endif

#ifndef __T_D_NOTIFY_NCH__
#define __T_D_NOTIFY_NCH__
/*
 * 
 * CCDGEN:WriteStruct_Count==254
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_nt_rest_oct             nt_rest_oct;              /*<  4:324> NT/N Rest Octets                                   */
} T_D_NOTIFY_NCH;
#endif

#ifndef __T_D_PAG_REQ_1__
#define __T_D_PAG_REQ_1__
/*
 * 
 * CCDGEN:WriteStruct_Count==255
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_page_mode               page_mode;                /*<  4:  4> Page Mode                                          */
  T_chan_needed             chan_needed;              /*<  8:  4> Channel Needed                                     */
  T_mob_ident               mob_ident;                /*< 12: 36> Mobile Identity                                    */
  U8                        _align3;                  /*< 48:  1> alignment                                          */
  U8                        _align4;                  /*< 49:  1> alignment                                          */
  U8                        _align5;                  /*< 50:  1> alignment                                          */
  U8                        v_mob_ident_2;            /*< 51:  1> valid-flag                                         */
  T_mob_ident_2             mob_ident_2;              /*< 52: 36> Mobile Identity                                    */
  T_p1_rest_oct             p1_rest_oct;              /*< 88: 92> P1 Rest Octets                                     */
} T_D_PAG_REQ_1;
#endif

#ifndef __T_D_PAG_REQ_2__
#define __T_D_PAG_REQ_2__
/*
 * 
 * CCDGEN:WriteStruct_Count==256
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_page_mode               page_mode;                /*<  4:  4> Page Mode                                          */
  T_chan_needed             chan_needed;              /*<  8:  4> Channel Needed                                     */
  BUF_tmsi_1                tmsi_1;                   /*< 12: 12> TMSI                                               */
  BUF_tmsi_2                tmsi_2;                   /*< 24: 12> TMSI                                               */
  U8                        _align3;                  /*< 36:  1> alignment                                          */
  U8                        _align4;                  /*< 37:  1> alignment                                          */
  U8                        _align5;                  /*< 38:  1> alignment                                          */
  U8                        v_mob_ident;              /*< 39:  1> valid-flag                                         */
  T_mob_ident               mob_ident;                /*< 40: 36> Mobile Identity                                    */
  T_p2_rest_oct             p2_rest_oct;              /*< 76: 24> P2 Rest Octets                                     */
} T_D_PAG_REQ_2;
#endif

#ifndef __T_D_PAG_REQ_3__
#define __T_D_PAG_REQ_3__
/*
 * 
 * CCDGEN:WriteStruct_Count==257
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_page_mode               page_mode;                /*<  4:  4> Page Mode                                          */
  T_chan_needed             chan_needed;              /*<  8:  4> Channel Needed                                     */
  BUF_tmsi_1                tmsi_1;                   /*< 12: 12> TMSI                                               */
  BUF_tmsi_2                tmsi_2;                   /*< 24: 12> TMSI                                               */
  BUF_tmsi_3                tmsi_3;                   /*< 36: 12> TMSI                                               */
  BUF_tmsi_4                tmsi_4;                   /*< 48: 12> TMSI                                               */
  T_p3_rest_oct             p3_rest_oct;              /*< 60: 32> P3 Rest Octets                                     */
} T_D_PAG_REQ_3;
#endif

#ifndef __T_U_PAG_RES__
#define __T_U_PAG_RES__
/*
 * 
 * CCDGEN:WriteStruct_Count==258
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_ciph_key_num            ciph_key_num;             /*<  4:  4> Ciphering Key Sequence Number                      */
  T_mob_class_2             mob_class_2;              /*<  8: 20> Mobile Station Classmark 2 (type defined in "m_rr_com.h") */
  T_mob_ident               mob_ident;                /*< 28: 36> Mobile Identity                                    */
} T_U_PAG_RES;
#endif

#ifndef __T_D_PART_REL__
#define __T_D_PART_REL__
/*
 * 
 * CCDGEN:WriteStruct_Count==259
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_chan_desc               chan_desc;                /*<  4: 12> Channel Description                                */
} T_D_PART_REL;
#endif

#ifndef __T_U_PART_REL_COMP__
#define __T_U_PART_REL_COMP__
/*
 * 
 * CCDGEN:WriteStruct_Count==260
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_U_PART_REL_COMP;
#endif

#ifndef __T_D_PDCH_ASS_CMD__
#define __T_D_PDCH_ASS_CMD__
/*
 * 
 * CCDGEN:WriteStruct_Count==261
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_chan_desc               chan_desc;                /*<  4: 12> Channel Description                                */
  U8                        _align3;                  /*< 16:  1> alignment                                          */
  U8                        _align4;                  /*< 17:  1> alignment                                          */
  U8                        _align5;                  /*< 18:  1> alignment                                          */
  U8                        v_cell_chan_desc;         /*< 19:  1> valid-flag                                         */
  BUF_cell_chan_desc        cell_chan_desc;           /*< 20: 24> Cell Channel Description                           */
  U8                        _align6;                  /*< 44:  1> alignment                                          */
  U8                        _align7;                  /*< 45:  1> alignment                                          */
  U8                        _align8;                  /*< 46:  1> alignment                                          */
  U8                        v_freq_list_after;        /*< 47:  1> valid-flag                                         */
  T_freq_list_after         freq_list_after;          /*< 48: 36> Frequency List                                     */
  U8                        _align9;                  /*< 84:  1> alignment                                          */
  U8                        _align10;                 /*< 85:  1> alignment                                          */
  U8                        _align11;                 /*< 86:  1> alignment                                          */
  U8                        v_mob_alloc_after;        /*< 87:  1> valid-flag                                         */
  T_mob_alloc_after         mob_alloc_after;          /*< 88: 12> Mobile Allocation                                  */
  U8                        _align12;                 /*<100:  1> alignment                                          */
  U8                        _align13;                 /*<101:  1> alignment                                          */
  U8                        _align14;                 /*<102:  1> alignment                                          */
  U8                        v_start_time;             /*<103:  1> valid-flag                                         */
  T_start_time              start_time;               /*<104:  4> Starting Time                                      */
  U8                        _align15;                 /*<108:  1> alignment                                          */
  U8                        _align16;                 /*<109:  1> alignment                                          */
  U8                        _align17;                 /*<110:  1> alignment                                          */
  U8                        v_freq_list_before;       /*<111:  1> valid-flag                                         */
  T_freq_list_before        freq_list_before;         /*<112: 36> Frequency List                                     */
  U8                        _align18;                 /*<148:  1> alignment                                          */
  U8                        _align19;                 /*<149:  1> alignment                                          */
  U8                        _align20;                 /*<150:  1> alignment                                          */
  U8                        v_chan_desc_before;       /*<151:  1> valid-flag                                         */
  T_chan_desc_before        chan_desc_before;         /*<152: 12> Channel Description                                */
  U8                        _align21;                 /*<164:  1> alignment                                          */
  U8                        _align22;                 /*<165:  1> alignment                                          */
  U8                        _align23;                 /*<166:  1> alignment                                          */
  U8                        v_freq_chan_seq;          /*<167:  1> valid-flag                                         */
  T_freq_chan_seq           freq_chan_seq;            /*<168: 20> Frequency Channel Sequence                         */
  U8                        _align24;                 /*<188:  1> alignment                                          */
  U8                        _align25;                 /*<189:  1> alignment                                          */
  U8                        _align26;                 /*<190:  1> alignment                                          */
  U8                        v_mob_alloc_before;       /*<191:  1> valid-flag                                         */
  T_mob_alloc_before        mob_alloc_before;         /*<192: 12> Mobile Allocation                                  */
  U8                        _align27;                 /*<204:  1> alignment                                          */
  U8                        _align28;                 /*<205:  1> alignment                                          */
  U8                        _align29;                 /*<206:  1> alignment                                          */
  U8                        v_pck_ul_ass;             /*<207:  1> valid-flag                                         */
  T_pck_ul_ass              pck_ul_ass;               /*<208:472> RR Packet Uplink Assignment                        */
  U8                        _align30;                 /*<680:  1> alignment                                          */
  U8                        _align31;                 /*<681:  1> alignment                                          */
  U8                        _align32;                 /*<682:  1> alignment                                          */
  U8                        v_pck_dl_ass;             /*<683:  1> valid-flag                                         */
  T_pck_dl_ass              pck_dl_ass;               /*<684: 64> RR Packet Downlink Assignment                      */
} T_D_PDCH_ASS_CMD;
#endif

#ifndef __T_D_PHYS_INFO__
#define __T_D_PHYS_INFO__
/*
 * 
 * CCDGEN:WriteStruct_Count==262
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_time_advance            time_advance;             /*<  4:  4> Timing Advance                                     */
} T_D_PHYS_INFO;
#endif

#ifndef __T_D_CHANGE_ORDER__
#define __T_D_CHANGE_ORDER__
/*
 * 
 * CCDGEN:WriteStruct_Count==263
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_cell_desc               cell_desc;                /*<  4:  4> Cell Description                                   */
  T_nc_mode                 nc_mode;                  /*<  8:  4> NC Mode For Target Cell                            */
} T_D_CHANGE_ORDER;
#endif

#ifndef __T_D_RR_INIT_REQ__
#define __T_D_RR_INIT_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==264
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_ciph_key_num            ciph_key_num;             /*<  4:  4> Ciphering Key Sequence Number                      */
  T_chan_coding             chan_coding;              /*<  8:  4> MAC Mode And Channel Coding                        */
  T_mob_class_2             mob_class_2;              /*< 12: 20> Mobile Station Classmark 2 (type defined in "m_rr_com.h") */
  BUF_ded_tlli              ded_tlli;                 /*< 32: 12> Temporary Logical Link Identifier                  */
  T_chan_req_desc           chan_req_desc;            /*< 44: 16> Channel Request Description                        */
  T_gprs_meas_res           gprs_meas_res;            /*< 60:  4> GPRS Measurement Results                           */
} T_D_RR_INIT_REQ;
#endif

#ifndef __T_B_RR_STATUS__
#define __T_B_RR_STATUS__
/*
 * 
 * CCDGEN:WriteStruct_Count==265
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        rr_cause;                 /*<  1:  1> RR Cause                                           */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_B_RR_STATUS;
#endif

#ifndef __T_D_SYS_INFO_1__
#define __T_D_SYS_INFO_1__
/*
 * 
 * CCDGEN:WriteStruct_Count==266
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_cell_chan_desc        cell_chan_desc;           /*<  4: 24> Cell Channel Description                           */
  T_rach_ctrl               rach_ctrl;                /*< 28:  8> RACH Control Parameters                            */
  T_si1_rest_oct            si1_rest_oct;             /*< 36:  4> SI 1 Rest Octets                                   */
} T_D_SYS_INFO_1;
#endif

#ifndef __T_D_SYS_INFO_2__
#define __T_D_SYS_INFO_2__
/*
 * 
 * CCDGEN:WriteStruct_Count==267
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_neigh_cell_desc       neigh_cell_desc;          /*<  4: 24> Neighbour Cells Description                        */
  U8                        ncc_permit;               /*< 28:  1> NCC Permitted                                      */
  U8                        _align3;                  /*< 29:  1> alignment                                          */
  U8                        _align4;                  /*< 30:  1> alignment                                          */
  U8                        _align5;                  /*< 31:  1> alignment                                          */
  T_rach_ctrl               rach_ctrl;                /*< 32:  8> RACH Control Parameters                            */
} T_D_SYS_INFO_2;
#endif

#ifndef __T_D_SYS_INFO_2BIS__
#define __T_D_SYS_INFO_2BIS__
/*
 * 
 * CCDGEN:WriteStruct_Count==268
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_neigh_cell_desc       neigh_cell_desc;          /*<  4: 24> Neighbour Cells Description                        */
  T_rach_ctrl               rach_ctrl;                /*< 28:  8> RACH Control Parameters                            */
} T_D_SYS_INFO_2BIS;
#endif


// MSG-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// #ifndef __T_D_SYS_INFO_2QUATER__
// #define __T_D_SYS_INFO_2QUATER__
// 
//  
// CCDGEN:WriteStruct_Count==269
// 
// typedef struct
// {
//   U8                        msg_type;                 /*<  0:  1> Message Type                                       */
//   T_si_2qua_octets          si_2qua_octets;           /*<  0:  0> SI 2quater Rest Octets                             */
//   U8                        _align0;                  /*<  1:  1> alignment                                          */
//   U8                        _align1;                  /*<  2:  1> alignment                                          */
//   U8                        _align2;                  /*<  3:  1> alignment                                          */
// } T_D_SYS_INFO_2QUATER;
// #endif
// 
#ifndef __T_D_SYS_INFO_2TER__
#define __T_D_SYS_INFO_2TER__
/*
 * 
 * CCDGEN:WriteStruct_Count==270
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_neigh_cell_desc       neigh_cell_desc;          /*<  4: 24> Neighbour Cells Description                        */
} T_D_SYS_INFO_2TER;
#endif

#ifndef __T_D_SYS_INFO_3__
#define __T_D_SYS_INFO_3__
/*
 * 
 * CCDGEN:WriteStruct_Count==271
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U16                       cell_ident;               /*<  2:  2> Cell identity                                      */
  T_loc_area_ident          loc_area_ident;           /*<  4: 12> Location Area Identification                       */
  T_ctrl_chan_desc          ctrl_chan_desc;           /*< 16:  8> Control Channel Description                        */
  T_cell_opt_bcch           cell_opt_bcch;            /*< 24:  4> Cell Options (BCCH)                                */
  T_cell_select             cell_select;              /*< 28:  8> Cell Selection Parameters                          */
  T_rach_ctrl               rach_ctrl;                /*< 36:  8> RACH Control Parameters                            */
  T_si3_rest_oct            si3_rest_oct;             /*< 44: 24> SI 3 Rest Octets                                   */
} T_D_SYS_INFO_3;
#endif

#ifndef __T_D_SYS_INFO_4__
#define __T_D_SYS_INFO_4__
/*
 * 
 * CCDGEN:WriteStruct_Count==272
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_loc_area_ident          loc_area_ident;           /*<  4: 12> Location Area Identification                       */
  T_cell_select             cell_select;              /*< 16:  8> Cell Selection Parameters                          */
  T_rach_ctrl               rach_ctrl;                /*< 24:  8> RACH Control Parameters                            */
  U8                        _align3;                  /*< 32:  1> alignment                                          */
  U8                        _align4;                  /*< 33:  1> alignment                                          */
  U8                        _align5;                  /*< 34:  1> alignment                                          */
  U8                        v_chan_desc;              /*< 35:  1> valid-flag                                         */
  T_chan_desc               chan_desc;                /*< 36: 12> Channel Description                                */
  U8                        _align6;                  /*< 48:  1> alignment                                          */
  U8                        _align7;                  /*< 49:  1> alignment                                          */
  U8                        _align8;                  /*< 50:  1> alignment                                          */
  U8                        v_mob_alloc;              /*< 51:  1> valid-flag                                         */
  T_mob_alloc               mob_alloc;                /*< 52: 12> Mobile Allocation                                  */
  T_si4_rest_oct            si4_rest_oct;             /*< 64: 60> SI 4 Rest Octets                                   */
} T_D_SYS_INFO_4;
#endif

#ifndef __T_D_SYS_INFO_5__
#define __T_D_SYS_INFO_5__
/*
 * 
 * CCDGEN:WriteStruct_Count==273
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_neigh_cell_desc       neigh_cell_desc;          /*<  4: 24> Neighbour Cells Description                        */
} T_D_SYS_INFO_5;
#endif

#ifndef __T_D_SYS_INFO_5BIS__
#define __T_D_SYS_INFO_5BIS__
/*
 * 
 * CCDGEN:WriteStruct_Count==274
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_neigh_cell_desc       neigh_cell_desc;          /*<  4: 24> Neighbour Cells Description                        */
} T_D_SYS_INFO_5BIS;
#endif

#ifndef __T_D_SYS_INFO_5TER__
#define __T_D_SYS_INFO_5TER__
/*
 * 
 * CCDGEN:WriteStruct_Count==275
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  BUF_neigh_cell_desc       neigh_cell_desc;          /*<  4: 24> Neighbour Cells Description                        */
} T_D_SYS_INFO_5TER;
#endif

#ifndef __T_D_SYS_INFO_6__
#define __T_D_SYS_INFO_6__
/*
 * 
 * CCDGEN:WriteStruct_Count==276
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U16                       cell_ident;               /*<  2:  2> Cell identity                                      */
  T_loc_area_ident          loc_area_ident;           /*<  4: 12> Location Area Identification                       */
  T_cell_opt_sacch          cell_opt_sacch;           /*< 16:  4> Cell Options (SACCH)                               */
  U8                        ncc_permit;               /*< 20:  1> NCC Permitted                                      */
  U8                        _align1;                  /*< 21:  1> alignment                                          */
  U8                        _align2;                  /*< 22:  1> alignment                                          */
  U8                        _align3;                  /*< 23:  1> alignment                                          */
  T_si6_rest_oct            si6_rest_oct;             /*< 24: 16> SI 6 Rest Octets                                   */
} T_D_SYS_INFO_6;
#endif

#ifndef __T_D_SYS_INFO_7__
#define __T_D_SYS_INFO_7__
/*
 * 
 * CCDGEN:WriteStruct_Count==277
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_si7_rest_oct            si7_rest_oct;             /*<  4: 56> SI 7 Rest Octets                                   */
} T_D_SYS_INFO_7;
#endif

#ifndef __T_D_SYS_INFO_8__
#define __T_D_SYS_INFO_8__
/*
 * 
 * CCDGEN:WriteStruct_Count==278
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_si8_rest_oct            si8_rest_oct;             /*<  4: 56> SI 8 Rest Octets                                   */
} T_D_SYS_INFO_8;
#endif

#ifndef __T_D_SYS_INFO_9__
#define __T_D_SYS_INFO_9__
/*
 * 
 * CCDGEN:WriteStruct_Count==279
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_rach_ctrl               rach_ctrl;                /*<  4:  8> RACH Control Parameters                            */
  T_si9_rest_oct            si9_rest_oct;             /*< 12:392> SI 9 Rest Octets                                   */
} T_D_SYS_INFO_9;
#endif

#ifndef __T_D_SYS_INFO_13__
#define __T_D_SYS_INFO_13__
/*
 * 
 * CCDGEN:WriteStruct_Count==280
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_si13_rest_oct           si13_rest_oct;            /*<  4:220> SI 13 Rest Octets                                  */
} T_D_SYS_INFO_13;
#endif

#ifndef __T_D_SYS_INFO_16__
#define __T_D_SYS_INFO_16__
/*
 * 
 * CCDGEN:WriteStruct_Count==281
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_si16_rest_oct           si16_rest_oct;            /*<  4: 32> SI 16 Rest Octets                                  */
} T_D_SYS_INFO_16;
#endif

#ifndef __T_D_SYS_INFO_17__
#define __T_D_SYS_INFO_17__
/*
 * 
 * CCDGEN:WriteStruct_Count==282
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_si17_rest_oct           si17_rest_oct;            /*<  4: 32> SI 17 Rest Octets                                  */
} T_D_SYS_INFO_17;
#endif

#ifndef __T_TALKER_IND__
#define __T_TALKER_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==283
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_mob_class_2             mob_class_2;              /*<  4: 20> Mobile Station Classmark 2 (type defined in "m_rr_com.h") */
  T_mob_ident               mob_ident;                /*< 24: 36> Mobile Identity                                    */
} T_TALKER_IND;
#endif

#ifndef __T_D_UPLINK_BUSY__
#define __T_D_UPLINK_BUSY__
/*
 * 
 * CCDGEN:WriteStruct_Count==284
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
} T_D_UPLINK_BUSY;
#endif

#ifndef __T_B_UPLINK_REL__
#define __T_B_UPLINK_REL__
/*
 * 
 * CCDGEN:WriteStruct_Count==285
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        rr_cause;                 /*<  1:  1> RR Cause                                           */
  U8                        _align0;                  /*<  2:  1> alignment                                          */
  U8                        _align1;                  /*<  3:  1> alignment                                          */
} T_B_UPLINK_REL;
#endif

#ifndef __T_D_VGCS_UPLINK_GRANT__
#define __T_D_VGCS_UPLINK_GRANT__
/*
 * 
 * CCDGEN:WriteStruct_Count==286
 */
typedef struct
{
  U8                        msg_type;                 /*<  0:  1> Message Type                                       */
  U8                        _align0;                  /*<  1:  1> alignment                                          */
  U8                        _align1;                  /*<  2:  1> alignment                                          */
  U8                        _align2;                  /*<  3:  1> alignment                                          */
  T_req_ref                 req_ref;                  /*<  4:  4> Request Reference                                  */
  T_time_advance            time_advance;             /*<  8:  4> Timing Advance                                     */
} T_D_VGCS_UPLINK_GRANT;
#endif


#include "CDG_LEAVE.h"


#endif
