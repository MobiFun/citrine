/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : p_dcm.h                                                        |
| SOURCE  : "sap\dcm.pdf"                                                  |
| LastModified : "2003-09-03"                                              |
| IdAndVersion : "8462.101.03.001"                                         |
| SrcFileTime  : "Thu Nov 29 09:39:32 2007"                                |
| Generated by CCDGEN_2.5.5A on Fri Oct 14 21:41:52 2016                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : NONE
 * COMPATIBILITY_DEFINES  : NO (require PREFIX)
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 */


#ifndef P_DCM_H
#define P_DCM_H


#define CDG_ENTER__P_DCM_H

#define CDG_ENTER__FILENAME _P_DCM_H
#define CDG_ENTER__P_DCM_H__FILE_TYPE CDGINC
#define CDG_ENTER__P_DCM_H__LAST_MODIFIED _2003_09_03
#define CDG_ENTER__P_DCM_H__ID_AND_VERSION _8462_101_03_001

#define CDG_ENTER__P_DCM_H__SRC_FILE_TIME _Thu_Nov_29_09_39_32_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__P_DCM_H

#undef CDG_ENTER__FILENAME


#include "p_dcm.val"

#ifndef __T_dcm_info_conn__
#define __T_dcm_info_conn__
/*
 * Connection information
 * CCDGEN:WriteStruct_Count==1178
 */
typedef struct
{
  U16                       bearer_handle;            /*<  0:  2> Bearer handle                                      */
  U16                       app_handle;               /*<  2:  2> Comm handle of application                         */
  U8                        bearer_type;              /*<  4:  1> Used bearer type                                   */
  U8                        apn_valid;                /*<  5:  1> Flag for apn validation                            */
  U8                        apn[CDCM_APN_MAX_LEN + 1]; /*<  6:101> Access Point Name                                  */
  U8                        phone_number_valid;       /*<107:  1> Flag for phone number validation                   */
  U8                        phone_number[CDCM_PHONE_NR_LEN + 1]; /*<108: 85> CSD dial up phone number                           */
  U8                        user_id_valid;            /*<193:  1> Flag for user ID validation                        */
  U8                        user_id[CDCM_USER_MAX_LEN + 1]; /*<194: 26> User ID                                            */
  U8                        password_valid;           /*<220:  1> Flag for password validation                       */
  U8                        password[CDCM_PASSWORD_MAX_LEN + 1]; /*<221: 26> Password                                           */
  U8                        _align0;                  /*<247:  1> alignment                                          */
  U16                       cid;                      /*<248:  2> GPRS context ID                                    */
  U8                        _align1;                  /*<250:  1> alignment                                          */
  U8                        _align2;                  /*<251:  1> alignment                                          */
  U32                       ip_address;               /*<252:  4> Used IP address                                    */
  U32                       dns1;                     /*<256:  4> First domain name server                           */
  U32                       dns2;                     /*<260:  4> Second domain name server                          */
  U32                       gateway;                  /*<264:  4> Gateway address                                    */
  U16                       auth_type;                /*<268:  2> Type of authentication                             */
  U8                        data_compr;               /*<270:  1> Flag for data compression                          */
  U8                        header_compr;             /*<271:  1> Flag for header compression                        */
  U16                       precedence;               /*<272:  2> GPRS precedence class                              */
  U16                       delay;                    /*<274:  2> GPRS delay class                                   */
  U16                       reliability;              /*<276:  2> GPRS reliability class                             */
  U16                       peak_throughput;          /*<278:  2> GPRS peak throughput                               */
  U16                       mean_throughput;          /*<280:  2> GPRS mean throughput                               */
  U8                        shareable;                /*<282:  1> Flag for sharing requested bearer conn             */
  U8                        _align3;                  /*<283:  1> alignment                                          */
} T_dcm_info_conn;
#endif


/*
 * End of substructure section, begin of primitive definition section
 */

#ifndef __T_DCM_OPEN_CONN_REQ__
#define __T_DCM_OPEN_CONN_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1179
 */
typedef struct
{
  U32                       api_instance;             /*<  0:  4> The api_instance value returned by sock_api_initialize(). */
  S32                       bearer_select;            /*<  4:  4> Bearer type                                        */
  U16                       profile_number;           /*<  8:  2> Profile ID for bearer selection                    */
  U8                        _align0;                  /*< 10:  1> alignment                                          */
  U8                        _align1;                  /*< 11:  1> alignment                                          */
  T_dcm_info_conn           dcm_info_conn;            /*< 12:284> Connection information                             */
} T_DCM_OPEN_CONN_REQ;
#endif

#ifndef __T_DCM_OPEN_CONN_CNF__
#define __T_DCM_OPEN_CONN_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1180
 */
typedef struct
{
  S32                       result;                   /*<  0:  4> Result of the operation                            */
  U16                       bearer_handle;            /*<  4:  2> Bearer handle                                      */
  U8                        _align0;                  /*<  6:  1> alignment                                          */
  U8                        _align1;                  /*<  7:  1> alignment                                          */
} T_DCM_OPEN_CONN_CNF;
#endif

#ifndef __T_DCM_CLOSE_CONN_REQ__
#define __T_DCM_CLOSE_CONN_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1181
 */
typedef struct
{
  U32                       api_instance;             /*<  0:  4> The api_instance value returned by sock_api_initialize(). */
  U16                       bearer_handle;            /*<  4:  2> Bearer handle                                      */
  U8                        _align0;                  /*<  6:  1> alignment                                          */
  U8                        _align1;                  /*<  7:  1> alignment                                          */
} T_DCM_CLOSE_CONN_REQ;
#endif

#ifndef __T_DCM_CLOSE_CONN_CNF__
#define __T_DCM_CLOSE_CONN_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1182
 */
typedef struct
{
  S32                       result;                   /*<  0:  4> Result of the operation                            */
} T_DCM_CLOSE_CONN_CNF;
#endif

#ifndef __T_DCM_GET_CURRENT_CONN_REQ__
#define __T_DCM_GET_CURRENT_CONN_REQ__
/*
 * 
 * CCDGEN:WriteStruct_Count==1183
 */
typedef struct
{
  U32                       api_instance;             /*<  0:  4> The api_instance value returned by sock_api_initialize(). */
  U16                       bearer_handle;            /*<  4:  2> Bearer handle                                      */
  U8                        _align0;                  /*<  6:  1> alignment                                          */
  U8                        _align1;                  /*<  7:  1> alignment                                          */
} T_DCM_GET_CURRENT_CONN_REQ;
#endif

#ifndef __T_DCM_GET_CURRENT_CONN_CNF__
#define __T_DCM_GET_CURRENT_CONN_CNF__
/*
 * 
 * CCDGEN:WriteStruct_Count==1184
 */
typedef struct
{
  S32                       result;                   /*<  0:  4> Result of the operation                            */
  T_dcm_info_conn           dcm_info_conn;            /*<  4:284> Connection information                             */
} T_DCM_GET_CURRENT_CONN_CNF;
#endif

#ifndef __T_DCM_ERROR_IND__
#define __T_DCM_ERROR_IND__
/*
 * 
 * CCDGEN:WriteStruct_Count==1185
 */
typedef struct
{
  S32                       dcm_err;                  /*<  0:  4> Error value                                        */
  S32                       result;                   /*<  4:  4> Result of the operation                            */
} T_DCM_ERROR_IND;
#endif


#include "CDG_LEAVE.h"


#endif
