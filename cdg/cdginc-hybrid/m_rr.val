/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : m_rr.val                                                       |
| SOURCE  : "msg\rr.mdf"                                                   |
| LastModified : "2002-12-19"                                              |
| IdAndVersion : "6147.604.97.114"                                         |
| SrcFileTime  : "Wed Nov 28 10:19:34 2007"                                |
| Generated by CCDGEN_2.5.5A on Fri Oct 14 21:41:52 2016                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : NONE
 * COMPATIBILITY_DEFINES  : NO (require PREFIX)
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 */


#ifndef M_RR_VAL
#define M_RR_VAL


#define CDG_ENTER__M_RR_VAL

#define CDG_ENTER__FILENAME _M_RR_VAL
#define CDG_ENTER__M_RR_VAL__FILE_TYPE CDGINC
#define CDG_ENTER__M_RR_VAL__LAST_MODIFIED _2002_12_19
#define CDG_ENTER__M_RR_VAL__ID_AND_VERSION _6147_604_97_114

#define CDG_ENTER__M_RR_VAL__SRC_FILE_TIME _Wed_Nov_28_10_19_34_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__M_RR_VAL

#undef CDG_ENTER__FILENAME

#include "m_rr_com.val"   /* Access values independent from the corresponding h-file. */


/*
 * Value constants for VAL_ab_type
 */
#define AB_8_BIT                       (0x0)      /* 8 bit access burst shall be used */
#define AB_11_BIT                      (0x1)      /* 11 bit access burst shall be used */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_acc_tt
// 
// #define ACC_TT_GSM_P                   (0x0)   /* GSM P                          */
// #define ACC_TT_GSM_E                   (0x1)   /* GSM E  --note that GSM E covers GSM P */
// #define ACC_TT_GSM_R                   (0x2)   /* GSM E  --note that GSM R covers GSM E and GSM P */
// #define ACC_TT_GSM_1800                (0x3)   /* GSM 1800                       */
// #define ACC_TT_GSM_1900                (0x4)   /* GSM 1900                       */
// #define ACC_TT_GSM_450                 (0x5)   /* GSM 450                        */
// #define ACC_TT_GSM_480                 (0x6)   /* GSM 480                        */
// #define ACC_TT_GSM_850                 (0x7)   /* GSM 850                        */
// #define ACC_TT_GSM_ADD                 (0xf)   /* Additional Access Technologies */

/*
 * Value constants for VAL_atc
 */
#define ATC_HANDOV_MAN                 (0x0)      /* Sending of Handover access is mandatory */
#define ATC_HANDOV_OPT                 (0x1)      /* Sending of Handover access is optional */

/*
 * Value constants for VAL_af
 */
#define AF_NO                          (0x0)      /* acknowledgement is not required */
#define AF_YES                         (0x1)      /* acknowledgement is required    */

/*
 * Value constants for VAL_acs
 */
#define ACS_USE_SI4                    (0x0)      /* The SI 4 rest octets, if present, shall be used to derive the value of PI and possibly C2 parameters and/or other parameters */
#define ACS_USE_SI7                    (0x1)      /* The value of PI and possibly C2 parameters and/or other parameters in a System information type 7 or type 8 message shall be used */

/*
 * Value constants for VAL_algo_ident
 */
#define VAL_ALGO_IDENT___DEF           (0x0)      /* reserved                       */
#define ALGO_A5_1                      (0x0)      /* cipher with algorithm A5/1     */
#define ALGO_A5_2                      (0x1)      /* cipher with algorithm A5/2     */
#define ALGO_A5_3                      (0x2)      /* cipher with algorithm A5/3     */
#define ALGO_A5_4                      (0x3)      /* cipher with algorithm A5/4     */
#define ALGO_A5_5                      (0x4)      /* cipher with algorithm A5/5     */
#define ALGO_A5_6                      (0x5)      /* cipher with algorithm A5/6     */
#define ALGO_A5_7                      (0x6)      /* cipher with algorithm A5/7     */

/*
 * Value constants for VAL_alpha
 */
#define VAL_ALPHA___DEF                (0x0)      /* Reserved                       */

/*
 * Value constants for VAL_att
 */
#define CCD_ATT_NO                     (0x0)      /* MSs are not allowed to apply IMSI attach and detach procedure. */
#define CCD_ATT_YES                    (0x1)      /* MSs in the cell shall apply IMSI attach and detach procedure. */

/*
 * Value constants for VAL_bcch_type
 */
#define BCCH_NORM                      (0x0)      /* on BCCH Norm                   */
#define BCCH_EXT                       (0x1)      /* on BCCH Ext.                   */

/*
 * Value constants for VAL_blp
 */
#define BLP_BLK                        (0x0)      /* The allocation bitmap is to be interpreted as blocks. */
#define BLP_PER                        (0x1)      /* The allocation bitmap is to be interpreted as block periods. */

/*
 * Value constants for VAL_pwr_ctrl_mode
 */
#define PWR_CTR_A                      (0x0)      /* mode A                         */
#define PWR_CTR_B                      (0x1)      /* mode B                         */

/*
 * Value constants for VAL_call_prio
 */
#define CALL_PRIO_NO                   (0x0)      /* no priority applied            */
#define CALL_PRIO_LEV_4                (0x1)      /* call priority level 4          */
#define CALL_PRIO_LEV_3                (0x2)      /* call priority level 3          */
#define CALL_PRIO_LEV_2                (0x3)      /* call priority level 2          */
#define CALL_PRIO_LEV_1                (0x4)      /* call priority level 1          */
#define CALL_PRIO_LEV_0                (0x5)      /* call priority level 0          */
#define CALL_PRIO_LEV_A                (0x6)      /* call priority level A          */
#define CALL_PRIO_LEV_B                (0x7)      /* call priority level B          */

/*
 * Value constants for VAL_re
 */
#define REESTAB_YES                    (0x0)      /* Call Reestablishment allowed in the cell */
#define REESTAB_NO                     (0x1)      /* Call Reestablishment not allowed in the cell */

/*
 * Value constants for VAL_cell_bar_qual
 */
#define CBQ_NO                         (0x0)      /* cell selection and reselection depending on cell bar access */
#define CBQ_YES                        (0x1)      /* cell selection priority always low, reselection always normal */

/*
 * Value constants for VAL_cell_bar_access
 */
#define BARRED_NO                      (0x0)      /* The cell is not barred         */
#define BARRED_YES                     (0x1)      /* The cell is barred             */

/*
 * Value constants for VAL_cell_resel_hyst
 */
#define CELL_HYST_0_DB                 (0x0)      /* 0 dB RXLEV hysteresis for LA re-selection */
#define CELL_HYST_2_DB                 (0x1)      /* 2 dB RXLEV hysteresis for LA re-selection */
#define CELL_HYST_4_DB                 (0x2)      /* 4 dB RXLEV hysteresis for LA re-selection */
#define CELL_HYST_6_DB                 (0x3)      /* 6 dB RXLEV hysteresis for LA re-selection */
#define CELL_HYST_8_DB                 (0x4)      /* 8 dB RXLEV hysteresis for LA re-selection */
#define CELL_HYST_10_DB                (0x5)      /* 10 dB RXLEV hysteresis for LA re-selection */
#define CELL_HYST_12_DB                (0x6)      /* 12 dB RXLEV hysteresis for LA re-selection */
#define CELL_HYST_14_DB                (0x7)      /* 14 dB RXLEV hysteresis for LA re-selection */

/*
 * Value constants for VAL_chan_type
 */
#define VAL_CHAN_TYPE___DEF            (0x0)      /* channel not defined            */
#define TCH_F                          (0x1)      /* TCH/F + ACCHs                  */
#define TCH_H_S0                       (0x2)      /* TCH/H + ACCHs, subchannel 0    */
#define TCH_H_S1                       (0x3)      /* TCH/H + ACCHs, subchannel 1    */
#define SDCCH_4_S0                     (0x4)      /* SDCCH/4 + SDCCH/C4, subchannel 0 */
#define SDCCH_4_S1                     (0x5)      /* SDCCH/4 + SDCCH/C4, subchannel 1 */
#define SDCCH_4_S2                     (0x6)      /* SDCCH/4 + SDCCH/C4, subchannel 2 or CBCH (SDCCH/4) */
#define SDCCH_4_S3                     (0x7)      /* SDCCH/4 + SDCCH/C4, subchannel 3 */
#define SDCCH_8_S0                     (0x8)      /* SDCCH/8 + SDCCH/C8, subchannel 0 */
#define SDCCH_8_S1                     (0x9)      /* SDCCH/8 + SDCCH/C8, subchannel 1 */
#define SDCCH_8_S2                     (0xa)      /* SDCCH/8 + SDCCH/C8, subchannel 2 or CBCH (SDCCH/8) */
#define SDCCH_8_S3                     (0xb)      /* SDCCH/8 + SDCCH/C8, subchannel 3 */
#define SDCCH_8_S4                     (0xc)      /* SDCCH/8 + SDCCH/C8, subchannel 4 */
#define SDCCH_8_S5                     (0xd)      /* SDCCH/8 + SDCCH/C8, subchannel 5 */
#define SDCCH_8_S6                     (0xe)      /* SDCCH/8 + SDCCH/C8, subchannel 6 */
#define SDCCH_8_S7                     (0xf)      /* SDCCH/8 + SDCCH/C8, subchannel 7 */
#define TCH_F_NO_ADD                   (0x10)     /* TCH/F + FACCH/F + SACCH/M, no additional timeslots */
#define TCH_F_ADD_BI1                  (0x11)     /* TCH/F+ACCHs, additional bidirectional TCH/F/SACCH/M on timeslot n-1 */
#define TCH_F_ADD_BI2                  (0x12)     /* TCH/F+ACCHs, additional bidirectional TCH/F/SACCH/M on timeslot n+1, n-1 */
#define TCH_F_ADD_BI3                  (0x13)     /* TCH/F+ACCHs, additional bidirectional TCH/F/SACCH/M on timeslot n+1, n-1, n-2 */
#define TCH_F_ADD_BI4                  (0x14)     /* TCH/F+ACCHs, additional bidirectional TCH/F/SACCH/M on timeslot n+1, n-1 until n-3 */
#define TCH_F_ADD_BI5                  (0x15)     /* TCH/F+ACCHs, additional bidirectional TCH/F/SACCH/M on timeslot n+1, n-1 until n-4 */
#define TCH_F_ADD_BI6                  (0x16)     /* TCH/F+ACCHs, additional bidirectional TCH/F/SACCH/M on timeslot n+1, n-1 until n-5 */
#define TCH_F_ADD_BI7                  (0x17)     /* TCH/F+ACCHs, additional bidirectional TCH/F/SACCH/M on timeslot n+1, n-1 until n-6 */
#define TCH_F_ADD_UNI1                 (0x18)     /* TCH/F+ACCHs, additional unidirectional TCH/FD/SACCH/MD on timeslot n-1 */
#define TCH_F_ADD_UNI2                 (0x19)     /* TCH/F+ACCHs, additional unidirectional TCH/FD/SACCH/MD on timeslot n+1, n-1 */
#define TCH_F_ADD_UNI3                 (0x1a)     /* TCH/F+ACCHs, additional unidirectional TCH/FD/SACCH/MD on timeslot n+1, n-1 , n-2 */
#define TCH_F_ADD_BI_UNI               (0x1e)     /* TCH/F+ACCHs, additional bidirectional TCH/F/SACCH/M and unidirectional TCH/FD/SACCH/MD on timeslot n+1, n-1 */

/*
 * Value constants for VAL_cn1
 */
#define CN_ANY_CHAN                    (0x0)      /* Any channel.                   */
#define CN_SDCCH                       (0x1)      /* SDCCH.                         */
#define CN_TCH_F                       (0x2)      /* TCH/F (Full rate).             */
#define CN_TCH                         (0x3)      /* TCH/H or TCH/F (Dual rate).    */

/*
 * Value constants for VAL_chan_mode
 */
#define VAL_CHAN_MODE___DEF            (0x0)      /* reserved mode                  */
#define CM_SIG_ONLY                    (0x0)      /* signaling only                 */
#define CM_SPEECH                      (0x1)      /* speech (full rate or half rate), version 1 */
#define CM_SPEECH_VER1                 (0x1)      /* speech (full rate or half rate), version 1 */
#define CM_SPEECH_VER2                 (0x21)     /* speech (full rate or half rate), version 2 */
#define CM_SPEECH_VER3                 (0x41)     /* speech (full rate or half rate), version 3 */
#define CM_DATA_14_5                   (0xf)      /* data, 14.5 kbit/s radio interface rate */
#define CM_DATA_12_0                   (0x3)      /* data, 12.0 kbit/s radio interface rate */
#define CM_DATA_6_0                    (0xb)      /* data, 6.0 kbit/s radio interface rate */
#define CM_DATA_3_6                    (0x13)     /* data, 3.6 kbit/s radio interface rate */

/*
 * Value constants for VAL_chan_mode_2
 */
#define VAL_CHAN_MODE_2___DEF          (0x0)      /* reserved mode                  */
#define CM2_SIG_ONLY                   (0x0)      /* signaling only                 */
#define CM2_SPEECH_HALF                (0x5)      /* speech half rate               */
#define CM2_SPEECH_VER1                (0x5)      /* speech (full rate or half rate), version 1 */
#define CM2_SPEECH_VER2                (0x25)     /* speech (full rate or half rate), version 2 */
#define CM2_SPEECH_VER3                (0x45)     /* speech (full rate or half rate), version 3 */
#define CM2_DATA_6_0                   (0xf)      /* data, 6.0 kbit/s radio interface rate */
#define CM2_DATA_3_6                   (0x17)     /* data, 3.6 kbit/s radio interface rate */

/*
 * Value constants for VAL_crd_prio
 */
#define CRD_PRIO_1                     (0x0)      /* priority level 1 (highest priority) */
#define CRD_PRIO_2                     (0x1)      /* priority level 2               */
#define CRD_PRIO_3                     (0x2)      /* priority level 3               */
#define CRD_PRIO_4                     (0x3)      /* priority level 4 (lowest priority) */

/*
 * Value constants for VAL_cr
 */
#define INC_IMEISV_NO                  (0x0)      /* IMEISV shall not be included   */
#define INC_IMEISV_YES                 (0x1)      /* IMEISV shall be included       */

/*
 * Value constants for VAL_cod_scheme
 */
#define COD_S_1                        (0x0)      
#define COD_S_2                        (0x1)      
#define COD_S_3                        (0x2)      
#define COD_S_4                        (0x3)      

/*
 * Value constants for VAL_c_r
 */
#define CMD_FRESP                      (0x0)      /* Command or Final Response      */
#define NCMD_FRESP                     (0x1)      /* Not Command or Final Response  */

/*
 * Value constants for VAL_ccch_conf
 */
#define VAL_CCCH_CONF___DEF            (0x0)      /* reserved                       */
#define CCD_CCCH_1_NOT_COMB            (0x0)      /* 1 basic channel used for CCCH, not combined with SDCCHs */
#define CCD_CCCH_1_COMB                (0x1)      /* 1 basic channel used for CCCH, combined with SDCCHs */
#define CCD_CCCH_2_NOT_COMB            (0x2)      /* 2 basic channel used for CCCH, not combined with SDCCHs */
#define CCD_CCCH_3_NOT_COMB            (0x4)      /* 3 basic channel used for CCCH, not combined with SDCCHs */
#define CCD_CCCH_4_NOT_COMB            (0x6)      /* 4 basic channel used for CCCH, not combined with SDCCHs */

/*
 * Value constants for VAL_ctrl_ack_type
 */
#define VAL_CTRL_ACK_TYPE___0          (0x0)      /* default format is four access bursts */
#define VAL_CTRL_ACK_TYPE___1          (0x1)      /* default format is RLC/MAC control block. */

/*
 * Value constants for VAL_d_t
 */
#define D_T_DED                        (0x0)      /* the message assigns a resource in dedicated mode */
#define D_T_TBF                        (0x1)      /* the message assigns a TBF      */

/*
 * Value constants for VAL_dtx_b
 */
#define VAL_DTX_B___DEF                (0x0)      /* invalid DTX indicator          */
#define B_DTX_MAY_USE                  (0x0)      /* The MSs may use uplink DTX     */
#define B_DTX_SHALL_USE                (0x1)      /* The MSs shall use uplink DTX   */
#define B_DTX_DONT_USE                 (0x2)      /* The MS shall not use uplink DTX */

/*
 * Value constants for VAL_dtx_s
 */
#define S_DTX_F_MAYUSE_H_DONTUSE       (0x0)      /* May use DTX on TCH-F. Don't use DTX on TCH-H. */
#define S_DTX_F_USE_H_DONTUSE          (0x1)      /* Do use DTX on TCH-F. Don't use DTX on TCH-H. */
#define S_DTX_F_DONTUSE_H_DONTUSE      (0x2)      /* Don't use DTX on TCH-F. Don't use DTX on TCH-H. */
#define S_DTX_F_USE_H_MAYUSE           (0x3)      /* Do use DTX on TCH-F. May use DTX on TCH-H. */
#define S_DTX_F_MAYUSE_H_MAYUSE        (0x4)      /* May use DTX on TCH-F. May use DTX on TCH-H. */
#define S_DTX_F_USE_H_USE              (0x5)      /* Do use DTX on TCH-F.    Do use DTX on TCH-H. */
#define S_DTX_F_DONTUSE_H_USE          (0x6)      /* Don't use DTX on TCH-F. Do use DTX on TCH-H. */
#define S_DTX_F_MAYUSE_H_USE           (0x7)      /* May use DTX on TCH-F. Do use DTX on TCH-H. */

/*
 * Value constants for VAL_dtx_used
 */
#define DTX_USED_NO                    (0x0)      /* DTX was not used               */
#define DTX_USED_YES                   (0x1)      /* DTX was used                   */

/*
 * Value constants for VAL_dl
 */
#define DL_0                           (0x0)      /* no meaning                     */
#define DL_1                           (0x1)      /* the message assigns a resource to the MS identified by the IA rest octets */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_e_window
// 
// #define E_WIN_64                       (0x0)   /* EGPRS Window Size 64           */
// #define E_WIN_96                       (0x1)   /* EGPRS Window Size 96           */
// #define E_WIN_128                      (0x2)   /* EGPRS Window Size 128          */
// #define E_WIN_160                      (0x3)   /* EGPRS Window Size 160          */
// #define E_WIN_192                      (0x4)   /* EGPRS Window Size 192 (maximum window size for a 1 timeslot TBF) */
// #define E_WIN_224                      (0x5)   /* EGPRS Window Size 224          */
// #define E_WIN_256                      (0x6)   /* EGPRS Window Size 256 (maximum window size for a 2 timeslot TBF) */
// #define E_WIN_288                      (0x7)   /* EGPRS Window Size 288          */
// #define E_WIN_320                      (0x8)   /* EGPRS Window Size 320          */
// #define E_WIN_352                      (0x9)   /* EGPRS Window Size 352          */
// #define E_WIN_384                      (0xa)   /* EGPRS Window Size 384 (maximum window size for a 3 timeslot TBF) */
// #define E_WIN_416                      (0xb)   /* EGPRS Window Size 416          */
// #define E_WIN_448                      (0xc)   /* EGPRS Window Size 448          */
// #define E_WIN_480                      (0xd)   /* EGPRS Window Size 480          */
// #define E_WIN_512                      (0xe)   /* EGPRS Window Size 512 (maximum window size for a 4 timeslot TBF) */
// #define E_WIN_544                      (0xf)   /* EGPRS Window Size 544          */
// #define E_WIN_576                      (0x10)  /* EGPRS Window Size 576          */
// #define E_WIN_608                      (0x11)  /* EGPRS Window Size 608          */
// #define E_WIN_640                      (0x12)  /* EGPRS Window Size 640 (maximum window size for a 5 timeslot TBF) */
// #define E_WIN_672                      (0x13)  /* EGPRS Window Size 672          */
// #define E_WIN_704                      (0x14)  /* EGPRS Window Size 704          */
// #define E_WIN_736                      (0x15)  /* EGPRS Window Size 736          */
// #define E_WIN_768                      (0x16)  /* EGPRS Window Size 768 (maximum window size for a 6 timeslot TBF) */
// #define E_WIN_800                      (0x17)  /* EGPRS Window Size 800          */
// #define E_WIN_832                      (0x18)  /* EGPRS Window Size 832          */
// #define E_WIN_864                      (0x19)  /* EGPRS Window Size 864          */
// #define E_WIN_896                      (0x1a)  /* EGPRS Window Size 896 (maximum window size for a 7 timeslot TBF) */
// #define E_WIN_928                      (0x1b)  /* EGPRS Window Size 928          */
// #define E_WIN_960                      (0x1c)  /* EGPRS Window Size 960          */
// #define E_WIN_992                      (0x1d)  /* EGPRS Window Size 992          */
// #define E_WIN_1024                     (0x1e)  /* EGPRS Window Size 1024  (maximum window size for a 8 timeslot TBF) */
// #define VAL_E_WINDOW___1F              (0x1f)  /* reserved                       */

/*
 * Value constants for VAL_ext_dyn_all
 */
#define EXT_DYN_NO                     (0x0)      /* Dynamic Allocation             */
#define EXT_DYN_YES                    (0x1)      /* Extended Dynamic Allocation    */

/*
 * Value constants for VAL_final
 */
#define FINAL_NO                       (0x0)      /* allocation is not the last Allocation of TBF */
#define FINAL_YES                      (0x1)      /* allocation is the last Allocation of TBF */

/*
 * Value constants for VAL_f_seg
 */
#define F_SEG                          (0x0)      /* First or only segment          */
#define NF_SEG                         (0x1)      /* Not first or only segment      */

/*
 * Value constants for VAL_flag
 */
#define PRES_NO                        (0x0)      /* information is not present     */
#define PRES_YES                       (0x1)      /* information is present         */

/*
 * Value constants for VAL_hdm
 */
#define HDM_NO                         (0x0)      /* The mobile station shall not  operate in half duplex mode. */
#define HDM_YES                        (0x1)      /* The mobile station shall operate in half duplex mode. */

/*
 * Value constants for VAL_hop
 */
#define HOP_NO                         (0x0)      /* frequency hopping is off       */
#define HOP_YES                        (0x1)      /* frequency hopping is on        */

/*
 * Value constants for VAL_inband_not
 */
#define IN_BAND_NOT_NCH                (0x0)      /* notifications are sent on NCH only */
#define IN_BAND_NOT_FACCH              (0x1)      /* notifications are sent on FACCH too */

/*
 * Value constants for VAL_inband_pag
 */
#define IN_BAND_PAG_PCH                (0x0)      /* pagings are sent on PCH only   */
#define IN_BAND_PAG_FACCH              (0x1)      /* pagings are sent on FACCH too  */

/*
 * Value constants for VAL_indir
 */
#define INDIR_NO                       (0x0)      /* non hopping configuration      */
#define INDIR_YES                      (0x1)      /* indirect encoding of hopping RF channel configuration */

/*
 * Value constants for VAL_it5
 */
#define IT5_1                          (0x0)      /* System Information Type 1      */
#define IT5_2                          (0x1)      /* System Information Type 2      */
#define IT5_2BIS                       (0x2)      /* System Information Type 2bis   */
#define IT5_2TER                       (0x3)      /* System Information Type 2ter   */
#define IT5_3                          (0x4)      /* System Information Type 3      */
#define IT5_4                          (0x5)      /* System Information Type 4      */
#define IT5_7                          (0x6)      /* System Information Type 7      */
#define IT5_8                          (0x7)      /* System Information Type 8      */
#define IT5_9                          (0x8)      /* System Information Type 9      */
#define IT5_13                         (0x9)      /* System Information Type 13     */
#define IT5_14                         (0xa)      /* System Information Type 14     */

/*
 * Value constants for VAL_icmi
 */
#define ICMI_IMPL                      (0x0)      /* initial codec mode defined by implicit rule provided in GSM 05.09 */
#define ICMI_START_MODE                (0x1)      /* initial codec mode defined by start mode field */

/*
 * Value constants for VAL_key_seq
 */
#define VAL_KEY_SEQ___7                (0x7)      /* No key is available (MS to network); Reserved (network to MS) */

/*
 * Value constants for VAL_l_seg
 */
#define L_SEG                          (0x0)      /* Last or only segment           */
#define NL_SEG                         (0x1)      /* Not last or only segment       */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_lqm_mode
// 
// #define LQM_NOTHING                    (0x0)   /* The MS shall not report either interference measurements or per slot BEP measurements */
// #define LQM_GAMMA                      (0x1)   /* The MS shall report available interference measurements */
// #define LQM_BEP                        (0x2)   /* The MS shall report mean BEP on each allocated time slot */
// #define LQM_ALTERNATE                  (0x3)   /* The MS shall report mean BEP on each allocated time slot alternating slots 1-3 and 4-7 */

/*
 * Value constants for VAL_llc_fr_type
 */
#define LLC_IS_ACK                     (0x0)      /* LLC frame is SACK or NACK      */
#define LLC_NOT_ACK                    (0x1)      /* LLC frame is not SACK or NACK  */

/*
 * Value constants for VAL_low_arfcn
 */
#define VAL_LOW_ARFCN___DEF            (0x0)      /* reserved                       */

/*
 * Value constants for VAL_mac_mode
 */
#define MAC_DYN_ALLOC                  (0x0)      /* dynamic allocation             */
#define MAC_EXT_DYN_ALLOC              (0x1)      /* extended dynamic allocation    */
#define MAC_FIX_ALLOC_NOT_HALF         (0x2)      /* fixed allocation, not half duplex mode */
#define MAC_FIX_ALLOC                  (0x3)      /* fixed allocation, half duplex mode */

/*
 * Value constants for VAL_ma_num
 */
#define MA_NUM_14                      (0x0)      /* MA_NUMBER = 14                 */
#define MA_NUM_15                      (0x1)      /* MA_NUMBER = 15                 */

/*
 * Value constants for VAL_max_retrans
 */
#define MAX_RETRANS_1                  (0x0)      /* Maximum 1 retransmission       */
#define MAX_RETRANS_2                  (0x1)      /* Maximum 2 retransmissions      */
#define MAX_RETRANS_4                  (0x2)      /* Maximum 4 retransmissions      */
#define MAX_RETRANS_7                  (0x3)      /* Maximum 7 retransmissions      */

/*
 * Value constants for VAL_meas_valid
 */
#define MEAS_VALID_YES                 (0x0)      /* The measurement results are valid */
#define MEAS_VALID_NO                  (0x1)      /* the measurement results are not valid */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_mcs
// 
// #define MCS1                           (0x0)   /* MCS-1                          */
// #define MCS2                           (0x1)   /* MCS-2                          */
// #define MCS3                           (0x2)   /* MCS-3                          */
// #define MCS4                           (0x3)   /* MCS-4                          */
// #define MCS5                           (0x4)   /* MCS-5                          */
// #define MCS6                           (0x5)   /* MCS-6                          */
// #define MCS7                           (0x6)   /* MCS-7                          */
// #define MCS8                           (0x7)   /* MCS-8                          */
// #define MCS9                           (0x8)   /* MCS-9                          */
// #define MCS5_7                         (0x9)   /* MCS-5-7                        */
// #define MCS6_9                         (0xa)   /* MCS-6-9                        */

/*
 * Value constants for VAL_mscr
 */
#define MSCR_98                        (0x0)      /* MSC is Release '98 or older    */
#define MSCR_99                        (0x1)      /* MSC is Release '99 onwards     */

/*
 * Value constants for VAL_or_ty
 */
#define OR_TY_MT                       (0x0)      /* Mobile terminated              */
#define OR_TY_MO                       (0x1)      /* Mobile originated              */

/*
 * Value constants for VAL_mr_vers
 */
#define VAL_MR_VERS___DEF              (0x0)      /* reserved                       */
#define MR_VERS_1                      (0x1)      /* Adaptive Multirate speech version 1 */

/*
 * Value constants for VAL_ncm
 */
#define NC_0                           (0x0)      
#define NC_1                           (0x1)      
#define NC_2                           (0x2)      
#define NC_TARGET                      (0x3)      /* information on NC mode to be gathered from the target cell */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// 
// Value constants for VAL_nc_non_drx
// 
// #define NC_NO_DRX                      (0x0)   /* No non-DRX mode after a measurement report has been sent. */
// #define NC_0_24S                       (0x1)   /* NC 0.24 s                      */
// #define NC_0_48S                       (0x2)   /* NC 0.48 s (default value)      */
// #define NC_0_72S                       (0x3)   /* NC 0.72 s                      */
// #define NC_0_96S                       (0x4)   /* NC 0.96 s                      */
// #define NC_1_20S                       (0x5)   /* NC 1.20 s                      */
// #define NC_1_44S                       (0x6)   /* NC 1.44 s                      */
// #define NC_1_92S                       (0x7)   /* NC 1.92 s                      */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// 
// Value constants for VAL_nc_rep_i
// 
// #define NC_I_0_48S                     (0x0)   /* NC 0.48 S                      */
// #define NC_I_0_96S                     (0x1)   /* NC 0.96 s                      */
// #define NC_I_1_92S                     (0x2)   /* NC 1.92 s                      */
// #define NC_I_3_84S                     (0x3)   /* NC 3.84 s (default value for NC_REPORTING_PERIOD_T) */
// #define NC_I_7_68S                     (0x4)   /* NC 7.68 s                      */
// #define NC_I_15_36S                    (0x5)   /* NC 15.36 s                     */
// #define NC_I_30_72S                    (0x6)   /* NC 30.72 s                     */
// #define NC_I_61_44S                    (0x7)   /* NC 61.44 s (default value for NC_REPORTING_PERIOD_I) */

/*
 * Value constants for VAL_nch_position
 */
#define VAL_NCH_POSITION___DEF         (0x0)      /* reserved                       */
#define NCH_1BLK_NR0                   (0x0)      /* 1 block / first is block 0     */
#define NCH_1BLK_NR1                   (0x1)      /* 1 block / first is block 1     */
#define NCH_1BLK_NR2                   (0x2)      /* 1 block / first is block 2     */
#define NCH_1BLK_NR3                   (0x3)      /* 1 block / first is block 3     */
#define NCH_1BLK_NR4                   (0x4)      /* 1 block / first is block 4     */
#define NCH_1BLK_NR5                   (0x5)      /* 1 block / first is block 5     */
#define NCH_1BLK_NR6                   (0x6)      /* 1 block / first is block 6     */
#define NCH_2BLK_NR0                   (0x7)      /* 2 blocks / first is block 0    */
#define NCH_2BLK_NR1                   (0x8)      /* 2 blocks / first is block 1    */
#define NCH_2BLK_NR2                   (0x9)      /* 2 blocks / first is block 2    */
#define NCH_2BLK_NR3                   (0xa)      /* 2 blocks / first is block 3    */
#define NCH_2BLK_NR4                   (0xb)      /* 2 blocks / first is block 4    */
#define NCH_2BLK_NR5                   (0xc)      /* 2 blocks / first is block 5    */
#define NCH_3BLK_NR0                   (0xd)      /* 3 blocks / first is block 0    */
#define NCH_3BLK_NR1                   (0xe)      /* 3 blocks / first is block 1    */
#define NCH_3BLK_NR2                   (0xf)      /* 3 blocks / first is block 2    */
#define NCH_3BLK_NR3                   (0x10)     /* 3 blocks / first is block 3    */
#define NCH_3BLK_NR4                   (0x11)     /* 3 blocks / first is block 4    */
#define NCH_4BLK_NR0                   (0x12)     /* 4 blocks / first is block 0    */
#define NCH_4BLK_NR1                   (0x13)     /* 4 blocks / first is block 1    */
#define NCH_4BLK_NR2                   (0x14)     /* 4 blocks / first is block 2    */
#define NCH_4BLK_NR3                   (0x15)     /* 4 blocks / first is block 3    */
#define NCH_5BLK_NR0                   (0x16)     /* 5 blocks / first is block 0    */
#define NCH_5BLK_NR1                   (0x17)     /* 5 blocks / first is block 1    */
#define NCH_5BLK_NR2                   (0x18)     /* 5 blocks / first is block 2    */
#define NCH_6BLK_NR0                   (0x19)     /* 6 blocks / first is block 0    */
#define NCH_6BLK_NR1                   (0x1a)     /* 6 blocks / first is block 1    */
#define NCH_7BLK_NR0                   (0x1b)     /* 7 blocks / first is block 0    */

/*
 * Value constants for VAL_neci
 */
#define NECI_NO                        (0x0)      /* New establishment causes are not supported */
#define NECI_YES                       (0x1)      /* New establishment causes are supported */

/*
 * Value constants for VAL_nco
 */
#define VAL_NCO___DEF                  (0x0)      /* reserved                       */
#define NCO_NO_REP                     (0x0)      /* MS controlled cell reselection, no measurement reporting */
#define NCO_MS_RESEL                   (0x1)      /* MS controlled cell reselection, MA sends measurement reports */
#define NCO_NET_RESEL                  (0x2)      /* Network controlled cell reselection, MA sends measurement reports */

/*
 * Value constants for VAL_nmo
 */
#define VAL_NMO___0                    (0x0)      /* Network Mode 1                 */
#define VAL_NMO___1                    (0x1)      /* Network Mode 2                 */
#define VAL_NMO___2                    (0x2)      /* Network Mode 3                 */
#define VAL_NMO___3                    (0x3)      /* reserved                       */

/*
 * Value constants for VAL_nscb
 */
#define NSCB_ON                        (0x0)      /* NSCB can be used (default)     */
#define NSCB_OFF                       (0x1)      /* NSCB shall be turned off       */

/*
 * Value constants for VAL_nci
 */
#define NCI_IGNORE                     (0x0)      /* Out of range timing advance is ignored */
#define NCI_TRIGGER                    (0x1)      /* Out of range timing advance shall trigger a handover failure */

/*
 * Value constants for VAL_num_range
 */
#define VAL_NUM_RANGE___DEF            (0x0)      /* reserved                       */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_nr_rb
// 
// #define NR_RB_1                        (0x0)   /* 1 radio block reserved for uplink transmission */
// #define NR_RB_2                        (0x1)   /* 2 radio blocks reserved for uplink transmission */

/*
 * Value constants for VAL_odd_even
 */
#define EVEN                           (0x0)      /* even                           */
#define ODD                            (0x1)      /* odd                            */

/*
 * Value constants for VAL_pck_chan_type
 */
#define VAL_PCK_CHAN_TYPE___DEF        (0x0)      /* reserved                       */
#define PCK_CH_1                       (0x1)      /* for backward compatibility     */

/*
 * Value constants for VAL_pch_restruct
 */
#define PCH_RESTRUCT_NO                (0x0)      /* paging channel is restructured */
#define PCH_RESTRUCT_YES               (0x1)      /* paging channel is not restructured */

/*
 * Value constants for VAL_pm
 */
#define PAGING_NORM                    (0x0)      /* Normal paging.                 */
#define PAGING_EXT                     (0x1)      /* Extended paging.               */
#define PAGING_REORG                   (0x2)      /* Paging reorganization.         */
#define PAGING_SAME                    (0x3)      /* Same as before.                */

/*
 * Value constants for VAL_pc_meas_chan
 */
#define PC_MEAS_BCCH                   (0x0)      /* BCCH shall be used for downlink measurements for power control */
#define PC_MEAS_PDCH                   (0x1)      /* PDCH shall be used for downlink measurements for power control */

/*
 * Value constants for VAL_poll
 */
#define POLL_NO_ACTION                 (0x0)      /* no action required from MS     */
#define POLL_SEND_ACK                  (0x1)      /* MS shall send a PACKET CONTROL ACKNOWLEDGEMENT */

/*
 * Value constants for VAL_pow_ctrl
 */
#define POW_CTRL_NO                    (0x0)      /* PWRC is not set                */
#define POW_CTRL_YES                   (0x1)      /* PWRC is set                    */

/*
 * Value constants for VAL_pow_offs
 */
#define POW_OFFS_0_DB                  (0x0)      /* offset 0 dB                    */
#define POW_OFFS_2_DB                  (0x1)      /* offset 2 dB                    */
#define POW_OFFS_4_DB                  (0x2)      /* offset 4 dB                    */
#define POW_OFFS_6_DB                  (0x3)      /* offset 6 dB                    */

/*
 * Value constants for VAL_prio_acc_thr
 */
#define PAT_NO                         (0x0)      /* Packet access not allowed in the cell */
#define PAT_SPARE1                     (0x1)      /* Spare, shall be interpreted as 0 */
#define PAT_SPARE2                     (0x2)      /* Spare, shall be interpreted as 0 */
#define PAT_ACC1                       (0x3)      /* packet access allowed for priority level 1 */
#define PAT_ACC2                       (0x4)      /* packet access allowed for priority level 1 to 2 */
#define PAT_ACC3                       (0x5)      /* packet access allowed for priority level 1 to 3 */
#define PAT_ACC4                       (0x6)      /* packet access allowed for priority level 1 to 4 */
#define PAT_SPARE6                     (0x7)      /* Spare, shall be interpreted as 6 */

/*
 * Value constants for VAL_protoc_ident
 */
#define VAL_PROTOC_IDENT___DEF         (0x0)      /* reserved                       */
#define RRLP_LCS                       (0x0)      /* Radio Resource Location Service Protocol */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// 
// Value constants for VAL_reporting_rate
// 
// #define NORMAL_RATE                    (0x0)   /* Normal reporting rate          */
// #define REDUCED_RATE                   (0x1)   /* Reduced reporting rate         */

/*
 * Value constants for VAL_rot
 */
#define TIME_DIFF_NO                   (0x0)      /* Mobile Time Difference IE shall not be included in the HANDOVER COMPLETE message */
#define TIME_DIFF_YES                  (0x1)      /* Mobile Time Difference IE shall be included in the HANDOVER COMPLETE message */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// 
// Value constants for VAL_report_type
// 
// #define ENHANCED_MEAS                  (0x0)   /* The MS shall use the Enhanced Measurement Report message for reporting if at least one BSIC is allocated to each BA (list) frequency. Otherwise, the Measurement Report message shall be used. */
// #define NORMAL_MEAS                    (0x1)   /* The MS shall use the Measurement Report message for reporting. */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_resegm
// 
// #define RESEGM_NO                      (0x0)   /* Retransmitted RLC data blocks shall not be re-segmented */
// #define RESEGM_YES                     (0x1)   /* Retransmitted RLC data blocks shall be re-segmented according to commanded MCS */

/*
 * Value constants for VAL_res_ack
 */
#define RES_ACK_NO                     (0x0)      /* resumption of GPRS services not successfully acknowledged */
#define RES_ACK_YES                    (0x1)      /* resumption of GPRS services successfully acknowledged */

/*
 * Value constants for VAL_rlc_mode
 */
#define RLC_ACK_MODE                   (0x0)      /* RLC acknowledged mode          */
#define RLC_UNACK_MODE                 (0x1)      /* RLC unacknowledged mode        */

/*
 * Value constants for VAL_rr_cause
 */
#define RRC_NORMAL_EVENT               (0x0)      /* Normal event                   */
#define RRC_UNSPECIFIED                (0x1)      /* Abnormal release, unspecified  */
#define RRC_CHAN_UNACCEPT              (0x2)      /* Abnormal release, channel unacceptable */
#define RRC_TIMER_EXPIRED              (0x3)      /* Abnormal release, timer expired */
#define RRC_NO_ACTIVITY                (0x4)      /* Abnormal release, no activity on the radio path */
#define RRC_PREEMEPT                   (0x5)      /* Preemptive release             */
#define RRC_TIME_ADVANCE               (0x8)      /* Handover impossible, timing advance out of range */
#define RRC_CHANNEL_MODE               (0x9)      /* Channel mode unacceptable      */
#define RRC_FREQ_NOT_IMPL              (0xa)      /* Frequency not implemented      */
// VAL-FF: REL99 AND FF_BHO  
// #define RRC_LOWER_LAYER_FAIL           (0xc)   /* Lower layer failure            */
#define RRC_CALL_CLEARED               (0x41)     /* Call already cleared           */
#define RRC_INCORRECT_MSG              (0x5f)     /* Semantically incorrect message */
#define RRC_INVALID_MAN_INFO           (0x60)     /* Invalid mandatory information  */
#define RRC_MSG_NOT_IMPL               (0x61)     /* Message type non-existent or not implemented */
#define RRC_MSG_NOT_COMPAT             (0x62)     /* Message type not compatible with protocol state */
#define RRC_COND_IE_ERROR              (0x64)     /* Conditional IE error           */
#define RRC_NO_CELL_ALLOC              (0x65)     /* No cell allocation available   */
#define RRC_PROT_UNSPECIFIED           (0x6f)     /* Protocol error unspecified     */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// 
// Value constants for VAL_scale_ord
// 
// #define SC_ORD_ZERO_DB                 (0x0)   /* 0 dB offset, which shall be used for the reported RXLEV values */
// #define SC_ORD_TEN_DB                  (0x1)   /* +10 dB offset, which shall be used for the reported RXLEV values */
// #define SC_ORD_AUTOMATIC               (0x2)   /* automatic offset, which shall be used for the reported RXLEV values */

/*
 * Value constants for VAL_sf
 */
#define SF_VBS                         (0x0)      /* broadcast call reference       */
#define SF_VGCS                        (0x1)      /* group call reference           */

/*
 * Value constants for VAL_set_amr
 */
#define SET_AMR_12_2                   (0x80)     /* codec 12.2 kbit/s is part of subset */
#define SET_AMR_10_2                   (0x40)     /* codec 10.2 kbit/s is part of subset */
#define SET_AMR_7_95                   (0x20)     /* codec 7.95 kbit/s is part of subset */
#define SET_AMR_7_4                    (0x10)     /* codec 7.4 kbit/s is part of subset */
#define SET_AMR_6_7                    (0x8)      /* codec 6.7 kbit/s is part of subset */
#define SET_AMR_5_9                    (0x4)      /* codec 5.9 kbit/s is part of subset */
#define SET_AMR_5_15                   (0x2)      /* codec 5.15 kbit/s is part of subset */
#define SET_AMR_4_75                   (0x1)      /* codec 4 .75 kbit/s is part of subset */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_sgsnr
// 
// #define SGSNR_98                       (0x0)   /* SGSN is Release '98 or older   */
// #define SGSNR_99                       (0x1)   /* SGSN is Release '99 onwards    */

/*
 * Value constants for VAL_si13_pos
 */
#define SI13_ON_BCCH_NORM              (0x0)      /* on BCCH Norm                   */
#define SI13_ON_BCCH_EXT               (0x1)      /* on BCCH Ext.                   */

/*
 * Value constants for VAL_si_cf
 */
#define VAL_SI_CF___DEF                (0x0)      /* Update of unknown SI message type */
#define SI_CF_UNSPEC                   (0x0)      /* Update of unspecified SI message(s) */
#define SI_CF_1                        (0x1)      /* Update of SI1 message          */
#define SI_CF_2X                       (0x2)      /* Update of SI2, SI2bis or SI2ter message */
#define SI_CF_3UNTIL8                  (0x3)      /* Update of SI3, SI4, SI7 or SI8 message */
#define SI_CF_9                        (0x4)      /* Update of SI9 message          */

/*
 * Value constants for VAL_solsa_exc_acc
 */
#define SOLSA_EXCLUSIVE_NO             (0x0)      
#define SOLSA_EXCLUSIVE_YES            (0x1)      

/*
 * Value constants for VAL_spgc
 */
#define SPGC_NO                        (0x0)      /* SPLIT_PG_CYCLE is not supported on CCCH in this cell */
#define SPGC_YES                       (0x1)      /* SPLIT_PG_CYCLE is supported on CCCH in this cell */

/*
 * Value constants for VAL_sc
 */
#define START_CIPH_NO                  (0x0)      /* No ciphering                   */
#define START_CIPH_YES                 (0x1)      /* Start ciphering                */

/*
 * Value constants for VAL_st_mode
 */
#define CODEC_MODE_1                   (0x0)      /* lowest bit rate                */
#define CODEC_MODE_2                   (0x1)      /* second lowest rate if codec includes more then 1 mode */
#define CODEC_MODE_3                   (0x2)      /* third lowest rate if codec includes more then 2 modes */
#define CODEC_MODE_4                   (0x3)      /* highest mode if codec includes 4 modes */

/*
 * Value constants for VAL_susp_cause
 */
#define VAL_SUSP_CAUSE___DEF           (0x0)      /* shall be treated as 0          */
#define SUSP_C_CALL                    (0x0)      /* Mobile originated or mobile terminated call */
#define SUSP_C_LU                      (0x1)      /* Location Update                */
#define SUSP_C_SMS                     (0x2)      /* Short message service          */
#define SUSP_C_SS                      (0x3)      /* Supplementary service activation */
#define SUSP_C_VBS                     (0x4)      /* Voice broadcast or group call  */
#define SUSP_C_MT_CALL                 (0x5)      /* Mobile terminated call         */
#define SUSP_C_DTM                     (0x6)      /* DTM not supported              */

/*
 * Value constants for VAL_si
 */
#define SYI_NON_SYNCH                  (0x0)      /* Non-synchronized               */
#define SYI_NORM_SYNCH                 (0x1)      /* Synchronized                   */
#define SYI_PRE_SYNCH                  (0x2)      /* Pre-synchronised               */
#define SYI_PSEUDO_SYNCH               (0x3)      /* Pseudo-synchronised            */

/*
 * Value constants for VAL_tm
 */
#define VAL_TM___DEF                   (0x0)      /* reserved                       */
#define TM_DED                         (0x0)      /* dedicated mode                 */
#define TM_GROUP                       (0x1)      /* group transmit mode            */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
// 
// Value constants for VAL_threeg_prio
// 
// #define NO_SEACH                       (0x0)   /* Seach not allowed              */
// #define YES_SEACH                      (0x1)   /* Seach allowed                  */

/*
 * Value constants for VAL_ta_valid
 */
#define TA_VALID_NO                    (0x0)      /* the value is not valid         */
#define TA_VALID_YES                   (0x1)      /* the value is valid             */

/*
 * Value constants for VAL_tlli_bcc
 */
#define TLLI_BCC1                      (0x0)      /* mobile station shall use CS-1  */
#define TLLI_BCC_CODED                 (0x1)      /* mobile station shall use CS specified by Channel Coding */

/*
 * Value constants for VAL_tma
 */
#define TMA_0                          (0x0)      /* no meaning                     */
#define TMA_1                          (0x1)      /* the message is the first of two in a two message assignment */

/*
 * Value constants for VAL_tx_integer
 */
#define SPREAD_TRANS_3                 (0x0)      /* 3 slots used to spread transmission */
#define SPREAD_TRANS_4                 (0x1)      /* 4 slots used to spread transmission */
#define SPREAD_TRANS_5                 (0x2)      /* 5 slots used to spread transmission */
#define SPREAD_TRANS_6                 (0x3)      /* 6 slots used to spread transmission */
#define SPREAD_TRANS_7                 (0x4)      /* 7 slots used to spread transmission */
#define SPREAD_TRANS_8                 (0x5)      /* 8 slots used to spread transmission */
#define SPREAD_TRANS_9                 (0x6)      /* 9 slots used to spread transmission */
#define SPREAD_TRANS_10                (0x7)      /* 10 slots used to spread transmission */
#define SPREAD_TRANS_11                (0x8)      /* 11 slots used to spread transmission */
#define SPREAD_TRANS_12                (0x9)      /* 12 slots used to spread transmission */
#define SPREAD_TRANS_14                (0xa)      /* 14slots used to spread transmission */
#define SPREAD_TRANS_16                (0xb)      /* 16 slots used to spread transmission */
#define SPREAD_TRANS_20                (0xc)      /* 20 slots used to spread transmission */
#define SPREAD_TRANS_25                (0xd)      /* 25 slots used to spread transmission */
#define SPREAD_TRANS_32                (0xe)      /* 32 slots used to spread transmission */
#define SPREAD_TRANS_50                (0xf)      /* 50 slots used to spread transmission */

/*
 * Value constants for VAL_ident_type
 */
#define VAL_IDENT_TYPE___DEF           (0x0)      /* reserved                       */
#define ID_TYPE_NO_IDENT               (0x0)      /* No Identity                    */
#define ID_TYPE_IMSI                   (0x1)      /* IMSI                           */
#define ID_TYPE_IMEI                   (0x2)      /* IMEI                           */
#define ID_TYPE_IMEISV                 (0x3)      /* IMEISV                         */
#define ID_TYPE_TMSI                   (0x4)      /* TMSI                           */

/*
 * Value constants for VAL_usf_gran
 */
#define USF_GRAN1                      (0x0)      /* the mobile shall send one RLC/MAC block */
#define USF_GRAN4                      (0x1)      /* the mobile shall send four consecutive RLC/MAC blocks */

/*
 * Value constants for VAL_break_ind
 */
#define BREAK_IND_NO                   (0x0)      /* Additional parameters are not sent in SYSTEM INFORMATION TYPE 7 and 8 */
#define BREAK_IND_YES                  (0x1)      /* Additional parameters SI4 Rest Octets_S are sent in SYSTEM INFORMATION TYPE 7 and 8 */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_class_req
// 
// #define CLASS_CHANGE_REQ               (0x0)   /* the mobile shall send CLASSMARK CHANGE message */
// #define CLASS_CHANGE_NOTREQ            (0x1)   /* the mobile shall not send CLASSMARK CHANGE message */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_utran_class_req
// 
// #define UTRAN_CLASS_CHANGE_REQ         (0x0)   /* the mobile shall send CDMA2000 CLASSMARK CHANGE message */
// #define UTRAN_CLASS_CHANGE_NOTREQ      (0x7)   /* the mobile shall not send CDMA2000 CLASSMARK CHANGE message */

// VALTAB-FF: REL99 
// 
// Value constants for VAL_cdma_class_req
// 
// #define CDMA_CLASS_CHANGE_REQ          (0x0)   /* the mobile shall send CDMA2000 CLASSMARK CHANGE message */
// #define CDMA_CLASS_CHANGE_NOTREQ       (0x1)   /* the mobile shall not send CDMA2000 CLASSMARK CHANGE message */

// VALTAB-FF: TI_PS_FF_QUAD_BAND_SUPPORT 
// 
// Value constants for VAL_band_indicator
// 
// VAL-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
// #define BAND_IND_1800                  (0x0)   /* ARFCN indicates 1800 band      */
// VAL-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
// #define BAND_IND_1900                  (0x1)   /* ARFCN indicates 1900 band      */

// VALTAB-FF: TI_PS_FF_QUAD_BAND_SUPPORT 
// 
// Value constants for VAL_max_lapdm
// 
// #define LAPDM_FRAMES_5                 (0x0)   /* Upto 5 LAPDM FRAMES            */
// #define LAPDM_FRAMES_6                 (0x1)   /* Upto 6 LAPDM FRAMES            */
// #define LAPDM_FRAMES_7                 (0x2)   /* Upto 7 LAPDM FRAMES            */
// #define LAPDM_FRAMES_8                 (0x3)   /* Upto 8 LAPDM FRAMES            */
// #define LAPDM_FRAMES_9                 (0x4)   /* Upto 9 LAPDM FRAMES            */
// #define LAPDM_FRAMES_10                (0x5)   /* Upto 10 LAPDM FRAMES           */
// #define LAPDM_FRAMES_11                (0x6)   /* Upto 11 LAPDM FRAMES           */
// #define LAPDM_FRAMES_12                (0x7)   /* Upto 12 LAPDM FRAMES           */

/*
 * user defined constants
 */
#define L3MAX_ACK                      (0xfb)     
#define L3MAX                          (0xfb)     
#define MAX_APDU_DATA                  (0xf8)     
#define MAX_ARFCN                      (0x14)     
#define MAX_ARFCNI                     (0x5)      
#define MAX_GR_C_INFO                  (0x5)      
#define MAX_ITP                        (0x5)      
#define MAX_LSA_ID                     (0x2)      
#define MAX_POS                        (0x5)      
#define MAX_RANGE                      (0xa)      
#define MAX_RFL                        (0x5)      
#define N_MAX_RANGE                    (0x1e)     
#define N_CELL_MRES                    (0x6)      
#define N_FREQ_SHORT_LIST              (0x9)      
#define N_FREQ_SKIP                    (0x10)     
#define N_MAX_FREQ_LIST                (0xfa)     
#define N_MOB_ALLOC                    (0x8)      
#define NCELL_DESC_BIT_LEN             (0x80)     
#define MAX_ACCESS_TT                  (0x4)      
#define MAX_FDD                        (0x83)     
#define MAX_TDD                        (0x83)     

#include "CDG_LEAVE.h"


#endif
