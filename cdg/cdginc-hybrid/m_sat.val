/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : m_sat.val                                                      |
| SOURCE  : "msg\sat.mdf"                                                  |
| LastModified : "2003-02-25"                                              |
| IdAndVersion : "6147.609.99.011"                                         |
| SrcFileTime  : "Wed Nov 28 10:21:04 2007"                                |
| Generated by CCDGEN_2.5.5A on Fri Oct 14 21:41:52 2016                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : NONE
 * COMPATIBILITY_DEFINES  : NO (require PREFIX)
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 */


#ifndef M_SAT_VAL
#define M_SAT_VAL


#define CDG_ENTER__M_SAT_VAL

#define CDG_ENTER__FILENAME _M_SAT_VAL
#define CDG_ENTER__M_SAT_VAL__FILE_TYPE CDGINC
#define CDG_ENTER__M_SAT_VAL__LAST_MODIFIED _2003_02_25
#define CDG_ENTER__M_SAT_VAL__ID_AND_VERSION _6147_609_99_011

#define CDG_ENTER__M_SAT_VAL__SRC_FILE_TIME _Wed_Nov_28_10_21_04_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__M_SAT_VAL

#undef CDG_ENTER__FILENAME


/*
 * Value constants for VAL_cmd_typ
 */
#define SAT_CMD_REFRESH                (0x1)      /* Refresh command                */
#define SAT_CMD_MORE_TIME              (0x2)      /* More time command              */
#define SAT_CMD_POLL_INTERVAL          (0x3)      /* Poll interval command          */
#define SAT_CMD_POLL_OFF               (0x4)      /* Polling off command            */
#define SAT_CMD_EVENT_LIST             (0x5)      /* Setup event list command       */
#define SAT_CMD_SETUP_CALL             (0x10)     /* Set up call command            */
#define SAT_CMD_SEND_SS                (0x11)     /* Send SS command                */
#define SAT_CMD_SEND_USSD              (0x12)     /* Send USSD Command              */
#define SAT_CMD_SEND_SMS               (0x13)     /* Send Short Message command     */
#define SAT_CMD_SEND_DTMF              (0x14)     /* Send DTMF command              */
#define SAT_CMD_LAUNCH_BROWSER         (0x15)     /* Launch WWW Browser class c     */
#define SAT_CMD_PLAY_TONE              (0x20)     /* Play tone command              */
#define SAT_CMD_DISPLAY_TEXT           (0x21)     /* Display text command           */
#define SAT_CMD_GET_INKEY              (0x22)     /* Get inkey command              */
#define SAT_CMD_GET_INPUT              (0x23)     /* Get input command              */
#define SAT_CMD_SEL_ITEM               (0x24)     /* Select item command            */
#define SAT_CMD_SETUP_MENU             (0x25)     /* Set up menu command            */
#define SAT_CMD_PROV_LOC_INFO          (0x26)     /* Provide loacal information command */
#define SAT_CMD_TIMER_MNG              (0x27)     /* Timer Managemant command       */
#define SAT_CMD_IDLE_TEXT              (0x28)     /* Set up idle mode text command  */
#define SAT_CMD_RUN_AT                 (0x34)     /* Run AT command                 */
#define SAT_CMD_OPEN_CHANNEL           (0x40)     /* Open data channel for CS or GPRS              class e */
#define SAT_CMD_CLOSE_CHANNEL          (0x41)     /* Close data channel                                  class e */
#define SAT_CMD_RECEIVE_DATA           (0x42)     /* Receive data from ME from the channel     class e */
#define SAT_CMD_SEND_DATA              (0x43)     /* Send the data to the channel via ME         class e */
#define SAT_CMD_GET_CHANNEL_STATUS     (0x44)     /* Get the status of the data channel opened class e */
#define SAT_CMD_END_SESSION            (0x81)     /* End of proactive session command */

/*
 * Value constants for VAL_cmd_qlf
 */
#define QLF_RFSH_INIT                  (0x0)      /* Refresh: SIM initialization    */
#define QLF_RFSH_INIT_FULL_CHNG_NTFY   (0x1)      /* Refresh: SIM initialization and full file change notification */
#define QLF_RFSH_FILE_CHNG_NTFY        (0x2)      /* Refresh: File change notification */
#define QLF_RFSH_INIT_FILE_CHNG_NTFY   (0x3)      /* Refresh: SIM initialization and file change notification */
#define QLF_RFSH_RESET                 (0x4)      /* Refresh: SIM reset             */
#define QLF_CALL_IDLE                  (0x0)      /* Set up call: idle              */
#define QLF_CALL_IDLE_RDL              (0x1)      /* Set up call: idle with redial  */
#define QLF_CALL_HOLD                  (0x2)      /* Set up call: hold              */
#define QLF_CALL_HOLD_RDL              (0x3)      /* Set up call: hold with redial  */
#define QLF_CALL_DISC                  (0x4)      /* Set up call: disconnect        */
#define QLF_CALL_DISC_RDL              (0x5)      /* Set up call: disconnect with redial */
#define QLF_SMS_NO_PACK                (0x0)      /* Send SMS: packing not required */
#define QLF_SMS_PACK                   (0x1)      /* Send SMS: packing required     */
#define QLF_DISP_PRIO_NORM             (0x0)      /* Display text: normal priority  */
#define QLF_DISP_PRIO_HIGH             (0x1)      /* Display text: high priority    */
#define QLF_DISP_CLR_DELAY             (0x0)      /* Display text: clear message after delay */
#define QLF_DISP_CLR_USER              (0x80)     /* Display text: wait for user to clear message */
#define QLF_INKY_DIGITS                (0x0)      /* Get inkey: digits (0-9, *,# and +) only */
#define QLF_INKY_ALPHA                 (0x1)      /* Get inkey: alphabet set        */
#define QLF_INKY_SMS_DEF               (0x0)      /* Get inkey; SMS default alphabet */
#define QLF_INKY_UCS2                  (0x2)      /* Get inkey: UCS2 alphabet       */
#define QLF_INKY_NO_HELP               (0x0)      /* Get inkey: no help information available */
#define QLF_INKY_HELP                  (0x80)     /* Get inkey: help information available */
#define QLF_INPT_DIGITS                (0x0)      /* Get input: digits (0-9, *,# and +) only */
#define QLF_INPT_ALPHA                 (0x1)      /* Get input: alphabet set        */
#define QLF_INPT_SMS_DEF               (0x0)      /* Get input; SMS default alphabet */
#define QLF_INPT_UCS2                  (0x2)      /* Get input: UCS2 alphabet       */
#define QLF_INPT_ECHO                  (0x0)      /* Get input: ME may echo input   */
#define QLF_INPT_NO_ECHO               (0x4)      /* Get input: input shall not revealed in any way */
#define QLF_INPT_NO_PACK               (0x0)      /* Get input: unpacket input format */
#define QLF_INPT_PACK                  (0x8)      /* Get input: SMS packed input format */
#define QLF_INPT_NO_HELP               (0x0)      /* Get input: no help information available */
#define QLF_INPT_HELP                  (0x80)     /* Get input: help information available */
#define QLF_SITM_NOPRES                (0x0)      /* Select item: presentation type is not specified */
#define QLF_SITM_PRES                  (0x1)      /* Select item: presentation type is specified in bit 2 */
#define QLF_SITM_CHVAL                 (0x0)      /* Select item: presentation as a choice of data values if bit 1 = '1' */
#define QLF_SITM_CHNAV                 (0x2)      /* Select item: presentation as a choice of navigation options if bit 1 is '1' */
#define QLF_SITM_SEL_NOPREF            (0x0)      /* Select item: no selection preference */
#define QLF_SITM_SEL_PREF_SOFTKEY      (0x4)      /* Select item: selection using soft key preferred */
#define QLF_SITM_NO_HELP               (0x0)      /* Select item: no help information available */
#define QLF_SITM_HELP                  (0x80)     /* Select item: help information available */
#define QLF_SMNU_SEL_NOPREF            (0x0)      /* Set up menu: no selection preference */
#define QLF_SMNU_SEL_PREF_SOFTKEY      (0x1)      /* Set up menu: selection using soft key preferred */
#define QLF_SMNU_NO_HELP               (0x0)      /* Set up menu: no help information available */
#define QLF_SMNU_HELP                  (0x80)     /* Set up menu: help information available */
#define QLF_PLOI_LOC_INFO              (0x0)      /* Provide local information: Local information */
#define QLF_PLOI_IMEI                  (0x1)      /* Provide local information: IMEI of ME */
#define QLF_PLOI_NTW_MSR               (0x2)      /* Provide local information: Network measurement results */
#define QLF_PLOI_DTT                   (0x3)      /* Provide local information: Date, Time and Timezone */
#define QLF_PLOI_LANG_SET              (0x4)      /* Provide local information: Language Setting */
#define QLF_PLOI_TIM_ADV               (0x5)      /* Provide local information: Timing Advance */
#define QLF_LABR_IF_NOT_LCHD           (0x0)      /* Launch Browser: launch browser, if not already launched */
#define QLF_LABR_NOT_USED1             (0x2)      /* Launch Browser: not used       */
#define QLF_LABR_USE_EXISTING          (0x2)      /* Launch Browser: use the existing browser */
#define QLF_LABR_CLOSE_AND_NEW         (0x3)      /* Launch Browser: close the existing browser session and launch new browser session */
#define QLF_LABR_NOT_USED2             (0x4)      /* Launch Browser: not used       */
#define QLF_OPCH_ON_DEMD_LINK_EST      (0x0)      /* Open Channel: on demand link establishment (class e) */
#define QLF_OPCH_IMMDT_LINK_EST        (0x1)      /* Open Channel: immediate link establishment (class e) */
#define QLF_OPCH_NO_AUTO_RECONNECT     (0x0)      /* Open Channel: no automatic reconnection (class e) */
#define QLF_OPCH_AUTO_RECONNECT        (0x2)      /* Open Channel: automatic reconnection (class e) */
#define QLF_SNDDAT_TX                  (0x0)      /* Send Data: store data in Tx buffer (class e) */
#define QLF_SNDDAT_IM                  (0x1)      /* Send Data: Send data immediately (class e) */

/*
 * Value constants for VAL_src_dev
 */
#define DEV_SRC_KBD                    (0x1)      /* Device keypad                  */
#define DEV_SRC_DSP                    (0x2)      /* Device display                 */
#define DEV_SRC_EAR                    (0x3)      /* Device earpiece                */
#define DEV_SRC_CDR0                   (0x10)     /* Device Additional Card Reader 0 */
#define DEV_SRC_CDR1                   (0x11)     /* Device Additional Card Reader 1 */
#define DEV_SRC_CDR2                   (0x12)     /* Device Additional Card Reader 2 */
#define DEV_SRC_CDR3                   (0x13)     /* Device Additional Card Reader 3 */
#define DEV_SRC_CDR4                   (0x14)     /* Device Additional Card Reader 4 */
#define DEV_SRC_CDR5                   (0x15)     /* Device Additional Card Reader 5 */
#define DEV_SRC_CDR6                   (0x16)     /* Device Additional Card Reader 6 */
#define DEV_SRC_CDR7                   (0x17)     /* Device Additional Card Reader 7 */
#define DEV_SRC_CH1                    (0x21)     /* Device Channel 1 (class e)     */
#define DEV_SRC_CH2                    (0x22)     /* Device Channel 2 (class e)     */
#define DEV_SRC_CH3                    (0x23)     /* Device Channel 3 (class e)     */
#define DEV_SRC_CH4                    (0x24)     /* Device Channel 4 (class e)     */
#define DEV_SRC_CH5                    (0x25)     /* Device Channel 5 (class e)     */
#define DEV_SRC_CH6                    (0x26)     /* Device Channel 6 (class e)     */
#define DEV_SRC_CH7                    (0x27)     /* Device Channel 7 (class e)     */
#define DEV_SRC_SIM                    (0x81)     /* Device SIM                     */
#define DEV_SRC_ME                     (0x82)     /* Device mobile equipment        */
#define DEV_SRC_NTW                    (0x83)     /* Device network                 */

/*
 * Value constants for VAL_dest_dev
 */
#define DEV_DST_KBD                    (0x1)      /* Device keypad                  */
#define DEV_DST_DSP                    (0x2)      /* Device display                 */
#define DEV_DST_EAR                    (0x3)      /* Device earpiece                */
#define DEV_DST_CDR0                   (0x10)     /* Device Additional Card Reader 0 */
#define DEV_DST_CDR1                   (0x11)     /* Device Additional Card Reader 1 */
#define DEV_DST_CDR2                   (0x12)     /* Device Additional Card Reader 2 */
#define DEV_DST_CDR3                   (0x13)     /* Device Additional Card Reader 3 */
#define DEV_DST_CDR4                   (0x14)     /* Device Additional Card Reader 4 */
#define DEV_DST_CDR5                   (0x15)     /* Device Additional Card Reader 5 */
#define DEV_DST_CDR6                   (0x16)     /* Device Additional Card Reader 6 */
#define DEV_DST_CDR7                   (0x17)     /* Device Additional Card Reader 7 */
#define DEV_DST_CH1                    (0x21)     /* Device Channel 1 (class e)     */
#define DEV_DST_CH2                    (0x22)     /* Device Channel 2 (class e)     */
#define DEV_DST_CH3                    (0x23)     /* Device Channel 3 (class e)     */
#define DEV_DST_CH4                    (0x24)     /* Device Channel 4 (class e)     */
#define DEV_DST_CH5                    (0x25)     /* Device Channel 5 (class e)     */
#define DEV_DST_CH6                    (0x26)     /* Device Channel 6 (class e)     */
#define DEV_DST_CH7                    (0x27)     /* Device Channel 7 (class e)     */
#define DEV_DST_SIM                    (0x81)     /* Device SIM                     */
#define DEV_DST_ME                     (0x82)     /* Device mobile equipment        */
#define DEV_DST_NTW                    (0x83)     /* Device network                 */

/*
 * Value constants for VAL_time_unit
 */
#define TU_MIN                         (0x0)      /* Minutes                        */
#define TU_SEC                         (0x1)      /* Seconds                        */
#define TU_100_MSEC                    (0x2)      /* Tenth of seconds               */

/*
 * Value constants for VAL_noa
 */
#define VAL_NOA___DEF                  (0x0)      /* Reserved                       */
#define NOA_UNKNOWN                    (0x0)      /* unknown                        */
#define NOA_INTER_NUM                  (0x1)      /* international number           */
#define NOA_NATIO_NUM                  (0x2)      /* national significant number    */
#define NOA_NETW_NUM                   (0x3)      /* network specific number        */
#define NOA_SUBSC_NUM                  (0x4)      /* subscriber number              */
#define NOA_ABBRV_NUM                  (0x6)      /* abbreviated number             */

/*
 * Value constants for VAL_npi
 */
#define VAL_NPI___DEF                  (0x0)      /* reserved                       */
#define NPI_UNKNOWN                    (0x0)      /* unknown                        */
#define NPI_ISDN                       (0x1)      /* ISDN/Telephony Numbering Plan (Rec CCITT E.164) */
#define NPI_X121                       (0x3)      /* data numbering plan (CCITT Rec X.121) */
#define NPI_F69                        (0x4)      /* telex numbering plan (CCITT Rec F.69) */
#define NPI_LAND_MOBILE                (0x6)      /* land mobile numbering plan (CCITT Rec E.212) */
#define NPI_NATIONAL                   (0x8)      /* land mobile numbering plan (CCITT Rec E.212) */
#define NPI_PRIVATE                    (0x9)      /* Private numbering plan         */

/*
 * Value constants for VAL_gen
 */
#define RSLT_PERF_SUCCESS              (0x0)      /* Command performed successfully */
#define RSLT_PERF_PART_CMPR            (0x1)      /* Command performed with partial comprehension */
#define RSLT_PERF_MISS_INFO            (0x2)      /* Command performed with missing information */
#define RSLT_RFSH_ADD_EF               (0x3)      /* Refresh performed with additional EF read */
#define RSLT_PERF_MDFY_SIM             (0x5)      /* Command performed but modified by SIM */
#define RSLT_PERF_LIM_SRV              (0x6)      /* Command performed successfully, limited service */
#define RSLT_PERF_MDFIED               (0x7)      /* Command performed with modification  (class e) */
#define RSLT_SESS_USR_TERM             (0x10)     /* Proactive SIM session terminated by user */
#define RSLT_SESS_USR_BACK             (0x11)     /* Backward move in proactive SIM session */
#define RSLT_NO_RESP                   (0x12)     /* No response from user          */
#define RSLT_HELP_USR_REQ              (0x13)     /* Help information required by user */
#define RSLT_USER_TERM_SS              (0x14)     /* SS or USSD transaction terminated by user */
#define RSLT_ME_UNAB_PROC              (0x20)     /* ME is unable to process command */
#define RSLT_NTW_UNAB_PROC             (0x21)     /* Network is unable to process command */
#define RSLT_USR_REJ                   (0x22)     /* User did not accept set up request */
#define RSLT_USR_CLR_DWN               (0x23)     /* User cleared down call before connection or network release */
#define RSLT_CC_SIM_TMP                (0x25)     /* Interaction with call control by SIM temporary problem */
#define RSLT_LABRWS_GENERIC            (0x26)     /* Launch browser generic error code  (class e) */
#define RSLT_ME_CAP                    (0x30)     /* Command beyond ME capabilities */
#define RSLT_UNKN_TYPE                 (0x31)     /* Command type not understood    */
#define RSLT_UNKN_DATA                 (0x32)     /* Command data not understood    */
#define RSLT_UNKN_NR                   (0x33)     /* Command number not understood  */
#define RSLT_SS_ERR                    (0x34)     /* SS return error                */
#define RSLT_SMS_ERR                   (0x35)     /* SMS RP-ERROR                   */
#define RSLT_ERR_REQ_VAL               (0x36)     /* Error, required values are missing */
#define RSLT_USSD_ERR                  (0x37)     /* USSD return error              */
#define RSLT_CC_SIM_PRM                (0x39)     /* interaction with call control by SIM or SMS control by SIM permanent problem */
#define RSLT_BEARIND_PERR              (0x3a)     /* Bearer Independent Protocol error  (class e) */

/*
 * Value constants for VAL_add
 */
#define ADD_NO_CAUSE                   (0x0)      /* No specific cause can be given */
#define ADD_ME_SCR_BUSY                (0x1)      /* ME: Screen is busy             */
#define ADD_ME_CALL_BUSY               (0x2)      /* ME: currently busy on call     */
#define ADD_ME_SS_BUSY                 (0x3)      /* ME: currently busy on SS transaction */
#define ADD_ME_NO_SERV                 (0x4)      /* ME: no service                 */
#define ADD_ME_ACC_BAR                 (0x5)      /* ME: Access control class bar   */
#define ADD_ME_RR_DENIED               (0x6)      /* ME: Radio resource not granted */
#define ADD_ME_NO_SPCH_CALL            (0x7)      /* ME: Not in speech call         */
#define ADD_ME_USSD_BUSY               (0x8)      /* ME: currently busy on USSD transaction */
#define ADD_CC_NOT_ALLWD               (0x1)      /* Call Control: Action not allowed */
#define ADD_CC_REQ_CHNG                (0x2)      /* Call Control: Type of request has changed */
#define ADD_LBP_BEARR_NAVAIL           (0x1)      /* Launch browser: Bearer unavailable (class c) */
#define ADD_LBP_BRWSR_NAVAIL           (0x2)      /* Launch browser: Browser unavailable (class c) */
#define ADD_LBP_ME_UNABL_RDPD          (0x3)      /* Launch browser: ME unable to read provisioning data (class c) */
#define ADD_BIP_NO_CHAN_AVAIL          (0x1)      /* No channel available (class e) */
#define ADD_BIP_CHAN_CLOSD             (0x2)      /* Channel closed (class e)       */
#define ADD_BIP_CHANID_NT_VLD          (0x3)      /* Channel identifier not valid (class e) */
#define ADD_BIP_BUF_SIZ_NAVAIL         (0x4)      /* Requested buffer size not available (class e) */
#define ADD_BIP_SECUR_ERR              (0x5)      /* Security error (unsuccessful authentication) (class e) */
#define ADD_BIP_SIME_ITL_NAVAIL        (0x6)      /* Requested SIM/ME interface transport level not available (class e) */

/*
 * Value constants for VAL_tos
 */
#define VAL_TOS___DEF                  (0x0)      /* Reserved                       */
#define TOS_X213                       (0x0)      /* NSAP (X.213/ISO 8348 AD2)      */
#define TOS_USER                       (0x2)      /* User Specified                 */

/*
 * Value constants for VAL_oei
 */
#define OEI_EVEN                       (0x0)      /* even number of address signals */
#define OEI_ODD                        (0x1)      /* odd number of address signals  */

/*
 * Value constants for VAL_event
 */
#define VAL_EVENT___DEF                (0x0)      /* Reserved                       */
#define EVENT_MT_CALL                  (0x0)      /* Incoming Call                  */
#define EVENT_CALL_CONN                (0x1)      /* Call is connected              */
#define EVENT_CALL_DISC                (0x2)      /* Call is disconnected           */
#define EVENT_LOC_STATUS               (0x3)      /* Service status change          */
#define EVENT_USER_ACTIVE              (0x4)      /* User activity                  */
#define EVENT_IDLE_SCREEN              (0x5)      /* Idle screen is available       */
#define EVENT_BROWS_TERMIN             (0x8)      /* Browser Termination (if class c supported) */
#define EVENT_DATA_AVAIL               (0x9)      /* Data available (if class e supported) */
#define EVENT_CHAN_STAT                (0xa)      /* Channel Status (if class e supported) */

/*
 * Value constants for VAL_bc_rpi
 */
#define VAL_BC_RPI___DEF               (0x0)      /* Reserved                       */
#define BC_RPI_ALT                     (0x1)      /* Alternate mode                 */
#define BC_RPI_SEQ                     (0x3)      /* Sequential mode                */

/*
 * Value constants for VAL_loc_state
 */
#define VAL_LOC_STATE___DEF            (0x0)      /* Reserved                       */
#define LOC_ST_NORMAL                  (0x1)      /* Normal service                 */
#define LOC_ST_LIMITED                 (0x2)      /* Limited service                */
#define LOC_ST_NOSERV                  (0x3)      /* No service                     */

/*
 * Value constants for VAL_gprs_pdp_type
 */
#define PDP_TYPE_IP                    (0x2)      /* Internet Protocol, IETF STD 5  */

/*
 * Value constants for VAL_oth_addr_type
 */
#define VAL_OTH_ADDR_TYPE___DEF        (0x0)      /* reserved                       */
#define IPv4                           (0x21)     /* Internet Protocal vers.4       */
#define IPv6                           (0x57)     /* Internet Protocal vers.6       */

/*
 * Value constants for VAL_trans_prot_type
 */
#define VAL_TRANS_PROT_TYPE___DEF      (0x0)      /* reserved                       */
#define UDP                            (0x1)      /* User Datagramm Protocol        */
#define TCP                            (0x2)      /* Transmission Control Protocol  */

/*
 * Value constants for VAL_browser
 */
#define VAL_BROWSER___DEF              (0x0)      /* reserved                       */
#define DEFAULT_BROWSER                (0x0)      /* Default browser usage          */

/*
 * Value constants for VAL_bearer
 */
#define VAL_BEARER___DEF               (0x0)      /* reserved                       */
#define B_SMS                          (0x0)      /* short message service          */
#define B_CSD                          (0x1)      /* circle switched data           */
#define B_USSD                         (0x2)      /* unstructured supplementary service data */
#define B_GPRS                         (0x3)      /* generel packet radio systeme   */

/*
 * Value constants for VAL_brows_term_s
 */
#define USER_TERMINATION               (0x0)      /* terminated by user action      */
#define ERROR_TERMINATION              (0x1)      /* terminated by error            */

/*
 * Value constants for VAL_chan_id
 */
#define NO_CHAN_AVAIL                  (0x0)      
#define CHANNEL_ID_1                   (0x1)      
#define CHANNEL_ID_2                   (0x2)      
#define CHANNEL_ID_3                   (0x3)      
#define CHANNEL_ID_4                   (0x4)      
#define CHANNEL_ID_5                   (0x5)      
#define CHANNEL_ID_6                   (0x6)      
#define CHANNEL_ID_7                   (0x7)      

/*
 * Value constants for VAL_chan_stat_inf1
 */
#define VAL_CHAN_STAT_INF1___DEF       (0x0)      /* reserved                       */

/*
 * Value constants for VAL_chan_stat_link
 */
#define LINK_NO_ESTABL                 (0x0)      /* link not established or PDP context not activated */
#define LINK_ESTABL                    (0x1)      /* link established or PDP context activated */

/*
 * Value constants for VAL_chan_stat_inf2
 */
#define VAL_CHAN_STAT_INF2___DEF       (0x0)      /* reserved                       */
#define NO_FURTH_INFO                  (0x0)      /* no further info can be given   */
#define VAL_CHAN_STAT_INF2___1         (0x1)      /* reserved                       */
#define VAL_CHAN_STAT_INF2___2         (0x2)      /* reserved                       */
#define VAL_CHAN_STAT_INF2___3         (0x3)      /* reserved                       */
#define VAL_CHAN_STAT_INF2___4         (0x4)      /* reserved                       */
#define LINK_DROPPED                   (0x5)      /* link dropped                   */

/*
 * Value constants for VAL_bear_type
 */
#define BT_CSD                         (0x1)      /* bearer type CSD                */
#define BT_GPRS                        (0x2)      /* bearer type GPRS               */
#define BT_DEFAULT                     (0x3)      /* default bearer parameters      */

/*
 * user defined constants
 */
#define MAX_PARTY_NUM_SAT              (0x1e0)    
#define MAX_SUBADDR_NUM                (0x14)     
#define MAX_CH_DATA_LEN                (0xf1)     
#define MAX_CMD_AT_LEN                 (0xf1)     
#define MAX_ALPHA_ID_LEN               (0xf1)     
#define MAX_SS_STRING_LEN              (0x3c)     
#define MAX_SAT_USSD_LEN               (0xa0)     
#define MAX_SMS_DIGIT_LEN              (0x14)     
#define MAX_SMS_TPDU_LEN               (0xb8)     
#define MAX_CAP_CNF_LEN                (0x70)     
#define MAX_TEXT_LEN                   (0xa0)     
#define MAX_EVENT_LIST_LEN             (0xa)      
#define MAX_TI_LEN                     (0x10)     
#define MAX_DTMF_LEN                   (0x50)     
#define MAX_PROV_F_PATH_LEN            (0x10)     
#define MAX_BEARER_LIST_LEN            (0xfd)     
#define MAX_CAUSE_LEN                  (0x1e)     
#define CCR_ALLW_NO_MDFY               (0x0)      
#define CCR_NOT_ALLW                   (0x1)      
#define CCR_ALLW_WITH_MDFY             (0x2)      
#define MAX_SAT_APN_LEN                (0x66)     
#define MAX_URL_LEN                    (0xfd)     
#define MAX_PFP_ELEM                   (0xa)      

#include "CDG_LEAVE.h"


#endif
