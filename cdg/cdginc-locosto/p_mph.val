/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : p_mph.val                                                      |
| SOURCE  : "sap\mph.pdf"                                                  |
| LastModified : "2003-02-04"                                              |
| IdAndVersion : "6148.109.01.207"                                         |
| SrcFileTime  : "Mon Aug 11 13:32:48 2008"                                |
| Generated by CCDGEN_2.5.5A on Thu Sep 25 09:18:53 2014                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : NONE
 * COMPATIBILITY_DEFINES  : NO (require PREFIX)
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 */


#ifndef P_MPH_VAL
#define P_MPH_VAL


#define CDG_ENTER__P_MPH_VAL

#define CDG_ENTER__FILENAME _P_MPH_VAL
#define CDG_ENTER__P_MPH_VAL__FILE_TYPE CDGINC
#define CDG_ENTER__P_MPH_VAL__LAST_MODIFIED _2003_02_04
#define CDG_ENTER__P_MPH_VAL__ID_AND_VERSION _6148_109_01_207

#define CDG_ENTER__P_MPH_VAL__SRC_FILE_TIME _Mon_Aug_11_13_32_48_2008

#include "CDG_ENTER.h"

#undef CDG_ENTER__P_MPH_VAL

#undef CDG_ENTER__FILENAME


/*
 * Value constants for VAL_arfcn
 */
#define VAL_ARFCN___0                  (0x0)      /* E-GSM 900                      */
#define VAL_ARFCN___1000               (0x1000)   /* E-GSM 900 (E-GSM mode, std=2)  */
#define VAL_ARFCN___3000               (0x3000)   /* E-GSM 900 (Extended dual mode, std=6) */

/*
 * Value constants for VAL_comb_ccch
 */
#define COMB_CCCH_NOT_COMB             (0x0)      /* CCCH not combined with SDCCH   */
#define COMB_CCCH_COMB                 (0x1)      /* CCCH combined with SDCCH       */

/*
 * Value constants for VAL_tn
 */

/*
 * Value constants for VAL_dlt
 */

/*
 * Value constants for VAL_pg
 */

/*
 * Value constants for VAL_bs_ag_blocks_res
 */

/*
 * Value constants for VAL_bs_pa_mfrms
 */
#define VAL_BS_PA_MFRMS___0            (0x0)      /* 2 Multiframe Periods           */
#define VAL_BS_PA_MFRMS___1            (0x1)      /* 3 Multiframe Periods           */
#define VAL_BS_PA_MFRMS___2            (0x2)      /* 4 Multiframe Periods           */
#define VAL_BS_PA_MFRMS___3            (0x3)      /* 5 Multiframe Periods           */
#define VAL_BS_PA_MFRMS___4            (0x4)      /* 6 Multiframe Periods           */
#define VAL_BS_PA_MFRMS___5            (0x5)      /* 7 Multiframe Periods           */
#define VAL_BS_PA_MFRMS___6            (0x6)      /* 8 Multiframe Periods           */
#define VAL_BS_PA_MFRMS___7            (0x7)      /* 9 Multiframe Periods           */

/*
 * Value constants for VAL_power
 */

/*
 * Value constants for VAL_rx_lev
 */

/*
 * Value constants for VAL_rx_qual_full
 */

/*
 * Value constants for VAL_bsic
 */
#define MPH_BSIC_UNKNOWN               (0x40)     /* Cell is removed from list (GPRS) */

/*
 * Value constants for VAL_dtx
 */
#define DTX_NOT_USED                   (0x0)      /* DTX is not used                */
#define DTX_USED                       (0x1)      /* DTX is used                    */

/*
 * Value constants for VAL_otd
 */

/*
 * Value constants for VAL_ta
 */
#define TA_NOT_AVAIL                   (0xff)     /* timing advance is not available in Idle Mode */

/*
 * Value constants for VAL_v_start
 */
#define VAL_V_START___0                (0x0)      /* not valid                      */
#define VAL_V_START___1                (0x1)      /* valid                          */

/*
 * Value constants for VAL_ch
 */
#define CH_TCH_F                       (0x1)      /* TCH/F, FACCH Full Rate         */
#define CH_TCH_H_1                     (0x2)      /* TCH/H(1), FACCH Half Rate      */
#define CH_TCH_H_2                     (0x3)      /* TCH/H(2), FACCH Half Rate      */
#define CH_SDCCH_4_0                   (0x4)      /* SDCCH/4(0)                     */
#define CH_SDCCH_4_1                   (0x5)      /* SDCCH/4(1)                     */
#define CH_SDCCH_4_2                   (0x6)      /* SDCCH/4(2)                     */
#define CH_SDCCH_4_3                   (0x7)      /* SDCCH/4(3)                     */
#define CH_SDCCH_8_0                   (0x8)      /* SDCCH/8(0)                     */
#define CH_SDCCH_8_1                   (0x9)      /* SDCCH/8(1)                     */
#define CH_SDCCH_8_2                   (0xa)      /* SDCCH/8(2)                     */
#define CH_SDCCH_8_3                   (0xb)      /* SDCCH/8(3)                     */
#define CH_SDCCH_8_4                   (0xc)      /* SDCCH/8(4)                     */
#define CH_SDCCH_8_5                   (0xd)      /* SDCCH/8(5)                     */
#define CH_SDCCH_8_6                   (0xe)      /* SDCCH/8(6)                     */
#define CH_SDCCH_8_7                   (0xf)      /* SDCCH/8(7)                     */

/*
 * Value constants for VAL_tsc
 */

/*
 * Value constants for VAL_h
 */
#define H_NO                           (0x0)      /* no hopping                     */
#define H_FREQ                         (0x1)      /* frequency hopping              */

/*
 * Value constants for VAL_maio
 */

/*
 * Value constants for VAL_hsn
 */

/*
 * Value constants for VAL_rlt
 */

/*
 * Value constants for VAL_pwrc
 */
#define PWRC_NOT_SET                   (0x0)      /* PWRC is not set, exact meaning is defined in GSM 05.08 */
#define PWRC_SET                       (0x1)      /* PWRC is set, exact meaning is defined in GSM 05.08 */

/*
 * Value constants for VAL_tav
 */

/*
 * Value constants for VAL_algo
 */
#define ALGO_A5_1                      (0x0)      /* A5/1                           */
#define ALGO_A5_2                      (0x1)      /* A5/2                           */
#define ALGO_A5_3                      (0x2)      /* A5/3                           */
#define ALGO_A5_4                      (0x3)      /* A5/4                           */
#define ALGO_A5_5                      (0x4)      /* A5/5                           */
#define ALGO_A5_6                      (0x5)      /* A5/6                           */
#define ALGO_A5_7                      (0x6)      /* A5/7                           */

/*
 * Value constants for VAL_mod
 */
#define MODE_CELL_SELECTION            (0x0)      /* cell selection                 */
#define MODE_CELL_RESELECTION          (0x1)      /* cell reselection               */
#define VAL_MOD___2                    (0x2)      /* unused                         */
#define MODE_IMM_ASSIGN                (0x3)      /* immediate assignment           */
#define MODE_CHAN_ASSIGN               (0x4)      /* channel assignment             */
#define MODE_ASYNC_HANDOVER            (0x5)      /* asynchronous handover          */
#define MODE_SYNC_HANDOVER             (0x6)      /* synchronous handover           */
#define MODE_PRE_SYNC_HANDOVER         (0x7)      /* pre synchronous handover       */
#define MODE_PSEUDO_SYNC_HANDOVER      (0x8)      /* pseudo synchronous handover    */
#define MODE_SYS_INFO_CHANGE           (0x9)      /* sys info has changed           */
#define MODE_PACKET_TRANSFER           (0xa)      /* enter packet transfer mode     */
#define MODE_PDCH_ASSIGN               (0xb)      /* PDCH assignment                */
#define MODE_CELL_CHANGE_ORDER         (0xc)      /* network controlled cell change */
#define MODE_CELL_RESELECTION_SYNC_ONLY (0xd)     /* Sync only                      */
#define MODE_CONFIG_PL                 (0xe)      /* Config idle mode params, but don't start processes in L1 */

/*
 * Value constants for VAL_mode
 */
#define MODE_SIG_ONLY                  (0x0)      /* signalling only                */
#define MODE_SPEECH_VER1               (0x1)      /* speech (full rate or half rate), version 1 */
#define MODE_SPEECH_VER2               (0x21)     /* speech (full rate or half rate), version 2 */
#define MODE_SPEECH_VER3               (0x41)     /* speech (full rate or half rate), version 3 */
#define MODE_DATA_14_5                 (0xf)      /* data, 14.5 kbit/s radio interface rate, corresponds to 14.4 kbit/s user rate */
#define MODE_DATA_12_0                 (0x3)      /* data, 12.0 kbit/s radio interface rate, corresponds to 9.6 kbit/s user rate */
#define MODE_DATA_6_0                  (0xb)      /* data, 6.0 kbit/s radio interface rate, corresponds to 4.8 kbit/s user rate */
#define MODE_DATA_3_6                  (0x13)     /* data, 3.6 kbit/s radio interface rate, corresponds to 2.4 kbit/s user rate */

/*
 * Value constants for VAL_st_mode
 */
#define CODEC_MODE_1                   (0x0)      /* lowest codec mode              */
#define CODEC_MODE_2                   (0x1)      /* second lowest mode             */
#define CODEC_MODE_3                   (0x2)      /* third lowest mode              */
#define CODEC_MODE_4                   (0x3)      /* highest mode                   */

/*
 * Value constants for VAL_cs
 */
#define CS_NO_BCCH_AVAIL               (0x0)      /* no BCCH available              */
#define CS_DOWN_LINK_FAIL              (0x1)      /* down link failure              */
#define CS_RADIO_LINK_FAIL             (0x2)      /* radio link failure             */
#define CS_NO_HBCCH_AVAIL              (0x3)      /* no HPLMN BCCH available        */
#define CS_BCCH_READ_ERROR             (0x8)      /* error during BCCH reading      */
#define CS_STOP_BCCH_READING           (0xa)      /* stop BCCH reading              */
#define CS_STOP_PLMN_SEARCH            (0xb)      /* Stop PLMN search               */
#define CS_CLEAN_SYS_INFO              (0xc)      /* Clean System Information buffer */
#define CS_SYS_INFO_1_NOT_NEEDED       (0xd)      /* System info 1 is not needed    */
#define CS_RXLEV_VAL_REQ               (0xe)      /* Rxlev values are requested     */
#define CS_STOP_PLMN_SEARCH_AND_DEACTIVATE (0xf)  /* Stop PLMN search and enter sleep mode */
#define CS_SCELL_IS_SYNCED             (0x10)     /* Synchronization done           */
#define CS_START_PCCO                  (0x11)     /* start of packet cell change order and the cell is not in the BA list */
#define CS_NC_SYNC_FAILED              (0x12)     /* Lost synchronization with neighbour cell */
#define CS_SYS_INFO_2BIS_SUPPORT_CHANGED (0x13)   /* Started/stopped broadcasting of SI2bis in idle */
#define CS_SYS_INFO_2TER_SUPPORT_CHANGED (0x14)   /* Started/stopped broadcasting of SI2ter in idle */
#define CS_NO_ERROR                    (0xff)     /* no error occurred              */

/*
 * Value constants for VAL_pclass
 */
#define CLASS_1                        (0x0)      /* class 1                        */
#define CLASS_2                        (0x1)      /* class 2                        */
#define CLASS_3                        (0x2)      /* class 3                        */
#define CLASS_4                        (0x3)      /* class 4                        */
#define CLASS_5                        (0x4)      /* class 5                        */

/*
 * Value constants for VAL_tch_loop
 */
#define VAL_TCH_LOOP___FF              (0xff)     /* NOT_PRESENT_8BIT, open TCH loop, valid OPEN_LOOP_CMD message has been received */
#define TCH_LOOP_A                     (0x0)      /* Internal test TCH loop command A */
#define TCH_LOOP_B                     (0x1)      /* Internal test TCH loop command B */
#define TCH_LOOP_C                     (0x2)      /* Internal test TCH loop command C */
#define TCH_LOOP_D                     (0x3)      /* Internal test TCH loop command D */
#define TCH_LOOP_E                     (0x4)      /* Internal test TCH loop command E */
#define TCH_LOOP_F                     (0x5)      /* Internal test TCH loop command F */
#define TCH_LOOP_I                     (0x6)      /* Internal test TCH loop command I */

/*
 * Value constants for VAL_dedi_res
 */
#define DEDI_RES_OK                    (0x0)      /* success                        */
#define DEDI_RES_TIMEOUT               (0x1)      /* timeout                        */
#define DEDI_RES_TA_OUT_OF_RANGE       (0x2)      /* timing advance out of range    */
#define DEDI_RES_CELL_NOT_SYNC         (0x3)      /* cell not sync by ALR           */

/*
 * Value constants for VAL_device
 */
#define DAI_NO_TEST                    (0x0)      /* normal operation (no tested device via DAI) */
#define DAI_SPEECH_DL                  (0x1)      /* test of speech decoder / DTX downlink */
#define DAI_SPEECH_UL                  (0x2)      /* test of speech decoder / DTX uplink */
#define DAI_AD_DA                      (0x4)      /* test of acoustic devicesand A/D and D/A */

/*
 * Value constants for VAL_ho_pow
 */

/*
 * Value constants for VAL_ho_acc_type
 */
#define VAL_HO_ACC_TYPE___0            (0x0)      /* sending of HANDOVER ACCESS is mandatory */
#define VAL_HO_ACC_TYPE___1            (0x1)      /* sending of HANDOVER ACCESS is optional */

/*
 * Value constants for VAL_ho_nci
 */
#define NCI_TA_OUT_OF_RANGE_OK         (0x0)      /* timing advance out of range allowed */
#define NCI_TA_OUT_OF_RANGE_NOT_ALLOWED (0x1)     /* timing advance out of range not allowed */

/*
 * Value constants for VAL_multi_band
 */
#define MULTI_BAND_0                   (0x0)      /* normal operation               */
#define MULTI_BAND_1                   (0x1)      /* one cell of the non-serving cell band */
#define MULTI_BAND_2                   (0x2)      /* two cells of the non-serving cell band */
#define MULTI_BAND_3                   (0x3)      /* three cells of the non-serving cell band */

/*
 * Value constants for VAL_len_imsi
 */
#define VAL_LEN_IMSI___0               (0x0)      /* indicates not valid            */

/*
 * Value constants for VAL_identity_type
 */
#define ID_IMSI                        (0x1)      /* Paged by IMSI                  */
#define ID_TMSI                        (0x4)      /* Paged by TMSI                  */
#define ID_PTMSI                       (0x8)      /* Paged by PTMSI                 */

/*
 * Value constants for VAL_channel_needed
 */
#define CN_ANY                         (0x0)      /* Any channel                    */
#define CN_SDCCH                       (0x1)      /* SDCCH                          */
#define CN_TCH_FULL                    (0x2)      /* TCH Full Rate                  */
#define CN_TCH_H_OR_F                  (0x3)      /* TCH Half Rate or Full Rate     */
#define CN_PACKET                      (0x4)      /* Packet Channel (GPRS only)     */

/*
 * Value constants for VAL_pch_interrupt
 */
#define NO_PCH_INTERRUPT               (0x0)      /* Power measurements with PCH listening */
#define PCH_INTERRUPT                  (0x1)      /* Power measurements without PCH listening */

/*
 * Value constants for VAL_freq_bands
 */
#define BAND_AUTO                      (0x0)      /* 0b00000000: All bands shall be scanned */
#define BAND_GSM_900                   (0x1)      /* 0b00000001: GSM 900 is supported, shall be scanned */
#define BAND_DCS_1800                  (0x2)      /* 0b00000010: DCS 1800 is supported, shall be scanned */
#define BAND_PCS_1900                  (0x4)      /* 0b00000100: PCS 1900 is supported, shall be scanned */
#define BAND_E_GSM                     (0x8)      /* 0b00001000: Extended GSM is supported, shall be scanned */
#define BAND_GSM_850                   (0x10)     /* 0b00010000: GSM 850 is supported, shall be scanned */
#define BAND_GSM_450                   (0x20)     /* 0b00100000: GSM 450 is supported, shall be scanned */
#define BAND_GSM_480                   (0x40)     /* 0b01000000: GSM 480 is supported, shall be scanned */
#define BAND_R_GSM                     (0x80)     /* 0b10000000: R-GSM is supported, shall be scanned */
#define BAND_DUAL                      (0x3)      /* 0b00000011: GSM 900 and DCS 1800 is supported, shall be scanned */
#define BAND_DUAL_EXT                  (0xb)      /* 0b00001011: GSM 900, E-GSM and DCS 1800 is supported, shall be scanned */
#define BAND_DUAL_US                   (0x14)     /* 0b00010100: GSM 850 and PCS 1900 is supported, shall be scanned */
// VAL-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define BAND_850_1800                  (0x12)     /* 0b00010010: GSM 850 and DCS 1800 is supported, shall be scanned */
// VAL-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define BAND_900_1900                  (0xd)      /* 0b00001101:  GSM 900, E-GSM and PCS 1900 is supported, shall be scanned */
// VAL-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define BAND_850_900_1800              (0x1b)     /* 0b00011011: GSM 850, GSM 900, E-GSM and DCS 1800 is supported, shall be scanned */
// VAL-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define BAND_850_900_1900              (0x1d)     /* 0b00011101: GSM 850, GSM 900, E-GSM and PCS 1900 is supported, shall be scanned */

/*
 * Value constants for VAL_no
 */
#define NO_STP_SND_CONT_SND            (0x0)      /* stop sending of RACH bursts    */

/*
 * Value constants for VAL_t1
 */

/*
 * Value constants for VAL_t2
 */

/*
 * Value constants for VAL_t3
 */

/*
 * Value constants for VAL_action
 */
#define START_MON_NBCCH                (0x0)      /* start reading of BCCH, excluding ext BCCH */
#define START_MON_EBCCH                (0x1)      /* start reading of ext BCCH, excluding BCCH */
#define STOP_MON_BCCH                  (0x2)      /* stop reading of BCCH, including both BCCH and ext BCCH (if previously requested) */
#define START_MON_CCCH                 (0x3)      /* start reading of CCCH          */
#define STOP_MON_CCCH                  (0x4)      /* stop reading of CCCH           */
#define LEAVING_PIM_PBCCH              (0x5)      /* Leave PIM                      */
#define LEAVING_PAM_PBCCH              (0x6)      /* Leave PAM                      */
#define LEAVING_PTM_PBCCH              (0x7)      /* Leave PTM                      */
#define ENTER_PTM_PBCCH                (0x8)      /* Enter PTM                      */
#define ENTER_PIM_PBCCH                (0x9)      /* Enter PIM                      */
#define ENTER_PTM_BCCH                 (0xa)      /* Enter PTM for BCCH             */

/*
 * Value constants for VAL_si_to_read
 */
#define UNSPECIFIED_SI                 (0x0)      /* Update of unspecified SI message or SI messages */
#define UPDATE_SI1                     (0x1)      /* Update of SI1 message          */
#define UPDATE_SI2_SI2BIS_OR_SI2TER    (0x2)      /* Update of SI2, SI2 bis or SI2 ter message */
#define UPDATE_SI3_SI4_SI7_OR_SI8      (0x3)      /* Update of SI3, SI4, SI7 or SI8 message */
#define UPDATE_SI9                     (0x4)      /* Update of SI9 message          */
#define COMPLETE_SI                    (0x5)      /* Read complete SI               */
#define UPDATE_SI13_GSM                (0x6)      /* Read SI13 during GPRS activation */
#define UPDATE_SI2QUATER               (0x7)      /* Request to update SI-2quater   */
#define UPDATE_SI2QUATER_AGAIN         (0x8)      /* Request to update SI-2quater again as the prev si-2quater BA-IND was not correct */
#define UPDATE_SI13                    (0xff)     /* Update SI13                    */

/*
 * Value constants for VAL_reorg_only
 */
#define NORMAL_PGM                     (0x0)      /* ignore this parameter (and do not ignore Page Mode IE in PAGING REQUEST messages); used to switch off REORG_ONLY */
#define REORG_ONLY                     (0x1)      /* set page mode to paging reorganisation */

/*
 * Value constants for VAL_sync_only
 */
#define NORMAL_BA                      (0x0)      /* normal GSM behaviour           */
#define SYNC_LIST                      (0x1)      /* GPRS sync only                 */
#define RECONFIRM_SYNC_LIST            (0x2)      /* Reconfirm Sync 10 sec timer for Pbcch Cells */

/*
 * Value constants for VAL_gprs_sync
 */
#define NORMAL_MEAS_REP                (0x0)      /* normal GSM behaviour           */
#define SYNC_RESULTS                   (0x1)      /* GPRS sync only                 */

/*
 * Value constants for VAL_ba_id
 */

/*
 * Value constants for VAL_stat
 */
#define STAT_INACT                     (0x0)      /* inactive                       */
#define STAT_ACT                       (0x1)      /* active                         */
#define STAT_CIPH_OFF                  (0x0)      /* ciphering off                  */
#define STAT_CIPH_ON                   (0x1)      /* ciphering on                   */

/*
 * Value constants for VAL_eotd_res
 */
#define EOTD_SUCC                      (0x0)      /* success                        */
#define EOTD_REF                       (0x1)      /* wrong reference BTS            */

/*
 * Value constants for VAL_mfrm_offset
 */

/*
 * Value constants for VAL_otd_type
 */
#define ROUGH_OTD                      (0x0)      /* only roughOTD has been provided by the NW */
#define EXPECTED_OTD                   (0x1)      /* only expectedOTD has been provided by the NW */
#define BOTH_OTD                       (0x2)      /* Both OTD type have been provided by the NW */

/*
 * Value constants for VAL_exp_otd
 */

/*
 * Value constants for VAL_uncertainty
 */
#define UNC_MAX_2BIT                   (0x0)      /* uncertainty in bits. 0 - 2 bits */
#define UNC_MAX_4BIT                   (0x1)      /* uncertainty in bits. 3 - 4 bits */
#define UNC_MAX_8BIT                   (0x2)      /* uncertainty in bits. 5 - 8 bits */
#define UNC_MAX_12BIT                  (0x3)      /* uncertainty in bits. 9 - 12 bits */
#define UNC_MAX_16BIT                  (0x4)      /* uncertainty in bits. 13 - 16 bits */
#define UNC_MAX_22BIT                  (0x5)      /* uncertainty in bits. 17 - 22 bits */
#define UNC_MAX_30BIT                  (0x6)      /* uncertainty in bits. 23 - 30 bits */
#define UNC_GT_30BIT                   (0x7)      /* uncertainty in bits.  > 30 bits */

/*
 * Value constants for VAL_rough_rtd
 */
#define VAL_ROUGH_RTD___0              (0x0)      /* roughRTD in bits (see expected OTD) */

/*
 * Value constants for VAL_eotd_avail
 */
#define VAL_EOTD_AVAIL___0             (0x0)      /* EOTD is not available          */
#define VAL_EOTD_AVAIL___1             (0x1)      /* EOTD is available              */

/*
 * Value constants for VAL_gprs_support
 */
#define MPH_GPRS_PROCS_USED            (0x1)      /* yes                            */
#define MPH_GPRS_PROCS_NOT_USED        (0x0)      /* no                             */

/*
 * Value constants for VAL_si_to_clean
 */
#define IND_SI_1                       (0x1)      /* Clean SI 1 buffer              */
#define IND_SI_2                       (0x2)      /* Clean SI 2 buffer              */
#define IND_SI_2BIS                    (0x4)      /* Clean SI 2bis buffer           */
#define IND_SI_2TER                    (0x8)      /* Clean SI 2ter buffer           */
#define IND_SI_3                       (0x10)     /* Clean SI 3 buffer              */
#define IND_SI_4                       (0x20)     /* Clean SI 4 buffer              */
#define IND_SI_13                      (0x40)     /* Clean SI 13 buffer             */
#define IND_SI_2QUATER                 (0x80)     /* Clean SI 2quater buffer        */
#define IND_SI_5                       (0x100)    /* Clean SI 5 buffer              */
#define IND_SI_5BIS                    (0x200)    /* Clean SI 5bis buffer           */
#define IND_SI_5TER                    (0x400)    /* Clean SI 5ter buffer           */
#define IND_SI_6                       (0x800)    /* Clean SI 6 buffer              */
#define IND_ALL_IDLE_SI                (0x7f)     /* Clean all SI of idle mode      */
#define IND_ALL_IDLE_BA                (0xe)      /* Clean all SI of idle mode BA list */
#define IND_ALL_DEDI_SI                (0xf00)    /* Clean all SI of dedicated  mode */
#define IND_ALL_DEDI_BA                (0x700)    /* Clean all SI of dedicated  mode BA list */
#define IND_ALL_SI                     (0xf7f)    /* Clean all SI buffers           */

/*
 * Value constants for VAL_cause
 */
#define NC_STOP_MEAS                   (0x0)      /* Stop the measurement           */
#define NC_START_MEAS                  (0x1)      /* Start Averaging the measurements */
#define NC_REPORT_MEAS                 (0x2)      /* get the meas report from RR    */

/*
 * Value constants for VAL_region
 */
#define EUROPEAN_REGION                (0x0)      /* Indicates European region      */
#define AMERICAN_REGION                (0x1)      /* Indicates American region      */
// VAL-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define BOTH_REGIONS                   (0x2)      /* Indicates both European and American region */

/*
 * Value constants for VAL_search_mode
 */
#define FULL_SEARCH_MODE               (0x0)      /* Identifies 'Full Search' mode, default mode */
#define NORMAL_SEARCH_MODE             (0x1)      /* Identifies 'Normal Search' mode */
#define FAST_SEARCH_MODE               (0x2)      /* Identifies 'Fast Search' mode  */
#define BLACK_LIST_SEARCH_MODE         (0x3)      /* Identifies 'Black List Search' mode */

/*
 * Value constants for VAL_whitelist_valid
 */
#define WHITELIST_NOT_VALID            (0x0)      /* not valid                      */
#define WHITELIST_VALID                (0x1)      /* valid                          */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_rep_rate
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define NORMAL_REP_RATE                (0x0)      /* Normal(SACCH)reporting rate    */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REDUCED_REP_RATE               (0x1)      /* Reduced reporting rate         */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_inv_bsic
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define INV_BSIC_REPORTING_DISABLED    (0x0)      /* Invalid BSIC reporting not enabled */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define INV_BSIC_REPORTING_ENABLED     (0x1)      /* Invalid BSIC reporting enabled */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_si2quater_status
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SI2QUATER_ABSENT               (0x0)      /* Not present/Not required       */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SI2QUATER_CONFIGURE            (0x1)      /* Has to be configured           */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SI2QUATER_ACQ_PENDING          (0x2)      /* Acquisition is pending.        */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SI2QUATER_ACQ_COMP             (0x3)      /* Acquisition is complete        */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SI2QUATER_ACQ_FULL_BCCH        (0x4)      /* Acquisition is on going as part of full BCCH reading */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SI2QUATER_ACQ_WRONG_BAIND      (0x5)      /* Acquired with wrong BA-IND     */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_si2quater_pos
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SI2QUATER_ON_NBCCH             (0x0)      /* SI-2quater on NBCCH            */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SI2QUATER_ON_EBCCH             (0x1)      /* SI-2quater on EBCCH            */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_mean_bep
 */
#define MEAN_BEP_0                     (0x0)      /* mapped value                   */
#define MEAN_BEP_1                     (0x1)      /* mapped value                   */
#define MEAN_BEP_2                     (0x2)      /* mapped value                   */
#define MEAN_BEP_3                     (0x3)      /* mapped value                   */
#define MEAN_BEP_4                     (0x4)      /* mapped value                   */
#define MEAN_BEP_5                     (0x5)      /* mapped value                   */
#define MEAN_BEP_6                     (0x6)      /* mapped value                   */
#define MEAN_BEP_7                     (0x7)      /* mapped value                   */
#define MEAN_BEP_8                     (0x8)      /* mapped value                   */
#define MEAN_BEP_9                     (0x9)      /* mapped value                   */
#define MEAN_BEP_10                    (0xa)      /* mapped value                   */
#define MEAN_BEP_11                    (0xb)      /* mapped value                   */
#define MEAN_BEP_12                    (0xc)      /* mapped value                   */
#define MEAN_BEP_13                    (0xd)      /* mapped value                   */
#define MEAN_BEP_14                    (0xe)      /* mapped value                   */
#define MEAN_BEP_15                    (0xf)      /* mapped value                   */
#define MEAN_BEP_16                    (0x10)     /* mapped value                   */
#define MEAN_BEP_17                    (0x11)     /* mapped value                   */
#define MEAN_BEP_18                    (0x12)     /* mapped value                   */
#define MEAN_BEP_19                    (0x13)     /* mapped value                   */
#define MEAN_BEP_20                    (0x14)     /* mapped value                   */
#define MEAN_BEP_21                    (0x15)     /* mapped value                   */
#define MEAN_BEP_22                    (0x16)     /* mapped value                   */
#define MEAN_BEP_23                    (0x17)     /* mapped value                   */
#define MEAN_BEP_24                    (0x18)     /* mapped value                   */
#define MEAN_BEP_25                    (0x19)     /* mapped value                   */
#define MEAN_BEP_26                    (0x1a)     /* mapped value                   */
#define MEAN_BEP_27                    (0x1b)     /* mapped value                   */
#define MEAN_BEP_28                    (0x1c)     /* mapped value                   */
#define MEAN_BEP_29                    (0x1d)     /* mapped value                   */
#define MEAN_BEP_30                    (0x1e)     /* mapped value                   */
#define MEAN_BEP_31                    (0x1f)     /* mapped value                   */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_cv_bep
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define CV_BEP_0                       (0x0)      /* Values Item                    */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define CV_BEP_1                       (0x1)      /* Values Item                    */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define CV_BEP_2                       (0x2)      /* Values Item                    */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define CV_BEP_3                       (0x3)      /* Values Item                    */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define CV_BEP_4                       (0x4)      /* Values Item                    */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define CV_BEP_5                       (0x5)      /* Values Item                    */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define CV_BEP_6                       (0x6)      /* Values Item                    */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define CV_BEP_7                       (0x7)      /* Values Item                    */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_scale_ord
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SCALE_0dB                      (0x0)      /* Scaling by 0dB                 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SCALE_10dB                     (0x1)      /* Scaling by 10dB                */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define SCALE_AUTO                     (0x2)      /* Automatic scaling              */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_rep_priority
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_PRIOR_NORM                 (0x0)      /* Normal reporting priority      */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_PRIOR_HIGH                 (0x1)      /* High reporting priority        */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_rep_threshold
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_0                (0x0)      /* 0 dB                           */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_6                (0x1)      /* 6 dB                           */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_12               (0x2)      /* 12 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_18               (0x3)      /* 18 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_24               (0x4)      /* 24 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_30               (0x5)      /* 30 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_36               (0x6)      /* 36 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_INF              (0x7)      /* Report Never                   */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_THRESHOLD_NONE             (0xff)     /* Report Always, default value   */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_rep_offset
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_OFFSET_0                   (0x0)      /* 0dB (Default)                  */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_OFFSET_6                   (0x1)      /* 6 dB                           */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_OFFSET_12                  (0x2)      /* 12 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_OFFSET_18                  (0x3)      /* 18 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_OFFSET_24                  (0x4)      /* 24 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_OFFSET_30                  (0x5)      /* 30 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_OFFSET_36                  (0x6)      /* 36 dB                          */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_OFFSET_42                  (0x7)      /* 42 dB                          */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for Val_rep_type
 */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_TYPE_ENH                   (0x0)      /* Report type is 'Enhanced'      */
// VAL-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define REP_TYPE_NORM                  (0x1)      /* Report type is 'Normal'        */

/*
 * user defined constants
 */
#define MAX_MA_CHANNELS                (0x40)     
#define MAX_NEIGHBOURCELLS             (0x21)     
#define MAX_CHANNELS                   (0x64)     
#define MAX_NCELL_EOTD_ALR             (0xf)      
#define MAX_NCELL_EOTD_RES             (0xc)      
#define XCOR_NO                        (0x12)     
#define STD_900                        (0x1)      
#define STD_EGSM                       (0x2)      
#define STD_1900                       (0x3)      
#define STD_1800                       (0x4)      
#define STD_DUAL                       (0x5)      
#define STD_DUAL_EGSM                  (0x6)      
#define STD_850                        (0x7)      
#define STD_DUAL_US                    (0x8)      
// CONST-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define STD_850_1800                   (0x9)      
// CONST-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define STD_900_1900                   (0xa)      
// CONST-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define STD_850_900_1800               (0xb)      
// CONST-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define STD_850_900_1900               (0xc)      
#define US_BIT                         (0x8000)   
#define STD_BIT_MASK                   (0x7800)   
#define STD_BIT_SHIFT                  (0xb)      
#define ARFCN_MASK                     (0x7ff)    
#define EUROPEAN_FREQ_AREA             (0x1)      
#define AMERICAN_FREQ_AREA             (0x2)      
#define ALL_FREQ_AREA                  (0x3)      
#define NEXT_AMERICAN_AREA             (0x80)     
#define LOW_CHANNEL_900                (0x1)      
#define HIGH_CHANNEL_900               (0x7c)     
#define LOW_CHANNEL_EGSM               (0x3cf)    
#define HIGH_CHANNEL_EGSM              (0x400)    
#define CHANNEL_0                      (0x0)      
#define CHANNEL_0_INTERNAL             (0x400)    
#define LOW_CHANNEL_1900               (0x200)    
#define HIGH_CHANNEL_1900              (0x32a)    
#define LOW_CHANNEL_1800               (0x200)    
#define HIGH_CHANNEL_1800              (0x375)    
#define LOW_CHANNEL_850                (0x80)     
#define HIGH_CHANNEL_850               (0xfb)     
// CONST-FF: TI_PS_FF_QUAD_BAND_SUPPORT  
#define LOW_CHANNEL_1900_INTERNAL      (0x400)    
#define MAX_CARRIERS_GSM900            (0x7c)     
#define MAX_CARRIERS_EGSM900           (0xae)     
#define MAX_CARRIERS_PCS1900           (0x12b)    
#define MAX_CARRIERS_DCS1800           (0x176)    
#define MAX_CARRIERS_DUAL              (0x1f2)    
#define MAX_CARRIERS_DUAL_EGSM         (0x224)    
#define MAX_CARRIERS_GSM850            (0x7c)     
#define MAX_CARRIERS_DUAL_US           (0x1a7)    
#define MAX_EMO_CHANNELS               (0x15)     
#define RR_BA_HIGH                     (0xff)     
#define RR_BA_LOW                      (0x80)     
#define ALR_BA_HIGH                    (0x7f)     
#define ALR_BA_LOW                     (0x0)      
#define KC_STRING_SIZE                 (0x10)     
#define MAX_RACH_REQ                   (0x8)      
#define RR_ALR_MEAS_REPORT_SIZE        (0x7)      
#define LIST_MAX_SIZE                  (0x80)     
#define MAX_REGIONS                    (0x2)      
#define MAX_NUM_BANDS                  (0x5)      
#define LOWER_RXLEV_THRESHOLD          (0x4)      
#define LOWER_RXLEV_THRESHOLD_850      (0x7)      
#define B_GSM_850                      (0x0)      
#define B_GSM_900                      (0x1)      
#define B_DCS_1800                     (0x2)      
#define B_PCS_1900                     (0x3)      
#define B_E_GSM                        (0x4)      
#define FULL_SEARCH_MODE_ATTEMPTS      (0x5)      
#define NORMAL_SEARCH_MODE_ATTEMPTS    (0x5)      
#define TIM_FULL_SEARCH_POWERMEAS_VAL  (0xfa0)    
#define TIM_NORMAL_SEARCH_POWERMEAS_VAL (0xfa0)   
#define MIN_CHANNELS_PER_BAND          (0x19)     
#define MAX_CHANNELS_PER_BAND          (0x1e)     
// CONST-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
#define MAX_NUM_CELLS_IN_REPORT        (0x20)     
// CONST-FF: !REL99 OR !( TI_PS_FF_EMR OR TI_PS_FF_RTD )  
// #define MAX_NUM_CELLS_IN_REPORT        (0x6)   
// CONST-FF: REL99 AND TI_PS_FF_RTD  
#define MAX_NUM_OF_RTD_VALUES          (0x3)      

#include "CDG_LEAVE.h"


#endif
