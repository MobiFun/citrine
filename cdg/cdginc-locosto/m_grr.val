/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : m_grr.val                                                      |
| SOURCE  : "msg\grr.mdf"                                                  |
| LastModified : "2004-09-02"                                              |
| IdAndVersion : "8010.603.019.04"                                         |
| SrcFileTime  : "Wed Nov 28 10:18:58 2007"                                |
| Generated by CCDGEN_2.5.5A on Thu Sep 25 09:18:53 2014                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : NONE
 * COMPATIBILITY_DEFINES  : NO (require PREFIX)
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 * CCDNAME: GRR
 */


#ifndef M_GRR_VAL
#define M_GRR_VAL


#define CDG_ENTER__M_GRR_VAL

#define CDG_ENTER__FILENAME _M_GRR_VAL
#define CDG_ENTER__M_GRR_VAL__FILE_TYPE CDGINC
#define CDG_ENTER__M_GRR_VAL__LAST_MODIFIED _2004_09_02
#define CDG_ENTER__M_GRR_VAL__ID_AND_VERSION _8010_603_019_04

#define CDG_ENTER__M_GRR_VAL__SRC_FILE_TIME _Wed_Nov_28_10_18_58_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__M_GRR_VAL

#undef CDG_ENTER__FILENAME

#include "m_rr_com.val"   /* Access values independent from the corresponding h-file. */


/*
 * Value constants for VAL_ps
 */
#define GRR_NO                         (0x0)      /* not present                    */
#define GRR_YES                        (0x1)      /* present                        */

/*
 * Value constants for VAL_msg_type
 */
#define D_ACCESS_REJ_c                 (0x21)     /* Packet Access Reject           */
#define D_CELL_CHAN_ORDER_c            (0x1)      /* Packet Cell Change Order       */
#define D_DL_ASSIGN_c                  (0x2)      /* Packet Downlink Assignment     */
#define D_MEAS_ORDER_c                 (0x3)      /* Packet Measurement Order       */
#define D_PAGING_REQ_c                 (0x22)     /* Packet Paging Request          */
#define D_PDCH_RELEASE_c               (0x23)     /* Packet PDCH Release            */
#define D_POLLING_REQ_c                (0x4)      /* Packet Polling Request         */
#define D_CTRL_PWR_TA_c                (0x5)      /* Packet Power Control/Timing Advance */
#define D_PRACH_PAR_c                  (0x24)     /* Packet PRACH Parameters        */
#define D_QUEUING_NOT_c                (0x6)      /* Packet Queuing Notification    */
#define D_TS_RECONFIG_c                (0x7)      /* Packet Timeslot Reconfigure    */
#define D_TBF_RELEASE_c                (0x8)      /* Packet TBF Release             */
#define D_UL_ACK_c                     (0x9)      /* Packet Uplink Ack/Nack         */
#define D_UL_ASSIGN_c                  (0xa)      /* Packet Uplink Assignment       */
#define D_PKT_SERV_CELL_DATA_c         (0xd)      /* Packet Serving Cell Data       */
#define D_DL_DUMMY_c                   (0x25)     /* Packet Downlink Dummy Control Block */
#define PSI_1_c                        (0x31)     /* Packet System Information Type 1 */
#define PSI_2_c                        (0x32)     /* Packet System Information Type 2 */
#define PSI_3_c                        (0x33)     /* Packet System Information Type 3 */
#define PSI_3_BIS_c                    (0x34)     /* Packet System Information Type 3 bis */
#define PSI_3_TER_c                    (0x3c)     /* Packet System Information Type 3 ter */
#define PSI_3_QUATER_c                 (0x3d)     /* Packet System Information Type 3 quater */
#define PSI_4_c                        (0x35)     /* Packet System Information Type 4 */
#define PSI_5_c                        (0x36)     /* Packet System Information Type 5 */
#define PSI_6_c                        (0x30)     /* Packet System Information Type 6 */
#define PSI_7_c                        (0x38)     /* Packet System Information Type 7 */
#define PSI_8_c                        (0x39)     /* Packet System Information Type 8 */
#define PSI_13_c                       (0x37)     /* Packet System Information Type 13 */
#define PSI_14_c                       (0x3a)     /* Packet System Information Type 14 */
#define PSI_15_c                       (0x3e)     /* Packet System Information Type 15 */
#define U_CELL_CHAN_FAILURE_c          (0x0)      /* Packet Cell Change Failure     */
#define U_CTRL_ACK_c                   (0x1)      /* Packet Control Acknowledgement */
#define U_DL_ACK_c                     (0x2)      /* Packet Downlink Ack/Nack       */
#define U_UL_DUMMY_c                   (0x3)      /* Packet Uplink Dummy Control Block */
#define U_MEAS_REPORT_c                (0x4)      /* Packet Measurement Report      */
#define U_ENHNC_MEAS_REPORT_c          (0xa)      /* Packet Enhanced Measurement Report */
#define U_RESOURCE_REQ_c               (0x5)      /* Packet Resource Request        */
#define U_MS_TBF_STATUS_c              (0x6)      /* Packet Mobile TBF Status       */
#define U_PKT_PSI_STATUS_MSG_c         (0x7)      /* Packet PSI Status Message      */
#define U_PAUSE_MSG_c                  (0x9)      /* Packet Pause message           */
#define U_ADD_MS_RADIO_CAP_c           (0xb)      /* Additional MS Radio Access Capabilities */
#define U_E_DL_ACK_c                   (0x8)      /* EGPRS Packet Downlink Ack/Nack */
#define U_PKT_SI_STATUS_c              (0xd)      /* Packet SI status message       */
#define U_PKT_CELL_CHANGE_NOTIFICATION_c (0xc)    /* Packet Cell Change Notification */
#define D_PKT_NEIGHBOUR_CELL_DATA_c    (0xc)      /* Packet Neighbour Cell Data     */
#define D_CELL_CHANGE_CONTINUE_c       (0xb)      /* Packet Cell Change Continue    */

/*
 * Value constants for VAL_page_mode
 */
#define NORMAL_PAGING                  (0x0)      /* Normal Paging                  */
#define EXT_PAGING                     (0x1)      /* Extended Paging                */
#define REORG_PAGING                   (0x2)      /* Paging Reorganisation          */
#define SAME_PAGING                    (0x3)      /* Same as before                 */

/*
 * Value constants for VAL_access_type
 */
#define TWO_PHASE                      (0x0)      /* Two Phase Access Request       */
#define PAGE                           (0x1)      /* Page Response                  */
#define CELL_UPDATE                    (0x2)      /* Cell Update                    */
#define MM_PROC                        (0x3)      /* Mobility Management procedure  */

/*
 * Value constants for VAL_chan_coding_cmd
 */
#define VAL_CHAN_CODING_CMD___0        (0x0)      /* CS-1                           */
#define VAL_CHAN_CODING_CMD___1        (0x1)      /* CS-2                           */
#define VAL_CHAN_CODING_CMD___2        (0x2)      /* CS-3                           */
#define VAL_CHAN_CODING_CMD___3        (0x3)      /* CS-4                           */

/*
 * Value constants for VAL_tlli_chan_coding
 */
#define VAL_TLLI_CHAN_CODING___0       (0x0)      /* the MS shall use CS-1 for any RLC data block containing a TLLI in the RLC data block header */
#define VAL_TLLI_CHAN_CODING___1       (0x1)      /* the MS shall use the value commanded in the CHANNEL_CODING_COMMAND for any RLC data block containing a TLLI in the RLC data block header */

/*
 * Value constants for VAL_mac_mode
 */
#define DYNAMIC_ALLOCATION             (0x0)      /* Dynamic allocation             */
#define EXT_DYNAMIC_ALLOCATION         (0x1)      /* Extended Dynamic allocation    */
#define FIXED_ALLOCATION               (0x2)      /* Fixed allocation, not half duplex mode */
#define FA_HALF_DUPLEX                 (0x3)      /* Fixed allocation, half duplex mode */

/*
 * Value constants for VAL_rlc_mode
 */
#define VAL_RLC_MODE___0               (0x0)      /* RLC acknowledged mode          */
#define VAL_RLC_MODE___1               (0x1)      /* RLC unacknowledged mode        */

/*
 * Value constants for VAL_pctrl_ack
 */
#define VAL_PCTRL_ACK___0              (0x0)      /* in case the message is sent in access burst format, the same meaning as for the value '11' except that the mobile station is requesting new TBF. Otherwise the bit value '00' is reserved and shall not be sent. If received it shall be intepreted as bit value '01'. */
#define VAL_PCTRL_ACK___1              (0x1)      /* the MS received an RLC/MAC control block addressed to itself and with RBSN = 1, and did not receive an RLC/MAC control block with the same RTI value and RBSN = 0. */
#define VAL_PCTRL_ACK___2              (0x2)      /* the MS received an RLC/MAC control block addressed to itself and with RBSN = 0, and did not receive an RLC/MAC control block with the same RTI value and RBSN = 1. This value is sent irrespective of the value of the FS bit. */
#define VAL_PCTRL_ACK___3              (0x3)      /* the MS received two RLC/MAC blocks with the same RTI value, one with RBSN = 0 and the other with RBSN = 1. */

/*
 * Value constants for VAL_rel_cause
 */
#define NORMAL_RELEASE                 (0x0)      
#define ABNORMAL_RELEASE               (0x2)      

/*
 * Value constants for VAL_psi_change_field
 */
#define UPDATE_UNS_PSI                 (0x0)      /* Update of unspecified PSI message(s); */
#define UPDATE_UNKNOWN                 (0x1)      /* Unknown                        */
#define UPDATE_PSI2                    (0x2)      /* PSI2 updated                   */
#define UPDATE_PSI3                    (0x3)      /* PSI3/PSI3bis updated           */
#define UPDATE_PSI4                    (0x4)      /* PSI4 updated                   */
#define UPDATE_PSI5                    (0x5)      /* PSI5 updated                   */
#define UPDATE_PSI8                    (0x8)      /* PSI8 updated                   */

/*
 * Value constants for VAL_si_change_ma
 */
#define VAL_SI_CHANGE_MA___DEF         (0x0)      /* update of unknown SI message type */
#define VAL_SI_CHANGE_MA___0           (0x0)      /* Update of unspecified SI message or SI messages; */
#define VAL_SI_CHANGE_MA___1           (0x1)      /* Update of SI1 message;         */
#define VAL_SI_CHANGE_MA___2           (0x2)      /* Update of SI2, SI2 bis or SI2 ter message; */
#define VAL_SI_CHANGE_MA___3           (0x3)      /* Update of SI3, SI4, SI7 or SI8 message; */
#define VAL_SI_CHANGE_MA___4           (0x4)      /* Update of SI9 message;         */
#define VAL_SI_CHANGE_MA___5           (0x5)      /* Update of SI15 message;        */

/*
 * Value constants for VAL_failure_cause
 */
#define VAL_FAILURE_CAUSE___DEF        (0x0)      /* Immediate Assign Reject or Packet Access Reject on target cell */
#define Freq_Not_Impl                  (0x0)      /* Frequency not implemented      */
#define No_Resp_On_Target_Cell         (0x1)      /* No response on target cell     */
#define ImAssign_Rej_OR_Packet_Acc_Rej (0x2)      /* Immediate Assign Reject or Packet Access Reject on target cell */
#define On_Going_Cs_Connection         (0x3)      /* On going CS connection         */
#define MS_IN_GMM_Standby_State        (0x5)      /* MS in GMM Standby State        */
#define Forced_To_GMM_Standby_State    (0x6)      /* Forced to the Standby State    */

/*
 * Value constants for VAL_ctrl_order
 */
#define NCMEAS_NC0                     (0x0)      /* NC0                            */
#define NCMEAS_NC1                     (0x1)      /* NC1                            */
#define NCMEAS_NC2                     (0x2)      /* NC2                            */
#define NCMEAS_RESET                   (0x3)      /* RESET                          */

/*
 * Value constants for VAL_alpha
 */
#define VAL_ALPHA___0                  (0x0)      /* Alpha = 0.0                    */
#define VAL_ALPHA___1                  (0x1)      /* Alpha = 0.1                    */
#define VAL_ALPHA___2                  (0x2)      /* Alpha = 0.2                    */
#define VAL_ALPHA___3                  (0x3)      /* Alpha = 0.3                    */
#define VAL_ALPHA___4                  (0x4)      /* Alpha = 0.4                    */
#define VAL_ALPHA___5                  (0x5)      /* Alpha = 0.5                    */
#define VAL_ALPHA___6                  (0x6)      /* Alpha = 0.6                    */
#define VAL_ALPHA___7                  (0x7)      /* Alpha = 0.7                    */
#define VAL_ALPHA___8                  (0x8)      /* Alpha = 0.8                    */
#define VAL_ALPHA___9                  (0x9)      /* Alpha = 0.9                    */
#define VAL_ALPHA___A                  (0xa)      /* Alpha = 1.0                    */

/*
 * Value constants for VAL_pb
 */
#define VAL_PB___0                     (0x0)      /* PB = 0 dB                      */
#define VAL_PB___1                     (0x1)      /* PB = -2 dB                     */
#define VAL_PB___2                     (0x2)      /* PB = -4 dB                     */
#define VAL_PB___3                     (0x3)      /* PB = -6 dB                     */
#define VAL_PB___4                     (0x4)      /* PB = -8 dB                     */
#define VAL_PB___5                     (0x5)      /* PB = -10 dB                    */
#define VAL_PB___6                     (0x6)      /* PB = -12 dB                    */
#define VAL_PB___7                     (0x7)      /* PB = -14 dB                    */
#define VAL_PB___8                     (0x8)      /* PB = -16 dB                    */
#define VAL_PB___9                     (0x9)      /* PB = -18 dB                    */
#define VAL_PB___A                     (0xa)      /* PB = -20 dB                    */
#define VAL_PB___B                     (0xb)      /* PB = -22 dB                    */
#define VAL_PB___C                     (0xc)      /* PB = -24 dB                    */
#define VAL_PB___D                     (0xd)      /* PB = -26 dB                    */
#define VAL_PB___E                     (0xe)      /* PB = -28 dB                    */
#define VAL_PB___F                     (0xf)      /* PB = -30 dB                    */

/*
 * Value constants for VAL_pc_meas_chan
 */
#define MEAS_PWR_BCCH                  (0x0)      /* downlink measurements for power control shall be made on BCCH */
#define MEAS_PWR_PDCH                  (0x1)      /* downlink measurements for power control shall be made on PDCH */

/*
 * Value constants for VAL_imeas_chan_list
 */
#define PSI4_NOT_BROADCASTED           (0x0)      
#define PSI4_BROADCASTED               (0x1)      

/*
 * Value constants for VAL_chan_need
 */
#define VAL_CHAN_NEED___0              (0x0)      /* Any channel                    */
#define VAL_CHAN_NEED___1              (0x1)      /* SDCCH                          */
#define VAL_CHAN_NEED___2              (0x2)      /* TCH/F (Full rate)              */
#define VAL_CHAN_NEED___3              (0x3)      /* TCH/H or TCH/F                 */

/*
 * Value constants for VAL_ecsc
 */
#define VAL_ECSC___0                   (0x0)      /* Early Classmark Sending is forbidden */
#define VAL_ECSC___1                   (0x1)      /* Early Classmark Sending is allowed */

/*
 * Value constants for VAL_ecsr_3g
 */
#define VAL_ECSR_3G___0                (0x0)      /* Neither UTRAN nor cdma2000 classmark change message shall be sent with the Early Classmark Sending */
#define VAL_ECSR_3G___1                (0x1)      /* The sending of UTRAN and CDMA2000 Classmark Sending messages is controlled by the Early Classmark Sending Control parameter */

/*
 * Value constants for VAL_tx_int
 */
#define VAL_TX_INT___0                 (0x0)      /* 2 slots used to spread transmission */
#define VAL_TX_INT___1                 (0x1)      /* 3 slots used to spread transmission */
#define VAL_TX_INT___2                 (0x2)      /* 4 slots used to spread transmission */
#define VAL_TX_INT___3                 (0x3)      /* 5 slots used to spread transmission */
#define VAL_TX_INT___4                 (0x4)      /* 6 slots used to spread transmission */
#define VAL_TX_INT___5                 (0x5)      /* 7 slots used to spread transmission */
#define VAL_TX_INT___6                 (0x6)      /* 8 slots used to spread transmission */
#define VAL_TX_INT___7                 (0x7)      /* 9 slots used to spread transmission */
#define VAL_TX_INT___8                 (0x8)      /* 10 slots used to spread transmission */
#define VAL_TX_INT___9                 (0x9)      /* 12 slots used to spread transmission */
#define VAL_TX_INT___A                 (0xa)      /* 14 slots used to spread transmission */
#define VAL_TX_INT___B                 (0xb)      /* 16 slots used to spread transmission */
#define VAL_TX_INT___C                 (0xc)      /* 20 slots used to spread transmission */
#define VAL_TX_INT___D                 (0xd)      /* 25 slots used to spread transmission */
#define VAL_TX_INT___E                 (0xe)      /* 32 slots used to spread transmission */
#define VAL_TX_INT___F                 (0xf)      /* 50 slots used to spread transmission */

/*
 * Value constants for VAL_s_prach
 */
#define VAL_S_PRACH___DEF              (0x0)      /* reserved                       */
#define VAL_S_PRACH___0                (0x0)      /* S=12                           */
#define VAL_S_PRACH___1                (0x1)      /* S=15                           */
#define VAL_S_PRACH___2                (0x2)      /* S=20                           */
#define VAL_S_PRACH___3                (0x3)      /* S=30                           */
#define VAL_S_PRACH___4                (0x4)      /* S=41                           */
#define VAL_S_PRACH___5                (0x5)      /* S=55                           */
#define VAL_S_PRACH___6                (0x6)      /* S=76                           */
#define VAL_S_PRACH___7                (0x7)      /* S=109                          */
#define VAL_S_PRACH___8                (0x8)      /* S=163                          */
#define VAL_S_PRACH___9                (0x9)      /* S=217                          */

/*
 * Value constants for VAL_max_retrans
 */
#define VAL_MAX_RETRANS___0            (0x0)      /* 1 retransmission allowed       */
#define VAL_MAX_RETRANS___1            (0x1)      /* 2 retransmission allowed       */
#define VAL_MAX_RETRANS___2            (0x2)      /* 4 retransmission allowed       */
#define VAL_MAX_RETRANS___3            (0x3)      /* 7 retransmission allowed       */

/*
 * Value constants for VAL_radio_prio
 */
#define VAL_RADIO_PRIO___0             (0x0)      /* Radio Priority 1 (Highest priority) */
#define VAL_RADIO_PRIO___1             (0x1)      /* Radio Priority 2               */
#define VAL_RADIO_PRIO___2             (0x2)      /* Radio Priority 3               */
#define VAL_RADIO_PRIO___3             (0x3)      /* Radio Priority 4 (Lower priority) */

/*
 * Value constants for VAL_llc_pdu_type
 */
#define VAL_LLC_PDU_TYPE___0           (0x0)      /* LLC PDU is SACK or ACK         */
#define VAL_LLC_PDU_TYPE___1           (0x1)      /* LLC PDU is not SACK or ACK     */

/*
 * Value constants for VAL_bs_pbcch_blks
 */
#define VAL_BS_PBCCH_BLKS___0          (0x0)      /* B0 is used for PBCCH           */
#define VAL_BS_PBCCH_BLKS___1          (0x1)      /* B0, B6 is used for PBCCH       */
#define VAL_BS_PBCCH_BLKS___2          (0x2)      /* B0, B6, B3 is used for PBCCH   */
#define VAL_BS_PBCCH_BLKS___3          (0x3)      /* B0, B6, B3, B9 is used for PBCCH */

/*
 * Value constants for VAL_bs_prach_blks
 */
#define VAL_BS_PRACH_BLKS___0          (0x0)      /* No block is reserved for PRACH (default) */
#define VAL_BS_PRACH_BLKS___1          (0x1)      /* B0 is used for PRACH           */
#define VAL_BS_PRACH_BLKS___2          (0x2)      /* B0, B6 is used for PRACH       */
#define VAL_BS_PRACH_BLKS___3          (0x3)      /* B0, B6, B3 is used for PRACH   */
#define VAL_BS_PRACH_BLKS___4          (0x4)      /* B0, B6, B3, B9 is used for PRACH */
#define VAL_BS_PRACH_BLKS___5          (0x5)      /* B0, B6, B3, B9, B1 is used for PRACH */
#define VAL_BS_PRACH_BLKS___6          (0x6)      /* B0, B6, B3, B9, B1, B7 is used for PRACH */
#define VAL_BS_PRACH_BLKS___7          (0x7)      /* B0, B6, B3, B9, B1, B7, B4 is used for PRACH */
#define VAL_BS_PRACH_BLKS___8          (0x8)      /* B0, B6, B3, B9, B1, B7, B4, B10 is used for PRACH */
#define VAL_BS_PRACH_BLKS___9          (0x9)      /* B0, B6, B3, B9, B1, B7, B4, B10, B2 is used for PRACH */
#define VAL_BS_PRACH_BLKS___A          (0xa)      /* B0, B6, B3, B9, B1, B7, B4, B10, B2, B8 is used for PRACH */
#define VAL_BS_PRACH_BLKS___B          (0xb)      /* B0, B6, B3, B9, B1, B7, B4, B10, B2, B8, B5 is used for PRACH */
#define VAL_BS_PRACH_BLKS___C          (0xc)      /* B0, B6, B3, B9, B1, B7, B4, B10, B2, B8, B5, B11 is used for PRACH */

/*
 * Value constants for VAL_cell_ba
 */
#define CR_ALLOWED                     (0x0)      /* Status for cell reselection is set to normal; */
#define CR_NOT_WED                     (0x1)      /* Status for cell reselection is set to barred. */

/*
 * Value constants for VAL_gprs_resel_off
 */
#define GPRS_RESEL_OFF_DEFAULT         (0x10)     /* Default value                  */
#define GPRS_RESEL_OFF_INVALID         (0xff)     /* This value is used to indicate the absence of this parameter */

/*
 * Value constants for VAL_si13_loc
 */
#define BCCH_NORM                      (0x0)      
#define BCCH_EXT                       (0x1)      

/*
 * Value constants for VAL_pbcch_loc
 */
#define PBCCH_TN1                      (0x0)      
#define PBCCH_TN2                      (0x1)      
#define PBCCH_TN3                      (0x2)      
#define PBCCH_TN4                      (0x3)      

/*
 * Value constants for VAL_gprs_prio_class
 */
#define GPRS_PRIORITY_CLASS_INVALID    (0xff)     /* This value is used to indicate the absence of this parameter */

/*
 * Value constants for VAL_gprs_hcs_thr
 */
#define GPRS_HCS_THR_INVALID           (0xff)     /* This value is used to indicate the absence of this parameter */

/*
 * Value constants for VAL_gprs_rxlev_access_min
 */
#define GPRS_RXLEV_ACCESS_MIN_INVALID  (0xff)     /* This value is used to indicate the absence of this parameter */

/*
 * Value constants for VAL_txpwr_max_cch
 */
#define GPRS_MS_TXPWR_MAX_CCH_INVALID  (0xff)     /* This value is used to indicate the absence of this parameter */

/*
 * Value constants for VAL_gprs_temp_offset
 */
#define GPRS_TEMPORARY_OFFSET_00_DB    (0x0)      /* 0 dB                           */
#define GPRS_TEMPORARY_OFFSET_10_DB    (0x1)      /* 10 dB                          */
#define GPRS_TEMPORARY_OFFSET_20_DB    (0x2)      /* 20 dB                          */
#define GPRS_TEMPORARY_OFFSET_30_DB    (0x3)      /* 30 dB                          */
#define GPRS_TEMPORARY_OFFSET_40_DB    (0x4)      /* 40 dB                          */
#define GPRS_TEMPORARY_OFFSET_50_DB    (0x5)      /* 50 dB                          */
#define GPRS_TEMPORARY_OFFSET_60_DB    (0x6)      /* 60 dB                          */
#define GPRS_TEMPORARY_OFFSET_INFINITY (0x7)      /* infinity                       */
#define GPRS_TEMPORARY_OFFSET_INVALID  (0xff)     /* This value is used to indicate the absence of this parameter */

/*
 * Value constants for VAL_gprs_penalty_time
 */
#define GPRS_PENALTY_TIME_MAX          (0x1f)     /* Maximum value of GPRS_PENALTY_TIME */
#define GPRS_PENALTY_TIME_INVALID      (0xff)     /* This value is used to indicate the absence of this parameter */

/*
 * Value constants for VAL_waitsize
 */
#define WAIT_1S                        (0x0)      /* field is coded in units of seconds */
#define WAIT_20ms                      (0x1)      /* field is coded in units of 20 ms */

/*
 * Value constants for VAL_bl_o_bl_per
 */
#define BLOCKS                         (0x0)      /* ALLOCATION_BITMAP is to be interpreted as blocks */
#define BLOCK_PERIODS                  (0x1)      /* ALLOCATION_BITMAP is to be interpreted as block periods */

/*
 * Value constants for VAL_att
 */
#define CCD_ATT_NO                     (0x0)      /* MSs are not allowed to apply IMSI attach and detach proc. */
#define CCD_ATT_YES                    (0x1)      /* MSs in the cell shall apply IMSI attach and detach procedure. */

/*
 * Value constants for VAL_neci
 */
#define NECI_NO                        (0x0)      /* New establishment causes are not supported */
#define NECI_YES                       (0x1)      /* New establishment causes are supported */

/*
 * Value constants for VAL_pwcr
 */
#define POW_CTRL_NO                    (0x0)      /* PWRC is not set                */
#define POW_CTRL_YES                   (0x1)      /* PWRC is set                    */

/*
 * Value constants for VAL_dtx
 */
#define VAL_DTX___DEF                  (0x0)      /* invalid DTX indicator          */
#define B_DTX_MAY_USE                  (0x0)      /* The MSs may use uplink DTX     */
#define B_DTX_SHALL_USE                (0x1)      /* The MSs shall use uplink DTX   */
#define B_DTX_DONT_USE                 (0x2)      /* The MS shall not use uplink DTX */

/*
 * Value constants for VAL_rfl_num
 */
#define RFL_NUMBER_4_DL_CTRL_MSG_MAX   (0xf)      /* Maximum value for RFL_NUMBER when included in a downlink RLC/MAC control messsage. */

/*
 * Value constants for VAL_rab_acc_re
 */
#define GRR_RA_RETRY_DISABLED          (0x0)      /* access to another cell is not allowed */
#define GRR_RA_RETRY_ENABLED           (0x1)      /* access to another cell is allowed */

/*
 * Value constants for VAL_t_resel
 */
#define GRR_T_RESEL_DEFAULT            (0x0)      /* 5 seconds                      */
#define VAL_T_RESEL___1                (0x1)      /* 10 seconds                     */
#define VAL_T_RESEL___2                (0x2)      /* 15 seconds                     */
#define VAL_T_RESEL___3                (0x3)      /* 20 seconds                     */
#define VAL_T_RESEL___4                (0x4)      /* 30 seconds                     */
#define VAL_T_RESEL___5                (0x5)      /* 60 seconds                     */
#define VAL_T_RESEL___6                (0x6)      /* 120 seconds                    */
#define VAL_T_RESEL___7                (0x7)      /* 300 seconds                    */

/*
 * Value constants for VAL_non_drx_per
 */
#define NC_NON_DRX_PER_DEFAULT         (0x2)      /* Non-DRX mode period default value (0.48 sec) */

/*
 * Value constants for VAL_rep_per_i
 */
#define NC_REP_PER_T_DEFAULT           (0x3)      /* Reporting period default value in packet transfer mode */
#define NC_REP_PER_I_DEFAULT           (0x7)      /* Reporting period default value in packet idle mode */

/*
 * Value constants for VAL_xrep_per
 */
#define EXT_REP_PER_DEFAULT            (0x5)      /* Reporting period default value */

/*
 * Value constants for VAL_xrep_type
 */
#define XREP_TYPE1                     (0x0)      /* Type 1 measurement reporting   */
#define XREP_TYPE2                     (0x1)      /* Type 2 measurement reporting   */
#define XREP_TYPE3                     (0x2)      /* Type 3 measurement reporting   */
#define XREP_RESERVED                  (0x3)      /* Reserved                       */

/*
 * Value constants for VAL_prio_acc_thr
 */
#define P_NOT_ALLOWED                  (0x0)      /* packet access is not allowed in the cell; */
#define VAL_PRIO_ACC_THR___1           (0x1)      /* spare, shall be interpreted as '000' (packet access not allowed); */
#define VAL_PRIO_ACC_THR___2           (0x2)      /* spare, shall be interpreted as '000' (packet access not allowed); */
#define P_PRIO1                        (0x3)      /* packet access is allowed for priority level 1; */
#define P_PRIO2                        (0x4)      /* packet access is allowed for priority level 1 to 2; */
#define P_PRIO3                        (0x5)      /* packet access is allowed for priority level 1 to 3; */
#define P_PRIO4                        (0x6)      /* packet access is allowed for priority level 1 to 4; */
#define VAL_PRIO_ACC_THR___7           (0x7)      /* shall be interpreted as '110' (packet access allowed). */

/*
 * Value constants for VAL_spgc_ccch_sup
 */
#define SPLIT_PG_CYCLE_NOT_SUPPORTED   (0x0)      
#define SPLIT_PG_CYCLE_SUPPORTED       (0x1)      

/*
 * Value constants for VAL_nc_mode
 */
#define NCMODE_NC1                     (0x0)      /* Mobile station in mode NC1     */
#define NCMODE_NC2                     (0x1)      /* Mobile station in mode NC2     */

/*
 * Value constants for VAL_xdyn_alloc
 */
#define DYNAMIC_ALLOC                  (0x0)      /* Dynamic Allocation             */
#define EXT_DYNAMIC_ALLOC              (0x1)      /* Extended Dynamic Allocation    */

/*
 * Value constants for VAL_usf_grant
 */
#define ONE_RLC_BLOCK                  (0x0)      /* the ms shall transmit one RLC/MAC block */
#define FOUR_C_RLC_BLOCKS              (0x1)      /* the ms shall transmit four consecutive RLC/MAC blocks */

/*
 * Value constants for VAL_rbb
 */
#define INVALID                        (0x0)      /* Negative Ack of the RLC data block with BSN=(SSN-bit_nr)mod128 */
#define RECEIVED                       (0x1)      /* Positive Ack of the RLC data block with BSN=(SSN-bit_nr)mod128 */

/*
 * Value constants for VAL_f_ack_ind
 */
#define VAL_F_ACK_IND___0              (0x0)      /* retransmission are requested and the TBF is incomplete */
#define VAL_F_ACK_IND___1              (0x1)      /* no retransmissions are requested and this message indicates acknowledgement of all RLC data in the TBF */

/*
 * Value constants for VAL_im_rel_c0
 */
#define VAL_IM_REL_C0___0              (0x0)      /* Same procedure as for an autonomous cell reselection */
#define VAL_IM_REL_C0___1              (0x1)      /* Immediate release of the on-going TBF */

/*
 * Value constants for VAL_mode
 */
#define MODE_A                         (0x0)      
#define MODE_B                         (0x1)      

/*
 * Value constants for VAL_tbf_cause
 */
#define VAL_TBF_CAUSE___DEF            (0x0)      /* Status, unspecified            */
#define VAL_TBF_CAUSE___0              (0x0)      /* Normal event                   */
#define VAL_TBF_CAUSE___1              (0x1)      /* Status, unspecified            */
#define VAL_TBF_CAUSE___2              (0x2)      /* Syntactically incorrect message, non-distribution part error */
#define VAL_TBF_CAUSE___3              (0x3)      /* Syntactically incorrect message, message escape */
#define VAL_TBF_CAUSE___4              (0x4)      /* Message not compatible with current protocol state */

/*
 * Value constants for VAL_psi_status_ind
 */
#define NO_PSI_STATUS_SUPPORT          (0x0)      
#define PSI_STATUS_SUPPORT             (0x1)      

/*
 * Value constants for VAL_multi_band_rep
 */
#define GRR_MULTIBAND_REPORTING_0      (0x0)      /* normal operation               */
#define GRR_MULTIBAND_REPORTING_1      (0x1)      /* one cell of the non-serving cell band */
#define GRR_MULTIBAND_REPORTING_2      (0x2)      /* two cells of the non-serving cell band */
#define GRR_MULTIBAND_REPORTING_3      (0x3)      /* three cells of the non-serving cell band */

/*
 * Value constants for VAL_pr_mode
 */
#define PR_MODE_A_ONE                  (0x0)      /* for one address MS             */
#define PR_MODE_B_ALL                  (0x1)      /* for all MS                     */

/*
 * Value constants for VAL_xmeas_order
 */
#define XMEAS_EM0                      (0x0)      /* EM0                            */
#define XMEAS_EM1                      (0x1)      /* EM1                            */
#define XMEAS_RESERVED                 (0x2)      /* Reserved                       */
#define XMEAS_RESET                    (0x3)      /* RESET                          */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_add_ms_rac
 */
#define ADD_MS_RAC_INFO_AVAIL_0        (0x0)      /* indicates that MS will not send more information about its radio access capabilities than included in this message */
#define ADD_MS_RAC_INFO_AVAIL_1        (0x1)      /* indicates that MS will send more information about its radio access capabilities in the next control message */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_retrans_of_prr
 */
#define RETRANS_OF_PRR_0               (0x0)      /* indicates that this message is an initial Packet Resource Request */
#define RETRANS_OF_PRR_1               (0x1)      /* indicates that this message is a retransmitted Packet Resource Request: in this case the corresponding PRR message shall not be interpreted as a request for resource reassignment. */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_tbf_est
 */
#define TBF_EST_NOT_ALLOWED_0          (0x0)      /* the mobile station is not allowed to request the establishment of new TBF */
#define TBF_EST_ALLOWED_1              (0x1)      /* the mobile station is allowed to request the establishment of new TBF */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_mscr
 */
#define MSCR_98_0                      (0x0)      /* The MSC is Release '98 or older */
#define MSCR_99_1                      (0x1)      /* The MSC is Release '99 onwards */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_sgsnr
 */
#define SGSNR_98_0                     (0x0)      /* The SGSN is Release '98 or older */
#define SGSNR_99_1                     (0x1)      /* The SGSN is Release '99 onwards */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_band_indicator
 */
#define BAND_IND_1800_0                (0x0)      /* ARFCN indicates 1800 band      */
#define BAND_IND_1900_1                (0x1)      /* ARFCN indicates 1900 band      */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_non_gsm_info
 */
#define NON_GSM_NOT_BROAD              (0x0)      /* non-GSM information is not broadcast on the cell */
#define NON_GSM_BROAD_PSI6             (0x1)      /* non-GSM information is broadcast on the cell in PSI6 message */
#define NON_GSM_BROAD_PSI7             (0x2)      /* non-GSM information is broadcast on the cell in PSI7 message */
#define NON_GSM_BROAD_PSI6_PSI7        (0x3)      /* non-GSM information is broadcast on the cell in PSI6 and PSI7 messages */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_Psi8_broadcast
 */
#define PSI8_NOT_BROAD                 (0x0)      /* PSI8 is not broadcast on the cell */
#define PSI8_BROAD                     (0x1)      /* PSI8 is broadcast on the cell  */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_psi3ter_broadcast
 */
#define PSI3ter_NOT_BROAD              (0x0)      /* PSI3ter is not broadcast on the cell */
#define PSI3ter_BROAD                  (0x1)      /* PSI3ter is broadcast on the cell */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_psi3quater_broadcast
 */
#define PSI3quater_NOT_BROAD           (0x0)      /* PSI3quater is not broadcast on the cell */
#define PSI3quater_BROAD               (0x1)      /* PSI3quaer is broadcast on the cell */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_invalid_bsic_rep
 */
#define INVALID_BSIC_REPORT_N_A        (0x0)      /* Report on cells with invalid BSIC and allowed NCC part of BSIC is not allowed */
#define INVALID_BSIC_REPORT_OK         (0x1)      /* Report on cells with invalid BSIC and allowed NCC part of BSIC is allowed. In this case NCC_PERMITTED is required */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_reporting_type
 */
#define REPORT_TYPE_ENH_REP            (0x0)      /* The MS shall use the PACKET ENHANCED MEASUREMENT REPORT message for (NC) reporting */
#define REPORT_TYPE_REP                (0x1)      /* The MS shall use the PACKET MEASUREMENT REPORT message for (NC) reporting. */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_reporting_rate
 */
#define REPORTING_RATE_NORMAL          (0x0)      /* normal rate reporting          */
#define REPORTING_RATE_REDUCED         (0x1)      /* Reduced reporting rate allowed. */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_diversity
 */
#define DIVERSITY_OFF                  (0x0)      /* Diversity is not applied for this cell */
#define DIVERSITY_ON                   (0x1)      /* Diversity is applied for this cell. */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_bandwidth_tdd
 */
#define MCPS_3_84                      (0x0)      /* Speed_3.84Mcps                 */
#define MCPS_1_28                      (0x1)      /* Speed_1.28Mcps                 */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_fdd_indic_0
 */
#define FDD_PAR_VAL_0_NOT_MEMB         (0x0)      /* parameter value '0000000000' is not a member of the set */
#define FDD_PAR_VAL_0_MEMB             (0x1)      /* parameter value '0000000000' is a member of the set */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_tdd_indic_0
 */
#define TDD_PAR_VAL_0_NOT_MEMB         (0x0)      /* parameter value '0000000000' is not a member of the set */
#define TDD_PAR_VAL_0_MEMB             (0x1)      /* parameter value '0000000000' is a member of the set */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_rep_prio
 */
#define NORMAL_PRIO                    (0x0)      /* Normal reporting priority      */
#define HIGH_PRIO                      (0x1)      /* High reporting priority        */

/*
 * Value constants for VAL_non_gsm_pro_disc
 */
#define TIA_EIA136                     (0x1)      /* TIA/EIA-136 -All other values are reserved */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_bsic_seen
 */
#define NO_CELL_SEEN                   (0x0)      /* No cell with invalid BSIC and allowed NCC part of BSIC is seen */
#define ONE_CELL_SEEN                  (0x1)      /* One cell or more with invalid BSIC and allowed NCC part of BSIC is seen */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_lqm_mode
 */
#define NOT_REPORT_IM_OR_BEP           (0x0)      
#define REPORT_IM_NOT_BEP              (0x1)      
#define REPORT_BEP_NOT_IM              (0x2)      
#define REPORT_BEP_AND_IM              (0x3)      

/*
 * Value constants for VAL_reduced_ma_bitmap
 */
#define CORRSP_RA_FREQ_NOT_BELONG_TO_RED_MA (0x0) /* the corresponding radio frequency channel does not belong to the reduced MA; */
#define CORRSP_RA_FREQ_BELONG_TO_RED_MA (0x1)     /* the corresponding radio frequency channel belongs to the reduced MA. */

// VALTAB-FF: REL99 AND FF_EGPRS 
// 
// Value constants for VAL_egprs_chan_coding_cmd
// 
// #define MCS1                           (0x0)   /* MCS-1                          */
// #define MCS2                           (0x1)   /* MCS-2                          */
// #define MCS3                           (0x2)   /* MCS-3                          */
// #define MCS4                           (0x3)   /* MCS-4                          */
// #define MCS5                           (0x4)   /* MCS-5                          */
// #define MCS6                           (0x5)   /* MCS-6                          */
// #define MCS7                           (0x6)   /* MCS-7                          */
// #define MCS8                           (0x7)   /* MCS-8                          */
// #define MCS9                           (0x8)   /* MCS-9                          */
// #define MCS5_7                         (0x9)   /* MCS-5-7                        */
// #define MCS6_9                         (0xa)   /* MCS-6-9                        */

// VALTAB-FF: REL99 AND FF_EGPRS 
// 
// Value constants for VAL_Choice_flag
// 
// #define GRR_CHOICE_00                  (0x0)   
// #define GRR_CHOICE_01                  (0x1)   
// #define GRR_CHOICE_10                  (0x2)   
// #define GRR_CHOICE_11                  (0x3)   

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_egprs_ws
 */
#define EGPRS_WS_64                    (0x0)      
#define EGPRS_WS_96                    (0x1)      
#define EGPRS_WS_128                   (0x2)      
#define EGPRS_WS_160                   (0x3)      
#define EGPRS_WS_192                   (0x4)      /* (maximum window size for a 1 timeslot TBF) */
#define EGPRS_WS_224                   (0x5)      
#define EGPRS_WS_256                   (0x6)      /* (maximum window size for a 2 timeslot TBF) */
#define EGPRS_WS_288                   (0x7)      
#define EGPRS_WS_320                   (0x8)      
#define EGPRS_WS_352                   (0x9)      
#define EGPRS_WS_384                   (0xa)      /* (maximum window size for a 3 timeslot TBF) */
#define EGPRS_WS_416                   (0xb)      
#define EGPRS_WS_448                   (0xc)      
#define EGPRS_WS_480                   (0xd)      
#define EGPRS_WS_512                   (0xe)      /* (maximum window size for a 4 timeslot TBF) */
#define EGPRS_WS_544                   (0xf)      
#define EGPRS_WS_576                   (0x10)     
#define EGPRS_WS_608                   (0x11)     
#define EGPRS_WS_640                   (0x12)     /* (maximum window size for a 5 timeslot TBF) */
#define EGPRS_WS_672                   (0x13)     
#define EGPRS_WS_704                   (0x14)     
#define EGPRS_WS_736                   (0x15)     
#define EGPRS_WS_768                   (0x16)     /* (maximum window size for a 6 timeslot TBF) */
#define EGPRS_WS_800                   (0x17)     
#define EGPRS_WS_832                   (0x18)     
#define EGPRS_WS_864                   (0x19)     
#define EGPRS_WS_896                   (0x1a)     /* (maximum window size for a 7 timeslot TBF) */
#define EGPRS_WS_928                   (0x1b)     
#define EGPRS_WS_960                   (0x1c)     
#define EGPRS_WS_992                   (0x1d)     
#define EGPRS_WS_1024                  (0x1e)     /* (maximum window size for a 8 timeslot TBF) */

// VALTAB-FF: REL99 AND FF_EGPRS 
// 
// Value constants for VAL_tlli_bcc
// 
// #define TLLI_BCC_DEFAULT               (0x0)   /* the mobile station shall use CS-1 in GPRS TBF mode and MCS-1 in EGPRS TBF mode */
// #define TLLI_BCC_COMMANDED             (0x1)   /* the mobile station shall use the value commanded in the CHANNEL_CODING_COMMAND or EGPRS_CHANNEL_CODING_COMMAND field */

/*
 * Value constants for VAL_cbmp_color_code
 */
#define CRBB_CW_0                      (0x0)      /* First code word in CRBB represents run length of zeros */
#define CRBB_CW_1                      (0x1)      /* First code word in CRBB represents run length of ones */

/*
 * Value constants for VAL_generation
 */
#define GENERATION_DEFAULT             (0x0)      /* Default value for parameter generation. */

/*
 * Value constants for VAL_ctrl_ack_type
 */
#define VAL_CTRL_ACK_TYPE___0          (0x0)      /* default format is four access bursts */
#define VAL_CTRL_ACK_TYPE___1          (0x1)      /* default format is RLC/MAC control block. */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_scale_ord
 */
#define SCALE_0dB                      (0x0)      /* Scaling by 0dB                 */
#define SCALE_10dB                     (0x1)      /* Scaling by 10dB                */
#define SCALE_AUTO                     (0x2)      /* Automatic scaling              */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_rep_thres
 */
#define REP_THRESHOLD_0                (0x0)      /* 0 dB                           */
#define REP_THRESHOLD_6                (0x1)      /* 6 dB                           */
#define REP_THRESHOLD_12               (0x2)      /* 12 dB                          */
#define REP_THRESHOLD_18               (0x3)      /* 18 dB                          */
#define REP_THRESHOLD_24               (0x4)      /* 24 dB                          */
#define REP_THRESHOLD_30               (0x5)      /* 30 dB                          */
#define REP_THRESHOLD_36               (0x6)      /* 36 dB                          */
#define REP_THRESHOLD_INF              (0x7)      /* Infinite value                 */

// VALTAB-FF: REL99 AND ( TI_PS_FF_EMR OR TI_PS_FF_RTD ) 
/*
 * Value constants for VAL_rep_offset
 */
#define REP_OFFSET_0                   (0x0)      /* 0 dB                           */
#define REP_OFFSET_6                   (0x1)      /* 6 dB                           */
#define REP_OFFSET_12                  (0x2)      /* 12 dB                          */
#define REP_OFFSET_18                  (0x3)      /* 18 dB                          */
#define REP_OFFSET_24                  (0x4)      /* 24 dB                          */
#define REP_OFFSET_30                  (0x5)      /* 30 dB                          */
#define REP_OFFSET_36                  (0x6)      /* 36 dB                          */
#define REP_OFFSET_42                  (0x7)      /* 42 dB                          */

// VALTAB-FF: REL4 
// 
// Value constants for VAL_ccn_active
// 
// #define VAL_CCN_ACTIVE___0             (0x0)   /* CCN is disabled towards the corresponding cell(but if the broadcast parameter are present then follow broadcasted ccn_active) */
// #define VAL_CCN_ACTIVE___1             (0x1)   /* CCN is enabled towards the corresponding cell */

/*
 * Value constants for VAL_psi_status
 */
#define PSI_STATUS_NOT_SUPPORTED       (0x0)      /* The network does not support the PACKET SI STATUS message */
#define PSI_STATUS_SUPPORTED           (0x1)      /* The network  support the PACKET SI STATUS message */

// VALTAB-FF: REL4 
// 
// Value constants for VAL_pccn_sending
// 
// #define PCCN_FIRST_SEND                (0x0)   /* This is the first sending of the Packet Cell Change Notification message; */
// #define PCCN_SECOND_SEND               (0x1)   /* This is the second sending of the Packet Cell Change Notification message */

// VALTAB-FF: REL4 
// 
// Value constants for Val_mess_rec
// 
// #define MSG_SUPPORTED_NOT_RCVD         (0x0)   /* Values Item                    */
// #define MSG_SUPPORTED_RCVD             (0x1)   /* Values Item                    */
// #define MSG_SUPPORTED_PART_RCVD        (0x2)   /* Values Item                    */
// #define MSG_SUPPORTED_COMP_RCVD        (0x3)   /* Values Item                    */

/*
 * user defined constants
 */
#define MAX_REJECT                     (0x4)      
#define MAX_NCELL_REST                 (0x5)      
#define MAX_CHAN_IMEAS                 (0x20)     
#define MAX_CHAN_EXT                   (0x40)     
#define MAX_CHAN_NC                    (0x40)     
#define MAX_RFL_NUM_LIST               (0x10)     
#define MAX_ARFCN_LIST                 (0x40)     
#define MAX_NH_PCCCH_CARRIER           (0x5)      
#define MAX_PCCCH_DES                  (0x10)     
#define MAX_M_NH_PCCCH_C               (0x2)      
#define MAX_M_H_PCCCH_C                (0x10)     
#define MAX_NCMP_S1                    (0x7)      
#define MAX_XMR_S1                     (0x20)     
#define MAX_CELL_ALLOC                 (0x4)      
#define MAX_GPRS_MS_ALLOC              (0x7)      
#define MAX_RFL_IN_PSI                 (0x4)      
#define MAX_NCELL_PAR2                 (0x5)      
#define MAX_REP_PAGE_INFO              (0x4)      
#define MAX_RFREQ                      (0x5)      
#define MAX_AFREQ                      (0x5)      
#define MAX_LIST_AFREQ                 (0x2)      
#define MAX_MSG_TYPE                   (0xa)      
#define MAX_NCELL_PARA                 (0x6)      
#define MAX_NCELL_PAR2_S1              (0x2)      
#define MAX_NCELL_PAR2_S2              (0x2)      
#define MAX_NCELL_PAR2_DES             (0x2)      
#define MAX_NH_PCCCH_C                 (0x10)     
#define MAX_FREQ_DIFF_CS_PAR           (0x8)      
#define MAX_NCELL_IN_PSI3BIS           (0x5)      
#define MAX_NCELL2_IN_PSI3BIS          (0x3)      
#define MAX_BASIC_CELL_IN_NCELL2       (0x3)      
#define MAX_REMAINING_CELL_IN_NCELL2   (0x12)     
#define MAX_NEIGHBOR_PARAMETER_SET_IN_NCELL2 (0x4)
#define MAX_NR_OF_NCELL                (0x20)     
#define MAX_CHAN_LIST                  (0x7)      
#define MAX_EXT_FREQ_LIST              (0x7)      
#define MAX_EXT_FREQ_LIST_ELEM         (0x20)     
#define MAX_NUMBER_CELLS               (0x80)     
#define MAX_CELL_DIFF_LENGTH           (0x8)      
#define MAX_3G_NEIGH_CELLS             (0x40)     
#define MAX_CONT_OCT                   (0x20)     
#define MAX_N_CBQ2                     (0x8)      
#define MAX_NR_REMAINING_CELLS         (0x10)     
#define NINETEEN                       (0x13)     
#define X7BITMAX                       (0x80)     
#define MAX_FDD                        (0x83)     
#define MAX_TDD                        (0x83)     
#define MAX_NR_OF_FREQ_OR_CELLS        (0x20)     
#define MAX_REP                        (0x100)    
#define MAX_NUM_BEP_TN                 (0x8)      
#define MAX_NUM_ACC_TYPE               (0x10)     
#define MAX_SIZE_URBB_DL               (0x90)     
#define MAX_SIZE_CRBB                  (0x7f)     
#define MAX_LSA_ID                     (0x2)      
#define MAX_SIZE_URBB_UL               (0x80)     
#define MAX_NUM_CONTAINER              (0x9)      

#include "CDG_LEAVE.h"


#endif
