/*
+--------------------------------------------------------------------------+
| PROJECT : PROTOCOL STACK                                                 |
| FILE    : m_cc.val                                                       |
| SOURCE  : "msg\cc.mdf"                                                   |
| LastModified : "2004-01-26"                                              |
| IdAndVersion : "6147.600.97.110"                                         |
| SrcFileTime  : "Wed Nov 28 10:18:32 2007"                                |
| Generated by CCDGEN_2.5.5A on Thu Sep 25 09:18:52 2014                   |
|           !!DO NOT MODIFY!!DO NOT MODIFY!!DO NOT MODIFY!!                |
+--------------------------------------------------------------------------+
*/

/* PRAGMAS
 * PREFIX                 : M_CC
 * COMPATIBILITY_DEFINES  : NO
 * ALWAYS_ENUM_IN_VAL_FILE: NO
 * ENABLE_GROUP: NO
 * CAPITALIZE_TYPENAME: NO
 * CCDNAME: CC
 */


#ifndef M_CC_VAL
#define M_CC_VAL


#define CDG_ENTER__M_CC_VAL

#define CDG_ENTER__FILENAME _M_CC_VAL
#define CDG_ENTER__M_CC_VAL__FILE_TYPE CDGINC
#define CDG_ENTER__M_CC_VAL__LAST_MODIFIED _2004_01_26
#define CDG_ENTER__M_CC_VAL__ID_AND_VERSION _6147_600_97_110

#define CDG_ENTER__M_CC_VAL__SRC_FILE_TIME _Wed_Nov_28_10_18_32_2007

#include "CDG_ENTER.h"

#undef CDG_ENTER__M_CC_VAL

#undef CDG_ENTER__FILENAME


/*
 * Value constants for VAL_access_ident
 */
#define M_CC_VAL_ACCESS_IDENT___DEF    (0x0)      /* reserved                       */
#define M_CC_AI_OCT_ID                 (0x0)      /* octet identifier               */

/*
 * Value constants for VAL_state
 */
#define M_CC_VAL_STATE___DEF           (0x0)      /* reserved                       */
#define M_CC_CS_0                      (0x0)      /* null                           */
#define M_CC_CS_01                     (0x2)      /* MM connection pending          */
#define M_CC_CS_03                     (0x23)     /* Wait for network information   */
#define M_CC_CS_05                     (0x25)     /* CC-Establishment confirmed     */
#define M_CC_CS_06                     (0x26)     /* Recall present                 */
#define M_CC_CS_1                      (0x1)      /* call initiated                 */
#define M_CC_CS_3                      (0x3)      /* mobile originating call proceeding */
#define M_CC_CS_4                      (0x4)      /* call delivered                 */
#define M_CC_CS_6                      (0x6)      /* call present                   */
#define M_CC_CS_7                      (0x7)      /* call received                  */
#define M_CC_CS_8                      (0x8)      /* connect request                */
#define M_CC_CS_9                      (0x9)      /* mobile terminating call confirmed */
#define M_CC_CS_10                     (0xa)      /* active                         */
#define M_CC_CS_11                     (0xb)      /* disconnect request             */
#define M_CC_CS_12                     (0xc)      /* disconnect indication          */
#define M_CC_CS_19                     (0x13)     /* release request                */
#define M_CC_CS_26                     (0x1a)     /* mobile originating modify      */
#define M_CC_CS_27                     (0x1b)     /* mobile terminating modify      */
#define M_CC_CS_28                     (0x1c)     /* connect indication             */

/*
 * Value constants for VAL_cause
 */
#define M_CC_CAUSE_UNASSIGN            (0x1)      /* Unassigned (unallocated) Note 9 number */
#define M_CC_CAUSE_NO_ROUTE            (0x3)      /* No route to destination        */
#define M_CC_CAUSE_CHAN_UNACCEPT       (0x6)      /* Channel unacceptable           */
#define M_CC_CAUSE_BARRED              (0x8)      /* Operator determined barring    */
#define M_CC_CAUSE_CALL_CLEAR          (0x10)     /* Normal call clearing           */
#define M_CC_CAUSE_USER_BUSY           (0x11)     /* User busy                      */
#define M_CC_CAUSE_NO_RESPONSE         (0x12)     /* No user responding             */
#define M_CC_CAUSE_ALERT_NO_ANSWER     (0x13)     /* User alerting, no answer       */
#define M_CC_CAUSE_CALL_REJECT         (0x15)     /* Call rejected                  */
#define M_CC_CAUSE_NUM_CHANGED         (0x16)     /* Number changed                 */
#define M_CC_CAUSE_PREEMPTION          (0x19)     /* Pre-emption                    */
#define M_CC_CAUSE_USER_CLEAR          (0x1a)     /* Non selected user clearing     */
#define M_CC_CAUSE_DEST_ORDER          (0x1b)     /* Destination out of order       */
#define M_CC_CAUSE_NUM_FORMAT          (0x1c)     /* Invalid number format (incomplete number) */
#define M_CC_CAUSE_FACILITY_REJECT     (0x1d)     /* Facility rejected              */
#define M_CC_CAUSE_STATUS_ENQUIRY      (0x1e)     /* Response to STATUS ENQUIRY     */
#define M_CC_CAUSE_UNSPECIFIED         (0x1f)     /* Normal, unspecified            */
#define M_CC_CAUSE_NO_CHAN_AVAIL       (0x22)     /* No circuit/channel available   */
#define M_CC_CAUSE_NETWORK_ORDER       (0x26)     /* Network out of order           */
#define M_CC_CAUSE_TEMP_FAIL           (0x29)     /* Temporary failure              */
#define M_CC_CAUSE_SWITCH_CONGEST      (0x2a)     /* Switching equipment congestion */
#define M_CC_CAUSE_INFO_DISCARD        (0x2b)     /* Access information discarded   */
#define M_CC_CAUSE_REQ_CHAN_UNAVAIL    (0x2c)     /* requested circuit/channel not available */
#define M_CC_CAUSE_RESOURCE_UNAVAIL    (0x2f)     /* Resources unavailable, unspecified */
#define M_CC_CAUSE_QOS_UNAVAIL         (0x31)     /* Quality of service unavailable */
#define M_CC_CAUSE_FACILITY_UNSUBSCRIB (0x32)     /* Requested facility not subscribed */
#define M_CC_CAUSE_BARRED_IN_CUG       (0x37)     /* Incoming calls barred within the CUG */
#define M_CC_CAUSE_BEARER_CAP_AUTHORIZ (0x39)     /* Bearer capability not authorized */
#define M_CC_CAUSE_BEARER_CAP_UNAVAIL  (0x3a)     /* Bearer capability not presently available */
#define M_CC_CAUSE_SERVICE_UNAVAIL     (0x3f)     /* Service or option not available, unspecified */
#define M_CC_CAUSE_BEARER_NOT_IMPLEM   (0x41)     /* Bearer service not implemented */
#define M_CC_CAUSE_ACM_MAX             (0x44)     /* ACM equal to or greater than ACMmax */
#define M_CC_CAUSE_FACILITY_NOT_IMPLEM (0x45)     /* Requested facility not implemented */
#define M_CC_CAUSE_RESTICT_BEARER_CAP  (0x46)     /* Only restricted digital information bearer capability is available */
#define M_CC_CAUSE_SERVICE_NOT_IMPLEM  (0x4f)     /* Service or option not implemented, unspecified */
#define M_CC_CAUSE_INVALID_TI          (0x51)     /* Invalid transaction identifier value */
#define M_CC_CAUSE_USER_NOT_IN_CUG     (0x57)     /* User not member of CUG         */
#define M_CC_CAUSE_INCOMPAT_DEST       (0x58)     /* Incompatible destination       */
#define M_CC_CAUSE_INVALID_TRANS_NET   (0x5b)     /* Invalid transit network selection */
#define M_CC_CAUSE_INCORRECT_MESSAGE   (0x5f)     /* Semantically incorrect message */
#define M_CC_CAUSE_INVALID_MAND_INFO   (0x60)     /* Invalid mandatory information  */
#define M_CC_CAUSE_MESSAGE_TYPE_NOT_IMPLEM (0x61) /* Message type non-existent or not implemented */
#define M_CC_CAUSE_MESSAGE_TYPE_INCOMPAT (0x62)   /* Message type not compatible with protocol state */
#define M_CC_CAUSE_INFO_ELEM_NOT_IMPLEM (0x63)    /* Information element nonistent or not implemented */
#define M_CC_CAUSE_COND_INFO_ELEM      (0x64)     /* Conditional IE error           */
#define M_CC_CAUSE_MESSAGE_INCOMPAT    (0x65)     /* Message not compatible with protocol state */
#define M_CC_CAUSE_TIMER               (0x66)     /* Recovery on timer expiry       */
#define M_CC_CAUSE_PROTOCOL            (0x6f)     /* Protocol error, unspecified    */
#define M_CC_CAUSE_INTERWORKING        (0x7f)     /* Interworking, unspecified      */

/*
 * Value constants for VAL_code
 */
#define M_CC_VAL_CODE___DEF            (0x0)      /* reserved                       */
#define M_CC_CSTD_GSM                  (0x0)      /* GSM standardized coding        */

/*
 * Value constants for VAL_cs
 */
#define M_CC_CS_Q931                   (0x0)      /* standardized coding as described in CCITT Rec. Q.931 */
#define M_CC_CS_INTERNATIONAL          (0x1)      /* reserved for other international standards */
#define M_CC_CS_NATIONAL               (0x2)      /* national standard              */
#define M_CC_CS_GSM_PLMN               (0x3)      /* standard defined for the GSM PLMNS as described in 10.86/GSM 04.08 */

/*
 * Value constants for VAL_compress
 */
#define M_CC_COMP_NO                   (0x0)      /* data compression not possible  */
#define M_CC_COMP_YES                  (0x1)      /* data compression possible      */

/*
 * Value constants for VAL_config
 */
#define M_CC_VAL_CONFIG___DEF          (0x0)      /* reserved                       */
#define M_CC_CONF_POINT_TO_POINT       (0x0)      /* point-to-point                 */

/*
 * Value constants for VAL_congest_lev
 */
#define M_CC_VAL_CONGEST_LEV___DEF     (0x0)      /* reserved                       */
#define M_CC_CL_RECEIVER_READY         (0x0)      /* receiver ready                 */
#define M_CC_CL_RECEIVER_NOT_READY     (0xf)      /* receiver not ready             */

/*
 * Value constants for VAL_conn_elem
 */
#define M_CC_CE_TRANSPA                (0x0)      /* transparent                    */
#define M_CC_CE_RLP                    (0x1)      /* non transparent (RLP)          */
#define M_CC_CE_TRANSPA_PREF           (0x2)      /* both, transparent preferred    */
#define M_CC_CE_RLP_PREF               (0x3)      /* both, non transparent preferred */

/*
 * Value constants for VAL_dtmf
 */
#define M_CC_DTMF_EARLY                (0x0)      /* Reserved for earlier versions of the protocol. */
#define M_CC_DTMF_CURRENT              (0x1)      /* The mobile station supports DTMF as specified in section 5.5.7 of GSM 4.08. */

/*
 * Value constants for VAL_duplex
 */
#define M_CC_DUPLEX_HALF               (0x0)      /* half duplex                    */
#define M_CC_DUPLEX_FULL               (0x1)      /* full duplex                    */

/*
 * Value constants for VAL_establish
 */
#define M_CC_VAL_ESTABLISH___DEF       (0x0)      /* reserved                       */
#define M_CC_ESTAB_DEMAND              (0x0)      /* demand                         */

/*
 * Value constants for VAL_hold
 */
#define M_CC_HLD_IDLE                  (0x0)      
#define M_CC_HLD_HOLD_REQ              (0x1)      
#define M_CC_HLD_CALL_HELD             (0x2)      
#define M_CC_HLD_RETRIEVE_REQ          (0x3)      

/*
 * Value constants for VAL_trans_cap
 */
#define M_CC_VAL_TRANS_CAP___DEF       (0x0)      /* reserved                       */
#define M_CC_ITC_SPEECH                (0x0)      /* speech                         */
#define M_CC_ITC_DIGITAL_UNRESTRICTED  (0x1)      /* unrestricted digital information */
#define M_CC_ITC_AUDIO                 (0x2)      /* audio 3.1 kHz, ex PLMN         */
#define M_CC_ITC_FAX_GROUP_3           (0x3)      /* fascimile group 3              */
#define M_CC_ITC_OTHER                 (0x5)      /* Other ITC (See octet 5a)       */
#define M_CC_ITC_AUXILIARY_SPEECH      (0x6)      /* Auxiliary speech               */
#define M_CC_ITC_NETWORK_RESERVED      (0x7)      /* reserved, to be used in the network. */

/*
 * Value constants for VAL_intermed_rate
 */
#define M_CC_VAL_INTERMED_RATE___DEF   (0x0)      /* reserved                       */
#define M_CC_IR_8_KBIT                 (0x2)      /* 8 kbit/s                       */
#define M_CC_IR_16_KBIT                (0x3)      /* 16 kbit/s                      */

/*
 * Value constants for VAL_l1_ident
 */
#define M_CC_VAL_L1_IDENT___DEF        (0x0)      /* reserved                       */
#define M_CC_L1_OCT_ID                 (0x1)      /* octet identifier               */

/*
 * Value constants for VAL_l2_ident
 */
#define M_CC_VAL_L2_IDENT___DEF        (0x0)      /* reserved                       */
#define M_CC_L2_OCT_ID                 (0x2)      /* octet identifier               */

/*
 * Value constants for VAL_loc
 */
#define M_CC_VAL_LOC___DEF             (0x0)      /* reserved                       */
#define M_CC_LOC_USER                  (0x0)      /* user                           */
#define M_CC_LOC_PRIV_NET_LOCAL_USER   (0x1)      /* private network serving the local user */
#define M_CC_LOC_PUB_NET_LOCAL_USER    (0x2)      /* public network serving the local user */
#define M_CC_LOC_TRANSIT_NET           (0x3)      /* transit network                */
#define M_CC_LOC_PUB_NET_REMOTE_USER   (0x4)      /* public network serving the remote user */
#define M_CC_LOC_PRIV_NET_REMOTE_USER  (0x5)      /* private network serving the remote user */
#define M_CC_LOC_INTERNATIONAL_NET     (0x7)      /* international network          */
#define M_CC_LOC_BEYOND_POINT          (0xa)      /* network beyond interworking point */

/*
 * Value constants for VAL_modem_type
 */
#define M_CC_VAL_MODEM_TYPE___DEF      (0x0)      /* reserved                       */
#define M_CC_MT_NONE                   (0x0)      /* none                           */
#define M_CC_MT_V21                    (0x1)      /* V.21                           */
#define M_CC_MT_V22                    (0x2)      /* V.22                           */
#define M_CC_MT_V22BIS                 (0x3)      /* V.22 bis                       */
#define M_CC_MT_V23                    (0x4)      /* V.23, (GSM R97 only)           */
#define M_CC_MT_V26TER                 (0x5)      /* V.26 ter                       */
#define M_CC_MT_V32                    (0x6)      /* V.32                           */
#define M_CC_MT_UNDEF                  (0x7)      /* modem for undefined interface  */
#define M_CC_MT_AUTO                   (0x8)      /* autobauding type 1             */

/*
 * Value constants for VAL_mpty
 */
#define M_CC_MPTY_IDLE                 (0x0)      
#define M_CC_MPTY_REQ                  (0x1)      
#define M_CC_MPTY_CALL                 (0x2)      
#define M_CC_MPTY_SPLIT                (0x3)      

/*
 * Value constants for VAL_negotiate
 */
#define M_CC_VAL_NEGOTIATE___DEF       (0x0)      /* reserved                       */
#define M_CC_NEGOTIATE_NO              (0x0)      /* in-band negotiation not possible */

/*
 * Value constants for VAL_nirr
 */
#define M_CC_NIRR_NO_MEANING           (0x0)      /* No meaning is associated with this value. */
#define M_CC_NIRR_DATA                 (0x1)      /* Data up to and including 4.8 kb/s, full rate, non-transparent, 6 kb/s radio interface rate is requested. */

/*
 * Value constants for VAL_nic_rx
 */
#define M_CC_NIC_RX_NO                 (0x0)      /* cannot accept data with network independent clock (i.e. sender does not support this optional procedure) */
#define M_CC_NIC_RX_YES                (0x1)      /* can accept data with network independent clock (i.e. sender does support this optional procedure) */

/*
 * Value constants for VAL_nic_tx
 */
#define M_CC_NIC_TX_NO                 (0x0)      /* does not require to send data with network independent clock */
#define M_CC_NIC_TX_YES                (0x1)      /* requires to send data with network independent clock */

/*
 * Value constants for VAL_nd
 */
#define M_CC_VAL_ND___DEF              (0x0)      /* reserved                       */
#define M_CC_ND_USER_SUSPEND           (0x0)      
#define M_CC_ND_USED_RESUME            (0x1)      
#define M_CC_ND_BEARER_CHANGE          (0x2)      

/*
 * Value constants for VAL_npi
 */
#define M_CC_VAL_NPI___DEF             (0x0)      /* reserved                       */
#define M_CC_NPI_UNKNOWN               (0x0)      /* unknown                        */
#define M_CC_NPI_ISDN                  (0x1)      /* ISDN/telephony numbering plan (Rec. E.164/E.163) */
#define M_CC_NPI_X121                  (0x3)      /* data numbering plan (Recommendation X.121) */
#define M_CC_NPI_F69                   (0x4)      /* telex numbering plan (Recommendation F.69) */
#define M_CC_NPI_NATIONAL              (0x8)      /* national numbering plan        */
#define M_CC_NPI_PRIVATE               (0x9)      /* private numbering plan         */
#define M_CC_NPI_CTS                   (0xb)      /* Reserved for CTS               */
#define M_CC_NPI_EXTENSTION            (0xf)      /* reserved for extension         */

/*
 * Value constants for VAL_num_data
 */
#define M_CC_NDATA_7                   (0x0)      /* 7 bits                         */
#define M_CC_NDATA_8                   (0x1)      /* 8 bits (this value is also used in the case of bit oriented protocols) */

/*
 * Value constants for VAL_num_stop
 */
#define M_CC_NSTOP_1                   (0x0)      /* 1 bit (This value is also used in the case of synchronous mode) */
#define M_CC_NSTOP_2                   (0x1)      /* 2 bits                         */

/*
 * Value constants for VAL_odd_even
 */
#define M_CC_OE_EVEN                   (0x0)      /* even number of address signals */
#define M_CC_OE_ODD                    (0x1)      /* odd number of address signals  */

/*
 * Value constants for VAL_parity
 */
#define M_CC_VAL_PARITY___DEF          (0x0)      /* reserved                       */
#define M_CC_PARITY_ODD                (0x0)      /* odd                            */
#define M_CC_PARITY_EVEN               (0x2)      /* even                           */
#define M_CC_PARITY_NONE               (0x3)      /* none                           */
#define M_CC_PARITY_0                  (0x4)      /* forced to 0                    */
#define M_CC_PARITY_1                  (0x5)      /* forced to 1                    */

/*
 * Value constants for VAL_present
 */
#define M_CC_VAL_PRESENT___DEF         (0x0)      /* reserved                       */
#define M_CC_PRES_ALLOWED              (0x0)      /* Presentation allowed           */
#define M_CC_PRES_RESTRICTED           (0x1)      /* Presentation restricted        */
#define M_CC_PRES_NOT_AVAIL            (0x2)      /* Number not available due to interworking */

/*
 * Value constants for VAL_progress_desc
 */
#define M_CC_VAL_PROGRESS_DESC___DEF   (0x0)      /* Unspecific                     */
#define M_CC_PROG_NO_END_TO_END_PLMN   (0x1)      /* Call is not end-to-end PLMN/ISDN, further call progress information may be available in-band */
#define M_CC_PROG_DEST_NON_PLMN        (0x2)      /* Destination address in non-PLMN/ISDN */
#define M_CC_PROG_ORIGIN_NON_PLMN      (0x3)      /* Origination address in non-PLMN/ISDN */
#define M_CC_PROG_RETURN_TO_PLMN       (0x4)      /* Call has returned to the PLMN/ISDN */
#define M_CC_PROG_INBAND_AVAIL         (0x8)      /* In-band information or appropriate pattern now available */
#define M_CC_PROG_END_TO_END_PLMN      (0x20)     /* Call is end-to-end PLMN/ISDN   */
#define M_CC_PROG_QUEUEING             (0x40)     /* Queueing                       */

/*
 * Value constants for VAL_rad_chan_req
 */
#define M_CC_VAL_RAD_CHAN_REQ___DEF    (0x0)      /* reserved                       */
#define M_CC_RCR_FULL_ONLY             (0x1)      /* full rate support only mobile station */
#define M_CC_RCR_HALF_PREF             (0x2)      /* dual rate support mobile station/half rate preferred */
#define M_CC_RCR_FULL_PREF             (0x3)      /* dual rate support mobile station/full rate preferred */

/*
 * Value constants for VAL_rate_adapt
 */
#define M_CC_RA_NONE                   (0x0)      /* no rate adaption               */
#define M_CC_RA_V110                   (0x1)      /* V.110/X.30 rate adaption       */
#define M_CC_RA_X31                    (0x2)      /* CCITT X.31 flag stuffing       */
#define M_CC_RA_OTHER                  (0x3)      /* Other rate adaption            */

/*
 * Value constants for VAL_repeat
 */
#define M_CC_VAL_REPEAT___DEF          (0x0)      /* Reserved                       */
#define M_CC_REPEAT_CIRCULAR           (0x1)      /* Circular for successive selection 'mode 1 alternate mode 2' */
#define M_CC_REPEAT_FALLBACK           (0x2)      /* Support of fallback - mode 1 preferred, mode 2 if setup of mode 1 fails */
#define M_CC_REPEAT_SEQUENTIAL         (0x3)      /* Sequential for successive selection 'mode 1 and then mode 2' (GSM R97 only) */

/*
 * Value constants for VAL_screen
 */
#define M_CC_SCR_USER_UNSCREENED       (0x0)      /* User-provided, not screened    */
#define M_CC_SCR_USER_PASSED           (0x1)      /* User-provided, verified and passed */
#define M_CC_SCR_USER_FAILED           (0x2)      /* User-provided, verified and failed */
#define M_CC_SCR_NETWORD               (0x3)      /* Network provided               */

/*
 * Value constants for VAL_signal
 */
#define M_CC_VAL_SIGNAL___DEF          (0x0)      /* reserved                       */
#define M_CC_SIGNAL_DIAL_ON            (0x0)      /* dial tone on                   */
#define M_CC_SIGNAL_BACK_ON            (0x1)      /* ring back tone on              */
#define M_CC_SIGNAL_INTERCEPT_ON       (0x2)      /* intercept tone on              */
#define M_CC_SIGNAL_CONGEST_ON         (0x3)      /* network congestion tone on     */
#define M_CC_SIGNAL_BUSY_ON            (0x4)      /* busy tone on                   */
#define M_CC_SIGNAL_CONFIRM_ON         (0x5)      /* confirm tone on                */
#define M_CC_SIGNAL_ANSWER_ON          (0x6)      /* answer tone on                 */
#define M_CC_SIGNAL_WAITING_ON         (0x7)      /* call waiting tone on           */
#define M_CC_SIGNAL_HOOK_OFF_ON        (0x8)      /* off-hook warning tone on       */
#define M_CC_SIGNAL_TONES_OFF          (0x3f)     /* tones off                      */
#define M_CC_SIGNAL_ALERT_OFF          (0x4f)     /* alerting off                   */

/*
 * Value constants for VAL_sig_access_prot
 */
#define M_CC_VAL_SIG_ACCESS_PROT___DEF (0x0)      /* reserved                       */
#define M_CC_SIAP_I440                 (0x1)      /* I.440/450                      */
#define M_CC_SIAP_X28_INDIV_NUI        (0x3)      /* X.28 - dedicated PAD, individual NUI (GSM R97 only) */
#define M_CC_SIAP_X28_UNIV_NUI         (0x4)      /* X.28 - dedicated PAD, universal NUI (GSM R97 only) */
#define M_CC_SIAP_X28_NON_DEDIC        (0x5)      /* X.28 - non dedicated PAD (GSM R97 only) */
#define M_CC_SIAP_X32                  (0x6)      /* X.32                           */

/*
 * Value constants for VAL_structure
 */
#define M_CC_VAL_STRUCTURE___DEF       (0x0)      /* reserved                       */
#define M_CC_STRC_SERV_DATA_INTEG      (0x0)      /* service data unit integrity    */
#define M_CC_STRC_UNSTRUCTURED         (0x3)      /* unstructured                   */

/*
 * Value constants for VAL_sync_async
 */
#define M_CC_SYNCHRONOUS               (0x0)      /* synchronous                    */
#define M_CC_ASYNCHRONOUS              (0x1)      /* asynchronous                   */

/*
 * Value constants for VAL_trans_mode
 */
#define M_CC_TM_CIRCUIT                (0x0)      /* circuit mode                   */
#define M_CC_TM_PACKET                 (0x1)      /* packet mode                    */

/*
 * Value constants for VAL_ton
 */
#define M_CC_VAL_TON___DEF             (0x0)      /* reserved                       */
#define M_CC_TON_UNKNOWN               (0x0)      /* unknown                        */
#define M_CC_TON_INTERNATIONAL         (0x1)      /* international number           */
#define M_CC_TON_NATIONAL              (0x2)      /* national number                */
#define M_CC_TON_NETWORK               (0x3)      /* network specific number        */
#define M_CC_TON_DEDICATED             (0x4)      /* dedicated access, short code   */
#define M_CC_TON_EXTENSION             (0x7)      /* reserved for extention         */

/*
 * Value constants for VAL_tos
 */
#define M_CC_VAL_TOS___DEF             (0x0)      /* reserved                       */
#define M_CC_TOS_NSAP                  (0x0)      /* NSAP (X.213/ISO 8348 AD2)      */
#define M_CC_TOS_USER                  (0x2)      /* User specified                 */

/*
 * Value constants for VAL_user_inf_l1_prot
 */
#define M_CC_VAL_USER_INF_L1_PROT___DEF (0x0)     /* reserved                       */
#define M_CC_L1_DEFAULT                (0x0)      /* default layer 1 protocol       */

/*
 * Value constants for VAL_user_inf_l2_prot
 */
#define M_CC_VAL_USER_INF_L2_PROT___DEF (0x0)     /* reserved                       */
#define M_CC_L2_X25                    (0x6)      /* recommendation X.25, link level */
#define M_CC_L2_ISO6429                (0x8)      /* ISO 6429, codeset 0 (DC1/DC3)  */
#define M_CC_L2_VIDEOTEX               (0xa)      /* videotex profile 1             */
#define M_CC_L2_COPFC                  (0xc)      /* COPnoFlCt (Character oriented Protocol with no Flow Control mechanism) */
#define M_CC_L2_X75                    (0xd)      /* X.75 layer 2 modified (CAPI)   */

/*
 * Value constants for VAL_user_rate
 */
#define M_CC_VAL_USER_RATE___DEF       (0x0)      /* reserved                       */
#define M_CC_UR_0_3_KBIT               (0x1)      /* rate : 0.3 kbit/s Recommendation X.1 and V.110 */
#define M_CC_UR_1_2_KBIT               (0x2)      /* rate : 1.2 kbit/s Recommendation X.1 and V.110 */
#define M_CC_UR_2_4_KBIT               (0x3)      /* rate : 2.4 kbit/s Recommendation X.1 and V.110 */
#define M_CC_UR_4_8_KBIT               (0x4)      /* rate : 4.8 kbit/s Recommendation X.1 and V.110 */
#define M_CC_UR_9_6_KBIT               (0x5)      /* rate : 9.6 kbit/s Recommendation X.1 and V.110 */
#define M_CC_UR_12_0_KBIT_TRANS        (0x6)      /* rate : 12.0 kbit/s transparent */
#define M_CC_UR_1_2_KBIT_V23           (0x7)      /* rate: 1.2 kbit/s, 75bit/s V.23, X.1, V.110 (GSM R97 only) */

/*
 * Value constants for VAL_pd
 */
#define M_CC_VAL_PD___DEF              (0x0)      /* reserved                       */
#define M_CC_PD_USER                   (0x0)      /* User specific protocol         */
#define M_CC_PD_HIGH_LAYER             (0x1)      /* OSI high layer protocols       */
#define M_CC_PD_X244                   (0x2)      /* X.244                          */
#define M_CC_PD_SYS_MANAGE             (0x3)      /* Reserved for system management convergence function */
#define M_CC_PD_IA5                    (0x4)      /* IA5 characters                 */
#define M_CC_PD_V120                   (0x7)      /* Rec.V.120 rate adaption        */
#define M_CC_PD_Q931                   (0x8)      /* Q.931 (I.451) user-network call control messages */

/*
 * Value constants for VAL_speech_vers1
 */
#define M_CC_SPEECH_VERS_FR            (0x0)      /* full rate speech version 1     */
#define M_CC_SPEECH_VERS_HR            (0x1)      /* half rate speech version 1     */
#define M_CC_SPEECH_VERS_EFR           (0x2)      /* full rate speech version 2 (enhanced full rate) */
#define M_CC_SPEECH_VERS_AMR_HR        (0x5)      /* half rate speech version 3 (AHS) */
#define M_CC_SPEECH_VERS_AMR_FR        (0x4)      /* full rate speech version 3 (AFS) */
#define M_CC_SPEECH_VERS_NONE          (0xf)      /* no speech version given        */

/*
 * Value constants for VAL_modem_type_2
 */
#define M_CC_OTHER_MODEM_TYPE_NONE     (0x0)      /* No other modem type specified  */
#define M_CC_OTHER_MODEM_TYPE_V32BIS   (0x1)      /* V.32bis (GSM R97 only)         */
#define M_CC_OTHER_MODEM_TYPE_V34      (0x2)      /* V.34                           */

/*
 * Value constants for VAL_fnur
 */
#define M_CC_FNUR_NOT_APPLICABLE       (0x0)      /* Fixed network user rate not applicable */
#define M_CC_FNUR_9600                 (0x1)      /* FNUR 9.6 kbit/s                */
#define M_CC_FNUR_14400                (0x2)      /* FNUR 14.4 kbit/s               */
#define M_CC_FNUR_19200                (0x3)      /* FNUR 19.2 kbit/s               */
#define M_CC_FNUR_28800                (0x4)      /* FNUR 28.8 kbit/s               */
#define M_CC_FNUR_38400                (0x5)      /* FNUR 38.4 kbit/s               */
#define M_CC_FNUR_48000                (0x6)      /* FNUR 48.0 kbit/s               */
#define M_CC_FNUR_56000                (0x7)      /* FNUR 56.0 kbit/s               */
#define M_CC_FNUR_64000                (0x8)      /* FNUR 64.0 kbit/s               */
#define M_CC_FNUR_33600                (0x9)      /* FNUR 33.6 kbit/s - bit transparent (UMTS only) */
#define M_CC_FNUR_32000                (0xa)      /* FNUR 32.0 kbit/s - I.460       */
#define M_CC_FNUR_31200                (0xb)      /* FNUR 31.2 kbit/s - V.34 (UMTS and 3,1 khz only) */

/*
 * Value constants for VAL_acc
 */
#define M_CC_ACC_EMPTY                 (0x0)      /* No channel codings acceptable  */
#define M_CC_ACC_48                    (0x1)      /* TCH 4.8 acceptable             */
#define M_CC_ACC_96                    (0x2)      /* TCH 9.6 acceptable             */
#define M_CC_ACC_144                   (0x8)      /* TCH 14.4 acceptable            */
#define M_CC_ACC_ALL                   (0xb)      /* All channel codings acceptable */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_acc_ext_288
 */
// VAL-FF: REL99  
#define M_CC_acc_ext_288_not_ok        (0x0)      /* TCH/28.8 not acceptable        */
// VAL-FF: REL99  
#define M_CC_acc_ext_288_ok            (0x1)      /* TCH/28.8 acceptable            */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_acc_ext_320
 */
// VAL-FF: REL99  
#define M_CC_acc_ext_320_not_ok        (0x0)      /* TCH/32.0 not acceptable        */
// VAL-FF: REL99  
#define M_CC_acc_ext_320_ok            (0x1)      /* TCH/32.0 acceptable            */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_acc_ext_432
 */
// VAL-FF: REL99  
#define M_CC_acc_ext_432_not_ok        (0x0)      /* TCH/43.2 not acceptable        */
// VAL-FF: REL99  
#define M_CC_acc_ext_432_ok            (0x1)      /* TCH/43.2 acceptable            */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_ch_cod_asym
 */
// VAL-FF: REL99  
#define M_CC_CH_COD_SYM_PREF           (0x0)      /* Channel coding symmetry preferred */
// VAL-FF: REL99  
#define M_CC_CH_COD_DL_BIAS            (0x1)      /* Downlink biased channel coding asymmetry preferred */
// VAL-FF: REL99  
#define M_CC_CH_COD_UL_BIAS            (0x2)      /* Uplink biased channel coding asymmetry preferred */
// VAL-FF: REL99  
#define M_CC_CH_COD_SYM_PREFX          (0x3)      /* Unused, interpret as Channel coding symmetry preferred */

/*
 * Value constants for VAL_mTch
 */
#define M_CC_MAX_TCH_1                 (0x0)      /* Maximum of 1 TCH               */
#define M_CC_MAX_TCH_2                 (0x1)      /* Maximum of 2 TCH               */
#define M_CC_MAX_TCH_3                 (0x2)      /* Maximum of 3 TCH               */
#define M_CC_MAX_TCH_4                 (0x3)      /* Maximum of 4 TCH               */
#define M_CC_MAX_TCH_5                 (0x4)      /* Maximum of 5 TCH               */
#define M_CC_MAX_TCH_6                 (0x5)      /* Maximum of 6 TCH               */
#define M_CC_MAX_TCH_7                 (0x6)      /* Maximum of 7 TCH               */
#define M_CC_MAX_TCH_8                 (0x7)      /* Maximum of 8 TCH               */

/*
 * Value constants for VAL_uimi
 */
#define M_CC_UIMI_NOT_ALLOWED          (0x0)      /* User initiated modification not allowed/required */
#define M_CC_UIMI_MAX_1_TCH            (0x1)      /* User initiated modification up to 1 TCH/F */
#define M_CC_UIMI_MAX_2_TCH            (0x2)      /* User initiated modification up to 2 TCH/F */
#define M_CC_UIMI_MAX_3_TCH            (0x3)      /* User initiated modification up to 3 TCH/F */
#define M_CC_UIMI_MAX_4_TCH            (0x4)      /* User initiated modification up to 4 TCH/F */

/*
 * Value constants for VAL_waiur
 */
#define M_CC_VAL_WAIUR___DEF           (0x0)      /* Reserved                       */
#define M_CC_WAIUR_NOT_APPLICABLE      (0x0)      /* Wanted Air Interface user rate not applicable */
#define M_CC_WAIUR_9600                (0x1)      /* WAIUR 9.6 kbit/s               */
#define M_CC_WAIUR_14400               (0x2)      /* WAIUR 14.4 kbit/s              */
#define M_CC_WAIUR_19200               (0x3)      /* WAIUR 19.2 kbit/s              */
#define M_CC_WAIUR_28800               (0x5)      /* WAIUR 28.8 kbit/s              */
#define M_CC_WAIUR_38400               (0x6)      /* WAIUR 38.4 kbit/s              */
#define M_CC_WAIUR_43200               (0x7)      /* WAIUR 43.2 kbit/s              */
#define M_CC_WAIUR_57600               (0x8)      /* WAIUR 57.6 kbit/s              */
#define M_CC_WAIUR_38400_INT_1         (0x9)      /* Interpreted as 38.4 kbps by the network */
#define M_CC_WAIUR_38400_INT_2         (0xa)      /* Interpreted as 38.4 kbps by the network */
#define M_CC_WAIUR_38400_INT_3         (0xb)      /* Interpreted as 38.4 kbps by the network */
#define M_CC_WAIUR_38400_INT_4         (0xc)      /* Interpreted as 38.4 kbps by the network */

/*
 * Value constants for VAL_ccbs_act
 */
#define M_CC_CCBS_NO                   (0x0)      /* CCBS is not possible           */
#define M_CC_CCBS_YES                  (0x1)      /* CCBS is possible               */

/*
 * Value constants for VAL_pcp
 */
#define M_CC_PCP_NO                    (0x0)      /* Mobile does not support prolonged clearing procedure */
#define M_CC_PCP_YES                   (0x1)      /* Mobile supports prolonged clearing procedure */

/*
 * Value constants for VAL_rcl_type
 */
#define M_CC_CCBS                      (0x0)      /* CCBS                           */
#define M_CC_CCBS_1                    (0x1)      /* Shall be treated as CCBS (intended for other similar types of Recall) */
#define M_CC_CCBS_2                    (0x2)      /* Shall be treated as CCBS (intended for other similar types of Recall) */
#define M_CC_CCBS_3                    (0x3)      /* Shall be treated as CCBS (intended for other similar types of Recall) */
#define M_CC_CCBS_4                    (0x4)      /* Shall be treated as CCBS (intended for other similar types of Recall) */
#define M_CC_CCBS_5                    (0x5)      /* Shall be treated as CCBS (intended for other similar types of Recall) */
#define M_CC_CCBS_6                    (0x6)      /* Shall be treated as CCBS (intended for other similar types of Recall) */

/*
 * Value constants for VAL_coding_bc3x1
 */
#define M_CC_CODING_BC3X_SPEECH        (0x0)      /* Octet 3x of IE Bearer Capabilities indicates speech codec version */
#define M_CC_CODING_BC3X_OTHER         (0x1)      /* Octet 3x of IE Bearer Capabilities used for other extension of octet 3 */

/*
 * Value constants for VAL_ctm
 */
#define M_CC_CTM_NO                    (0x0)      /* Mobile does not support prolonged clearing procedure */
#define M_CC_CTM_YES                   (0x1)      /* Mobile supports prolonged clearing procedure */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_other_itc
 */
#define M_CC_VAL_OTHER_ITC___DEF       (0x0)      /* Reserved                       */
// VAL-FF: REL99  
#define M_CC_ITC_DIGITAL_RESTRICTED    (0x0)      /* Restricted digital information */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_other_ra
 */
#define M_CC_VAL_OTHER_RA___DEF        (0x0)      /* Reserved                       */
// VAL-FF: REL99  
#define M_CC_RA_V120                   (0x0)      /* V.120                          */
// VAL-FF: REL99  
#define M_CC_RA_H223_H245              (0x1)      /* H.223 and H.245                */
// VAL-FF: REL99  
#define M_CC_RA_PIAFS                  (0x2)      /* PIAFS                          */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_ra_header
 */
// VAL-FF: REL99  
#define M_CC_RA_NO_HEADER              (0x0)      /* Rate adaption header not included */
// VAL-FF: REL99  
#define M_CC_RA_HEADER_INCLUDED        (0x1)      /* Rate adaption header included  */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_multiple_frame
 */
// VAL-FF: REL99  
#define M_CC_MULTIPLE_FRAME_NO         (0x0)      /* Multiple frame establishment not supported, only UI frames allowed */
// VAL-FF: REL99  
#define M_CC_MULTIPLE_FRAME_YES        (0x1)      /* Multiple frame establishment supported */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_mode_of_operation
 */
// VAL-FF: REL99  
#define M_CC_BIT_TRANSPARENT           (0x0)      /* Bit transparent mode of operation */
// VAL-FF: REL99  
#define M_CC_PROTOCOL_SENSITIVE        (0x1)      /* Protocol sensitive mode of operation */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_lli_negotiation
 */
// VAL-FF: REL99  
#define M_CC_LLI_DEFAULT               (0x0)      /* Default LLI=256 only           */
// VAL-FF: REL99  
#define M_CC_LLI_FULL                  (0x1)      /* Full protocol negotiation      */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_assignor_assignee
 */
// VAL-FF: REL99  
#define M_CC_DEFAULT_ASSIGNEE          (0x0)      /* Message originator is default assignee */
// VAL-FF: REL99  
#define M_CC_ASSIGNOR_ONLY             (0x1)      /* Message originator is assignor only */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_in_out_band_negotiation
 */
// VAL-FF: REL99  
#define M_CC_INBAND_NEGOTIATION        (0x0)      /* Negotiation is done inband using logical link zero */
// VAL-FF: REL99  
#define M_CC_OUTBAND_NEGOTIATION       (0x1)      /* Negotiation is done with USER INFORMATION messages on a temporary signalling connection */

/*
 * Value constants for VAL_max_nof_supp_bearers
 */
#define M_CC_VAL_MAX_NOF_SUPP_BEARERS___DEF (0x0) /* Reserved                       */
#define M_CC_MAX_NOF_SUPP_BEARER_1     (0x1)      /* 1  bearer suppported           */

/*
 * Value constants for VAL_max_nof_supp_speech_bearers
 */
#define M_CC_VAL_MAX_NOF_SUPP_SPEECH_BEARERS___DEF (0x0)/* Reserved                       */
#define M_CC_MAX_NOF_SUPP_SPEECH_BEARER_0 (0x0)   /* 0 speech bearer suppported     */
#define M_CC_MAX_NOF_SUPP_SPEECH_BEARER_1 (0x1)   /* 1 speech bearer suppported     */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_cause_no_cli
 */
#define M_CC_VAL_CAUSE_NO_CLI___DEF    (0x0)      /* Other values shall be interpreted as Unavailable */
// VAL-FF: REL99  
#define M_CC_CAUSE_NO_CLI_UNAVAILABLE  (0x0)      /* CLI is unavailable             */
// VAL-FF: REL99  
#define M_CC_CAUSE_NO_CLI_USER_REJECT  (0x1)      /* CLI rejected by remote user    */
// VAL-FF: REL99  
#define M_CC_CAUSE_NO_CLI_INTERACT_OTHER_SERVICE (0x2)/* Interaction with other service */
// VAL-FF: REL99  
#define M_CC_CAUSE_NO_CLI_PAYPHONE     (0x3)      /* Coin line/payphone             */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_priority_grant
 */
// VAL-FF: REL99  
#define M_CC_PRIO_NONE                 (0x0)      /* no priority applied            */
// VAL-FF: REL99  
#define M_CC_PRIO_4                    (0x1)      /* call priority level 4          */
// VAL-FF: REL99  
#define M_CC_PRIO_3                    (0x2)      /* call priority level 3          */
// VAL-FF: REL99  
#define M_CC_PRIO_2                    (0x3)      /* call priority level 2          */
// VAL-FF: REL99  
#define M_CC_PRIO_1                    (0x4)      /* call priority level 1          */
// VAL-FF: REL99  
#define M_CC_PRIO_0                    (0x5)      /* call priority level 0          */
// VAL-FF: REL99  
#define M_CC_PRIO_B                    (0x6)      /* call priority level B          */
// VAL-FF: REL99  
#define M_CC_PRIO_A                    (0x7)      /* call priority level A          */

// VALTAB-FF: REL99 
/*
 * Value constants for VAL_alerting_pat
 */
#define M_CC_VAL_ALERTING_PAT___DEF    (0x0)      /* Reserved                       */
// VAL-FF: REL99  
#define M_CC_ALERT_1                   (0x0)      /* alerting pattern 1             */
// VAL-FF: REL99  
#define M_CC_ALERT_2                   (0x1)      /* alerting pattern 2             */
// VAL-FF: REL99  
#define M_CC_ALERT_3                   (0x2)      /* alerting pattern 3             */
// VAL-FF: REL99  
#define M_CC_ALERT_5                   (0x4)      /* alerting pattern 5             */
// VAL-FF: REL99  
#define M_CC_ALERT_6                   (0x5)      /* alerting pattern 6             */
// VAL-FF: REL99  
#define M_CC_ALERT_7                   (0x6)      /* alerting pattern 7             */
// VAL-FF: REL99  
#define M_CC_ALERT_8                   (0x7)      /* alerting pattern 8             */
// VAL-FF: REL99  
#define M_CC_ALERT_9                   (0x8)      /* alerting pattern 9             */

/*
 * user defined constants
 */
#define M_CC_L3MAX                     (0xfb)     
#define M_CC_MAX_SS_VERSION            (0x1)      
#define M_CC_MAX_USER_USER_LENGTH      (0x80)     

#include "CDG_LEAVE.h"


#endif
